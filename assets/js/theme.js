(function(){var __webpack_modules__={42:function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * hoverIntent v1.9.0 // 2017.09.01 // jQuery v1.7.0+\n * http://briancherne.github.io/jquery-hoverIntent/\n *\n * You may use hoverIntent under the terms of the MIT license. Basically that\n * means you are free to use hoverIntent as long as this header is left intact.\n * Copyright 2007-2017 Brian Cherne\n */\n!function (factory) {\n  "use strict";\n\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(669)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;\n}(function ($) {\n  "use strict";\n\n  var cX,\n    cY,\n    _cfg = {\n      interval: 100,\n      sensitivity: 6,\n      timeout: 0\n    },\n    INSTANCE_COUNT = 0,\n    track = function track(ev) {\n      cX = ev.pageX, cY = ev.pageY;\n    },\n    _compare = function compare(ev, $el, s, cfg) {\n      if (Math.sqrt((s.pX - cX) * (s.pX - cX) + (s.pY - cY) * (s.pY - cY)) < cfg.sensitivity) return $el.off(s.event, track), delete s.timeoutId, s.isActive = !0, ev.pageX = cX, ev.pageY = cY, delete s.pX, delete s.pY, cfg.over.apply($el[0], [ev]);\n      s.pX = cX, s.pY = cY, s.timeoutId = setTimeout(function () {\n        _compare(ev, $el, s, cfg);\n      }, cfg.interval);\n    },\n    delay = function delay(ev, $el, s, out) {\n      return delete $el.data("hoverIntent")[s.id], out.apply($el[0], [ev]);\n    };\n  $.fn.hoverIntent = function (handlerIn, handlerOut, selector) {\n    var instanceId = INSTANCE_COUNT++,\n      cfg = $.extend({}, _cfg);\n    $.isPlainObject(handlerIn) ? (cfg = $.extend(cfg, handlerIn), $.isFunction(cfg.out) || (cfg.out = cfg.over)) : cfg = $.isFunction(handlerOut) ? $.extend(cfg, {\n      over: handlerIn,\n      out: handlerOut,\n      selector: selector\n    }) : $.extend(cfg, {\n      over: handlerIn,\n      out: handlerIn,\n      selector: handlerOut\n    });\n    var handleHover = function handleHover(e) {\n      var ev = $.extend({}, e),\n        $el = $(this),\n        hoverIntentData = $el.data("hoverIntent");\n      hoverIntentData || $el.data("hoverIntent", hoverIntentData = {});\n      var state = hoverIntentData[instanceId];\n      state || (hoverIntentData[instanceId] = state = {\n        id: instanceId\n      }), state.timeoutId && (state.timeoutId = clearTimeout(state.timeoutId));\n      var mousemove = state.event = "mousemove.hoverIntent.hoverIntent" + instanceId;\n      if ("mouseenter" === e.type) {\n        if (state.isActive) return;\n        state.pX = ev.pageX, state.pY = ev.pageY, $el.off(mousemove, track).on(mousemove, track), state.timeoutId = setTimeout(function () {\n          _compare(ev, $el, state, cfg);\n        }, cfg.interval);\n      } else {\n        if (!state.isActive) return;\n        $el.off(mousemove, track), state.timeoutId = setTimeout(function () {\n          delay(ev, $el, state, cfg.out);\n        }, cfg.timeout);\n      }\n    };\n    return this.on({\n      "mouseenter.hoverIntent": handleHover,\n      "mouseleave.hoverIntent": handleHover\n    }, cfg.selector);\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJlc3Rhcm9ja2V0LWRldi10b29scy8uL2pzL2xpYi9qcXVlcnkuaG92ZXJJbnRlbnQubWluLmpzPzljY2IiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBob3ZlckludGVudCB2MS45LjAgLy8gMjAxNy4wOS4wMSAvLyBqUXVlcnkgdjEuNy4wK1xuICogaHR0cDovL2JyaWFuY2hlcm5lLmdpdGh1Yi5pby9qcXVlcnktaG92ZXJJbnRlbnQvXG4gKlxuICogWW91IG1heSB1c2UgaG92ZXJJbnRlbnQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBNSVQgbGljZW5zZS4gQmFzaWNhbGx5IHRoYXRcbiAqIG1lYW5zIHlvdSBhcmUgZnJlZSB0byB1c2UgaG92ZXJJbnRlbnQgYXMgbG9uZyBhcyB0aGlzIGhlYWRlciBpcyBsZWZ0IGludGFjdC5cbiAqIENvcHlyaWdodCAyMDA3LTIwMTcgQnJpYW4gQ2hlcm5lXG4gKi9cbiFmdW5jdGlvbiAoZmFjdG9yeSkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGRlZmluZSAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKFtcImpxdWVyeVwiXSwgZmFjdG9yeSkgOiBqUXVlcnkgJiYgIWpRdWVyeS5mbi5ob3ZlckludGVudCAmJiBmYWN0b3J5KGpRdWVyeSk7XG59KGZ1bmN0aW9uICgkKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBjWCxcbiAgICBjWSxcbiAgICBfY2ZnID0ge1xuICAgICAgaW50ZXJ2YWw6IDEwMCxcbiAgICAgIHNlbnNpdGl2aXR5OiA2LFxuICAgICAgdGltZW91dDogMFxuICAgIH0sXG4gICAgSU5TVEFOQ0VfQ09VTlQgPSAwLFxuICAgIHRyYWNrID0gZnVuY3Rpb24gdHJhY2soZXYpIHtcbiAgICAgIGNYID0gZXYucGFnZVgsIGNZID0gZXYucGFnZVk7XG4gICAgfSxcbiAgICBfY29tcGFyZSA9IGZ1bmN0aW9uIGNvbXBhcmUoZXYsICRlbCwgcywgY2ZnKSB7XG4gICAgICBpZiAoTWF0aC5zcXJ0KChzLnBYIC0gY1gpICogKHMucFggLSBjWCkgKyAocy5wWSAtIGNZKSAqIChzLnBZIC0gY1kpKSA8IGNmZy5zZW5zaXRpdml0eSkgcmV0dXJuICRlbC5vZmYocy5ldmVudCwgdHJhY2spLCBkZWxldGUgcy50aW1lb3V0SWQsIHMuaXNBY3RpdmUgPSAhMCwgZXYucGFnZVggPSBjWCwgZXYucGFnZVkgPSBjWSwgZGVsZXRlIHMucFgsIGRlbGV0ZSBzLnBZLCBjZmcub3Zlci5hcHBseSgkZWxbMF0sIFtldl0pO1xuICAgICAgcy5wWCA9IGNYLCBzLnBZID0gY1ksIHMudGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIF9jb21wYXJlKGV2LCAkZWwsIHMsIGNmZyk7XG4gICAgICB9LCBjZmcuaW50ZXJ2YWwpO1xuICAgIH0sXG4gICAgZGVsYXkgPSBmdW5jdGlvbiBkZWxheShldiwgJGVsLCBzLCBvdXQpIHtcbiAgICAgIHJldHVybiBkZWxldGUgJGVsLmRhdGEoXCJob3ZlckludGVudFwiKVtzLmlkXSwgb3V0LmFwcGx5KCRlbFswXSwgW2V2XSk7XG4gICAgfTtcbiAgJC5mbi5ob3ZlckludGVudCA9IGZ1bmN0aW9uIChoYW5kbGVySW4sIGhhbmRsZXJPdXQsIHNlbGVjdG9yKSB7XG4gICAgdmFyIGluc3RhbmNlSWQgPSBJTlNUQU5DRV9DT1VOVCsrLFxuICAgICAgY2ZnID0gJC5leHRlbmQoe30sIF9jZmcpO1xuICAgICQuaXNQbGFpbk9iamVjdChoYW5kbGVySW4pID8gKGNmZyA9ICQuZXh0ZW5kKGNmZywgaGFuZGxlckluKSwgJC5pc0Z1bmN0aW9uKGNmZy5vdXQpIHx8IChjZmcub3V0ID0gY2ZnLm92ZXIpKSA6IGNmZyA9ICQuaXNGdW5jdGlvbihoYW5kbGVyT3V0KSA/ICQuZXh0ZW5kKGNmZywge1xuICAgICAgb3ZlcjogaGFuZGxlckluLFxuICAgICAgb3V0OiBoYW5kbGVyT3V0LFxuICAgICAgc2VsZWN0b3I6IHNlbGVjdG9yXG4gICAgfSkgOiAkLmV4dGVuZChjZmcsIHtcbiAgICAgIG92ZXI6IGhhbmRsZXJJbixcbiAgICAgIG91dDogaGFuZGxlckluLFxuICAgICAgc2VsZWN0b3I6IGhhbmRsZXJPdXRcbiAgICB9KTtcbiAgICB2YXIgaGFuZGxlSG92ZXIgPSBmdW5jdGlvbiBoYW5kbGVIb3ZlcihlKSB7XG4gICAgICB2YXIgZXYgPSAkLmV4dGVuZCh7fSwgZSksXG4gICAgICAgICRlbCA9ICQodGhpcyksXG4gICAgICAgIGhvdmVySW50ZW50RGF0YSA9ICRlbC5kYXRhKFwiaG92ZXJJbnRlbnRcIik7XG4gICAgICBob3ZlckludGVudERhdGEgfHwgJGVsLmRhdGEoXCJob3ZlckludGVudFwiLCBob3ZlckludGVudERhdGEgPSB7fSk7XG4gICAgICB2YXIgc3RhdGUgPSBob3ZlckludGVudERhdGFbaW5zdGFuY2VJZF07XG4gICAgICBzdGF0ZSB8fCAoaG92ZXJJbnRlbnREYXRhW2luc3RhbmNlSWRdID0gc3RhdGUgPSB7XG4gICAgICAgIGlkOiBpbnN0YW5jZUlkXG4gICAgICB9KSwgc3RhdGUudGltZW91dElkICYmIChzdGF0ZS50aW1lb3V0SWQgPSBjbGVhclRpbWVvdXQoc3RhdGUudGltZW91dElkKSk7XG4gICAgICB2YXIgbW91c2Vtb3ZlID0gc3RhdGUuZXZlbnQgPSBcIm1vdXNlbW92ZS5ob3ZlckludGVudC5ob3ZlckludGVudFwiICsgaW5zdGFuY2VJZDtcbiAgICAgIGlmIChcIm1vdXNlZW50ZXJcIiA9PT0gZS50eXBlKSB7XG4gICAgICAgIGlmIChzdGF0ZS5pc0FjdGl2ZSkgcmV0dXJuO1xuICAgICAgICBzdGF0ZS5wWCA9IGV2LnBhZ2VYLCBzdGF0ZS5wWSA9IGV2LnBhZ2VZLCAkZWwub2ZmKG1vdXNlbW92ZSwgdHJhY2spLm9uKG1vdXNlbW92ZSwgdHJhY2spLCBzdGF0ZS50aW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfY29tcGFyZShldiwgJGVsLCBzdGF0ZSwgY2ZnKTtcbiAgICAgICAgfSwgY2ZnLmludGVydmFsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghc3RhdGUuaXNBY3RpdmUpIHJldHVybjtcbiAgICAgICAgJGVsLm9mZihtb3VzZW1vdmUsIHRyYWNrKSwgc3RhdGUudGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgZGVsYXkoZXYsICRlbCwgc3RhdGUsIGNmZy5vdXQpO1xuICAgICAgICB9LCBjZmcudGltZW91dCk7XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5vbih7XG4gICAgICBcIm1vdXNlZW50ZXIuaG92ZXJJbnRlbnRcIjogaGFuZGxlSG92ZXIsXG4gICAgICBcIm1vdXNlbGVhdmUuaG92ZXJJbnRlbnRcIjogaGFuZGxlSG92ZXJcbiAgICB9LCBjZmcuc2VsZWN0b3IpO1xuICB9O1xufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///42\n')},784:function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\n/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n\n Version: 1.9.0\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n\n */\n(function (i) {\n  "use strict";\n\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(669)], __WEBPACK_AMD_DEFINE_FACTORY__ = (i),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;\n})(function (i) {\n  "use strict";\n\n  var e = window.Slick || {};\n  e = function () {\n    function e(e, o) {\n      var s,\n        n = this;\n      n.defaults = {\n        accessibility: !0,\n        adaptiveHeight: !1,\n        appendArrows: i(e),\n        appendDots: i(e),\n        arrows: !0,\n        asNavFor: null,\n        prevArrow: \'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>\',\n        nextArrow: \'<button class="slick-next" aria-label="Next" type="button">Next</button>\',\n        autoplay: !1,\n        autoplaySpeed: 3e3,\n        centerMode: !1,\n        centerPadding: "50px",\n        cssEase: "ease",\n        customPaging: function customPaging(e, t) {\n          return i(\'<button type="button" />\').text(t + 1);\n        },\n        dots: !1,\n        dotsClass: "slick-dots",\n        draggable: !0,\n        easing: "linear",\n        edgeFriction: .35,\n        fade: !1,\n        focusOnSelect: !1,\n        focusOnChange: !1,\n        infinite: !0,\n        initialSlide: 0,\n        lazyLoad: "ondemand",\n        mobileFirst: !1,\n        pauseOnHover: !0,\n        pauseOnFocus: !0,\n        pauseOnDotsHover: !1,\n        respondTo: "window",\n        responsive: null,\n        rows: 1,\n        rtl: !1,\n        slide: "",\n        slidesPerRow: 1,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        speed: 500,\n        swipe: !0,\n        swipeToSlide: !1,\n        touchMove: !0,\n        touchThreshold: 5,\n        useCSS: !0,\n        useTransform: !0,\n        variableWidth: !1,\n        vertical: !1,\n        verticalSwiping: !1,\n        waitForAnimate: !0,\n        zIndex: 1e3\n      }, n.initials = {\n        animating: !1,\n        dragging: !1,\n        autoPlayTimer: null,\n        currentDirection: 0,\n        currentLeft: null,\n        currentSlide: 0,\n        direction: 1,\n        $dots: null,\n        listWidth: null,\n        listHeight: null,\n        loadIndex: 0,\n        $nextArrow: null,\n        $prevArrow: null,\n        scrolling: !1,\n        slideCount: null,\n        slideWidth: null,\n        $slideTrack: null,\n        $slides: null,\n        sliding: !1,\n        slideOffset: 0,\n        swipeLeft: null,\n        swiping: !1,\n        $list: null,\n        touchObject: {},\n        transformsEnabled: !1,\n        unslicked: !1\n      }, i.extend(n, n.initials), n.activeBreakpoint = null, n.animType = null, n.animProp = null, n.breakpoints = [], n.breakpointSettings = [], n.cssTransitions = !1, n.focussed = !1, n.interrupted = !1, n.hidden = "hidden", n.paused = !0, n.positionProp = null, n.respondTo = null, n.rowCount = 1, n.shouldClick = !0, n.$slider = i(e), n.$slidesCache = null, n.transformType = null, n.transitionType = null, n.visibilityChange = "visibilitychange", n.windowWidth = 0, n.windowTimer = null, s = i(e).data("slick") || {}, n.options = i.extend({}, n.defaults, o, s), n.currentSlide = n.options.initialSlide, n.originalSettings = n.options, "undefined" != typeof document.mozHidden ? (n.hidden = "mozHidden", n.visibilityChange = "mozvisibilitychange") : "undefined" != typeof document.webkitHidden && (n.hidden = "webkitHidden", n.visibilityChange = "webkitvisibilitychange"), n.autoPlay = i.proxy(n.autoPlay, n), n.autoPlayClear = i.proxy(n.autoPlayClear, n), n.autoPlayIterator = i.proxy(n.autoPlayIterator, n), n.changeSlide = i.proxy(n.changeSlide, n), n.clickHandler = i.proxy(n.clickHandler, n), n.selectHandler = i.proxy(n.selectHandler, n), n.setPosition = i.proxy(n.setPosition, n), n.swipeHandler = i.proxy(n.swipeHandler, n), n.dragHandler = i.proxy(n.dragHandler, n), n.keyHandler = i.proxy(n.keyHandler, n), n.instanceUid = t++, n.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/, n.registerBreakpoints(), n.init(!0);\n    }\n    var t = 0;\n    return e;\n  }(), e.prototype.activateADA = function () {\n    var i = this;\n    i.$slideTrack.find(".slick-active").attr({\n      "aria-hidden": "false"\n    }).find("a, input, button, select").attr({\n      tabindex: "0"\n    });\n  }, e.prototype.addSlide = e.prototype.slickAdd = function (e, t, o) {\n    var s = this;\n    if ("boolean" == typeof t) o = t, t = null;else if (t < 0 || t >= s.slideCount) return !1;\n    s.unload(), "number" == typeof t ? 0 === t && 0 === s.$slides.length ? i(e).appendTo(s.$slideTrack) : o ? i(e).insertBefore(s.$slides.eq(t)) : i(e).insertAfter(s.$slides.eq(t)) : o === !0 ? i(e).prependTo(s.$slideTrack) : i(e).appendTo(s.$slideTrack), s.$slides = s.$slideTrack.children(this.options.slide), s.$slideTrack.children(this.options.slide).detach(), s.$slideTrack.append(s.$slides), s.$slides.each(function (e, t) {\n      i(t).attr("data-slick-index", e);\n    }), s.$slidesCache = s.$slides, s.reinit();\n  }, e.prototype.animateHeight = function () {\n    var i = this;\n    if (1 === i.options.slidesToShow && i.options.adaptiveHeight === !0 && i.options.vertical === !1) {\n      var e = i.$slides.eq(i.currentSlide).outerHeight(!0);\n      i.$list.animate({\n        height: e\n      }, i.options.speed);\n    }\n  }, e.prototype.animateSlide = function (e, t) {\n    var o = {},\n      s = this;\n    s.animateHeight(), s.options.rtl === !0 && s.options.vertical === !1 && (e = -e), s.transformsEnabled === !1 ? s.options.vertical === !1 ? s.$slideTrack.animate({\n      left: e\n    }, s.options.speed, s.options.easing, t) : s.$slideTrack.animate({\n      top: e\n    }, s.options.speed, s.options.easing, t) : s.cssTransitions === !1 ? (s.options.rtl === !0 && (s.currentLeft = -s.currentLeft), i({\n      animStart: s.currentLeft\n    }).animate({\n      animStart: e\n    }, {\n      duration: s.options.speed,\n      easing: s.options.easing,\n      step: function step(i) {\n        i = Math.ceil(i), s.options.vertical === !1 ? (o[s.animType] = "translate(" + i + "px, 0px)", s.$slideTrack.css(o)) : (o[s.animType] = "translate(0px," + i + "px)", s.$slideTrack.css(o));\n      },\n      complete: function complete() {\n        t && t.call();\n      }\n    })) : (s.applyTransition(), e = Math.ceil(e), s.options.vertical === !1 ? o[s.animType] = "translate3d(" + e + "px, 0px, 0px)" : o[s.animType] = "translate3d(0px," + e + "px, 0px)", s.$slideTrack.css(o), t && setTimeout(function () {\n      s.disableTransition(), t.call();\n    }, s.options.speed));\n  }, e.prototype.getNavTarget = function () {\n    var e = this,\n      t = e.options.asNavFor;\n    return t && null !== t && (t = i(t).not(e.$slider)), t;\n  }, e.prototype.asNavFor = function (e) {\n    var t = this,\n      o = t.getNavTarget();\n    null !== o && "object" == _typeof(o) && o.each(function () {\n      var t = i(this).slick("getSlick");\n      t.unslicked || t.slideHandler(e, !0);\n    });\n  }, e.prototype.applyTransition = function (i) {\n    var e = this,\n      t = {};\n    e.options.fade === !1 ? t[e.transitionType] = e.transformType + " " + e.options.speed + "ms " + e.options.cssEase : t[e.transitionType] = "opacity " + e.options.speed + "ms " + e.options.cssEase, e.options.fade === !1 ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t);\n  }, e.prototype.autoPlay = function () {\n    var i = this;\n    i.autoPlayClear(), i.slideCount > i.options.slidesToShow && (i.autoPlayTimer = setInterval(i.autoPlayIterator, i.options.autoplaySpeed));\n  }, e.prototype.autoPlayClear = function () {\n    var i = this;\n    i.autoPlayTimer && clearInterval(i.autoPlayTimer);\n  }, e.prototype.autoPlayIterator = function () {\n    var i = this,\n      e = i.currentSlide + i.options.slidesToScroll;\n    i.paused || i.interrupted || i.focussed || (i.options.infinite === !1 && (1 === i.direction && i.currentSlide + 1 === i.slideCount - 1 ? i.direction = 0 : 0 === i.direction && (e = i.currentSlide - i.options.slidesToScroll, i.currentSlide - 1 === 0 && (i.direction = 1))), i.slideHandler(e));\n  }, e.prototype.buildArrows = function () {\n    var e = this;\n    e.options.arrows === !0 && (e.$prevArrow = i(e.options.prevArrow).addClass("slick-arrow"), e.$nextArrow = i(e.options.nextArrow).addClass("slick-arrow"), e.slideCount > e.options.slidesToShow ? (e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.prependTo(e.options.appendArrows), e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.appendTo(e.options.appendArrows), e.options.infinite !== !0 && e.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({\n      "aria-disabled": "true",\n      tabindex: "-1"\n    }));\n  }, e.prototype.buildDots = function () {\n    var e,\n      t,\n      o = this;\n    if (o.options.dots === !0 && o.slideCount > o.options.slidesToShow) {\n      for (o.$slider.addClass("slick-dotted"), t = i("<ul />").addClass(o.options.dotsClass), e = 0; e <= o.getDotCount(); e += 1) t.append(i("<li />").append(o.options.customPaging.call(this, o, e)));\n      o.$dots = t.appendTo(o.options.appendDots), o.$dots.find("li").first().addClass("slick-active");\n    }\n  }, e.prototype.buildOut = function () {\n    var e = this;\n    e.$slides = e.$slider.children(e.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), e.slideCount = e.$slides.length, e.$slides.each(function (e, t) {\n      i(t).attr("data-slick-index", e).data("originalStyling", i(t).attr("style") || "");\n    }), e.$slider.addClass("slick-slider"), e.$slideTrack = 0 === e.slideCount ? i(\'<div class="slick-track"/>\').appendTo(e.$slider) : e.$slides.wrapAll(\'<div class="slick-track"/>\').parent(), e.$list = e.$slideTrack.wrap(\'<div class="slick-list"/>\').parent(), e.$slideTrack.css("opacity", 0), e.options.centerMode !== !0 && e.options.swipeToSlide !== !0 || (e.options.slidesToScroll = 1), i("img[data-lazy]", e.$slider).not("[src]").addClass("slick-loading"), e.setupInfinite(), e.buildArrows(), e.buildDots(), e.updateDots(), e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0), e.options.draggable === !0 && e.$list.addClass("draggable");\n  }, e.prototype.buildRows = function () {\n    var i,\n      e,\n      t,\n      o,\n      s,\n      n,\n      r,\n      l = this;\n    if (o = document.createDocumentFragment(), n = l.$slider.children(), l.options.rows > 0) {\n      for (r = l.options.slidesPerRow * l.options.rows, s = Math.ceil(n.length / r), i = 0; i < s; i++) {\n        var d = document.createElement("div");\n        for (e = 0; e < l.options.rows; e++) {\n          var a = document.createElement("div");\n          for (t = 0; t < l.options.slidesPerRow; t++) {\n            var c = i * r + (e * l.options.slidesPerRow + t);\n            n.get(c) && a.appendChild(n.get(c));\n          }\n          d.appendChild(a);\n        }\n        o.appendChild(d);\n      }\n      l.$slider.empty().append(o), l.$slider.children().children().children().css({\n        width: 100 / l.options.slidesPerRow + "%",\n        display: "inline-block"\n      });\n    }\n  }, e.prototype.checkResponsive = function (e, t) {\n    var o,\n      s,\n      n,\n      r = this,\n      l = !1,\n      d = r.$slider.width(),\n      a = window.innerWidth || i(window).width();\n    if ("window" === r.respondTo ? n = a : "slider" === r.respondTo ? n = d : "min" === r.respondTo && (n = Math.min(a, d)), r.options.responsive && r.options.responsive.length && null !== r.options.responsive) {\n      s = null;\n      for (o in r.breakpoints) r.breakpoints.hasOwnProperty(o) && (r.originalSettings.mobileFirst === !1 ? n < r.breakpoints[o] && (s = r.breakpoints[o]) : n > r.breakpoints[o] && (s = r.breakpoints[o]));\n      null !== s ? null !== r.activeBreakpoint ? (s !== r.activeBreakpoint || t) && (r.activeBreakpoint = s, "unslick" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), e === !0 && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : (r.activeBreakpoint = s, "unslick" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), e === !0 && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : null !== r.activeBreakpoint && (r.activeBreakpoint = null, r.options = r.originalSettings, e === !0 && (r.currentSlide = r.options.initialSlide), r.refresh(e), l = s), e || l === !1 || r.$slider.trigger("breakpoint", [r, l]);\n    }\n  }, e.prototype.changeSlide = function (e, t) {\n    var o,\n      s,\n      n,\n      r = this,\n      l = i(e.currentTarget);\n    switch (l.is("a") && e.preventDefault(), l.is("li") || (l = l.closest("li")), n = r.slideCount % r.options.slidesToScroll !== 0, o = n ? 0 : (r.slideCount - r.currentSlide) % r.options.slidesToScroll, e.data.message) {\n      case "previous":\n        s = 0 === o ? r.options.slidesToScroll : r.options.slidesToShow - o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide - s, !1, t);\n        break;\n      case "next":\n        s = 0 === o ? r.options.slidesToScroll : o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide + s, !1, t);\n        break;\n      case "index":\n        var d = 0 === e.data.index ? 0 : e.data.index || l.index() * r.options.slidesToScroll;\n        r.slideHandler(r.checkNavigable(d), !1, t), l.children().trigger("focus");\n        break;\n      default:\n        return;\n    }\n  }, e.prototype.checkNavigable = function (i) {\n    var e,\n      t,\n      o = this;\n    if (e = o.getNavigableIndexes(), t = 0, i > e[e.length - 1]) i = e[e.length - 1];else for (var s in e) {\n      if (i < e[s]) {\n        i = t;\n        break;\n      }\n      t = e[s];\n    }\n    return i;\n  }, e.prototype.cleanUpEvents = function () {\n    var e = this;\n    e.options.dots && null !== e.$dots && (i("li", e.$dots).off("click.slick", e.changeSlide).off("mouseenter.slick", i.proxy(e.interrupt, e, !0)).off("mouseleave.slick", i.proxy(e.interrupt, e, !1)), e.options.accessibility === !0 && e.$dots.off("keydown.slick", e.keyHandler)), e.$slider.off("focus.slick blur.slick"), e.options.arrows === !0 && e.slideCount > e.options.slidesToShow && (e.$prevArrow && e.$prevArrow.off("click.slick", e.changeSlide), e.$nextArrow && e.$nextArrow.off("click.slick", e.changeSlide), e.options.accessibility === !0 && (e.$prevArrow && e.$prevArrow.off("keydown.slick", e.keyHandler), e.$nextArrow && e.$nextArrow.off("keydown.slick", e.keyHandler))), e.$list.off("touchstart.slick mousedown.slick", e.swipeHandler), e.$list.off("touchmove.slick mousemove.slick", e.swipeHandler), e.$list.off("touchend.slick mouseup.slick", e.swipeHandler), e.$list.off("touchcancel.slick mouseleave.slick", e.swipeHandler), e.$list.off("click.slick", e.clickHandler), i(document).off(e.visibilityChange, e.visibility), e.cleanUpSlideEvents(), e.options.accessibility === !0 && e.$list.off("keydown.slick", e.keyHandler), e.options.focusOnSelect === !0 && i(e.$slideTrack).children().off("click.slick", e.selectHandler), i(window).off("orientationchange.slick.slick-" + e.instanceUid, e.orientationChange), i(window).off("resize.slick.slick-" + e.instanceUid, e.resize), i("[draggable!=true]", e.$slideTrack).off("dragstart", e.preventDefault), i(window).off("load.slick.slick-" + e.instanceUid, e.setPosition);\n  }, e.prototype.cleanUpSlideEvents = function () {\n    var e = this;\n    e.$list.off("mouseenter.slick", i.proxy(e.interrupt, e, !0)), e.$list.off("mouseleave.slick", i.proxy(e.interrupt, e, !1));\n  }, e.prototype.cleanUpRows = function () {\n    var i,\n      e = this;\n    e.options.rows > 0 && (i = e.$slides.children().children(), i.removeAttr("style"), e.$slider.empty().append(i));\n  }, e.prototype.clickHandler = function (i) {\n    var e = this;\n    e.shouldClick === !1 && (i.stopImmediatePropagation(), i.stopPropagation(), i.preventDefault());\n  }, e.prototype.destroy = function (e) {\n    var t = this;\n    t.autoPlayClear(), t.touchObject = {}, t.cleanUpEvents(), i(".slick-cloned", t.$slider).detach(), t.$dots && t.$dots.remove(), t.$prevArrow && t.$prevArrow.length && (t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), t.htmlExpr.test(t.options.prevArrow) && t.$prevArrow.remove()), t.$nextArrow && t.$nextArrow.length && (t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), t.htmlExpr.test(t.options.nextArrow) && t.$nextArrow.remove()), t.$slides && (t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function () {\n      i(this).attr("style", i(this).data("originalStyling"));\n    }), t.$slideTrack.children(this.options.slide).detach(), t.$slideTrack.detach(), t.$list.detach(), t.$slider.append(t.$slides)), t.cleanUpRows(), t.$slider.removeClass("slick-slider"), t.$slider.removeClass("slick-initialized"), t.$slider.removeClass("slick-dotted"), t.unslicked = !0, e || t.$slider.trigger("destroy", [t]);\n  }, e.prototype.disableTransition = function (i) {\n    var e = this,\n      t = {};\n    t[e.transitionType] = "", e.options.fade === !1 ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t);\n  }, e.prototype.fadeSlide = function (i, e) {\n    var t = this;\n    t.cssTransitions === !1 ? (t.$slides.eq(i).css({\n      zIndex: t.options.zIndex\n    }), t.$slides.eq(i).animate({\n      opacity: 1\n    }, t.options.speed, t.options.easing, e)) : (t.applyTransition(i), t.$slides.eq(i).css({\n      opacity: 1,\n      zIndex: t.options.zIndex\n    }), e && setTimeout(function () {\n      t.disableTransition(i), e.call();\n    }, t.options.speed));\n  }, e.prototype.fadeSlideOut = function (i) {\n    var e = this;\n    e.cssTransitions === !1 ? e.$slides.eq(i).animate({\n      opacity: 0,\n      zIndex: e.options.zIndex - 2\n    }, e.options.speed, e.options.easing) : (e.applyTransition(i), e.$slides.eq(i).css({\n      opacity: 0,\n      zIndex: e.options.zIndex - 2\n    }));\n  }, e.prototype.filterSlides = e.prototype.slickFilter = function (i) {\n    var e = this;\n    null !== i && (e.$slidesCache = e.$slides, e.unload(), e.$slideTrack.children(this.options.slide).detach(), e.$slidesCache.filter(i).appendTo(e.$slideTrack), e.reinit());\n  }, e.prototype.focusHandler = function () {\n    var e = this;\n    e.$slider.off("focus.slick blur.slick").on("focus.slick", "*", function (t) {\n      var o = i(this);\n      setTimeout(function () {\n        e.options.pauseOnFocus && o.is(":focus") && (e.focussed = !0, e.autoPlay());\n      }, 0);\n    }).on("blur.slick", "*", function (t) {\n      i(this);\n      e.options.pauseOnFocus && (e.focussed = !1, e.autoPlay());\n    });\n  }, e.prototype.getCurrent = e.prototype.slickCurrentSlide = function () {\n    var i = this;\n    return i.currentSlide;\n  }, e.prototype.getDotCount = function () {\n    var i = this,\n      e = 0,\n      t = 0,\n      o = 0;\n    if (i.options.infinite === !0) {\n      if (i.slideCount <= i.options.slidesToShow) ++o;else for (; e < i.slideCount;) ++o, e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow;\n    } else if (i.options.centerMode === !0) o = i.slideCount;else if (i.options.asNavFor) for (; e < i.slideCount;) ++o, e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow;else o = 1 + Math.ceil((i.slideCount - i.options.slidesToShow) / i.options.slidesToScroll);\n    return o - 1;\n  }, e.prototype.getLeft = function (i) {\n    var e,\n      t,\n      o,\n      s,\n      n = this,\n      r = 0;\n    return n.slideOffset = 0, t = n.$slides.first().outerHeight(!0), n.options.infinite === !0 ? (n.slideCount > n.options.slidesToShow && (n.slideOffset = n.slideWidth * n.options.slidesToShow * -1, s = -1, n.options.vertical === !0 && n.options.centerMode === !0 && (2 === n.options.slidesToShow ? s = -1.5 : 1 === n.options.slidesToShow && (s = -2)), r = t * n.options.slidesToShow * s), n.slideCount % n.options.slidesToScroll !== 0 && i + n.options.slidesToScroll > n.slideCount && n.slideCount > n.options.slidesToShow && (i > n.slideCount ? (n.slideOffset = (n.options.slidesToShow - (i - n.slideCount)) * n.slideWidth * -1, r = (n.options.slidesToShow - (i - n.slideCount)) * t * -1) : (n.slideOffset = n.slideCount % n.options.slidesToScroll * n.slideWidth * -1, r = n.slideCount % n.options.slidesToScroll * t * -1))) : i + n.options.slidesToShow > n.slideCount && (n.slideOffset = (i + n.options.slidesToShow - n.slideCount) * n.slideWidth, r = (i + n.options.slidesToShow - n.slideCount) * t), n.slideCount <= n.options.slidesToShow && (n.slideOffset = 0, r = 0), n.options.centerMode === !0 && n.slideCount <= n.options.slidesToShow ? n.slideOffset = n.slideWidth * Math.floor(n.options.slidesToShow) / 2 - n.slideWidth * n.slideCount / 2 : n.options.centerMode === !0 && n.options.infinite === !0 ? n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2) - n.slideWidth : n.options.centerMode === !0 && (n.slideOffset = 0, n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2)), e = n.options.vertical === !1 ? i * n.slideWidth * -1 + n.slideOffset : i * t * -1 + r, n.options.variableWidth === !0 && (o = n.slideCount <= n.options.slidesToShow || n.options.infinite === !1 ? n.$slideTrack.children(".slick-slide").eq(i) : n.$slideTrack.children(".slick-slide").eq(i + n.options.slidesToShow), e = n.options.rtl === !0 ? o[0] ? (n.$slideTrack.width() - o[0].offsetLeft - o.width()) * -1 : 0 : o[0] ? o[0].offsetLeft * -1 : 0, n.options.centerMode === !0 && (o = n.slideCount <= n.options.slidesToShow || n.options.infinite === !1 ? n.$slideTrack.children(".slick-slide").eq(i) : n.$slideTrack.children(".slick-slide").eq(i + n.options.slidesToShow + 1), e = n.options.rtl === !0 ? o[0] ? (n.$slideTrack.width() - o[0].offsetLeft - o.width()) * -1 : 0 : o[0] ? o[0].offsetLeft * -1 : 0, e += (n.$list.width() - o.outerWidth()) / 2)), e;\n  }, e.prototype.getOption = e.prototype.slickGetOption = function (i) {\n    var e = this;\n    return e.options[i];\n  }, e.prototype.getNavigableIndexes = function () {\n    var i,\n      e = this,\n      t = 0,\n      o = 0,\n      s = [];\n    for (e.options.infinite === !1 ? i = e.slideCount : (t = e.options.slidesToScroll * -1, o = e.options.slidesToScroll * -1, i = 2 * e.slideCount); t < i;) s.push(t), t = o + e.options.slidesToScroll, o += e.options.slidesToScroll <= e.options.slidesToShow ? e.options.slidesToScroll : e.options.slidesToShow;\n    return s;\n  }, e.prototype.getSlick = function () {\n    return this;\n  }, e.prototype.getSlideCount = function () {\n    var e,\n      t,\n      o,\n      s,\n      n = this;\n    return s = n.options.centerMode === !0 ? Math.floor(n.$list.width() / 2) : 0, o = n.swipeLeft * -1 + s, n.options.swipeToSlide === !0 ? (n.$slideTrack.find(".slick-slide").each(function (e, s) {\n      var r, l, d;\n      if (r = i(s).outerWidth(), l = s.offsetLeft, n.options.centerMode !== !0 && (l += r / 2), d = l + r, o < d) return t = s, !1;\n    }), e = Math.abs(i(t).attr("data-slick-index") - n.currentSlide) || 1) : n.options.slidesToScroll;\n  }, e.prototype.goTo = e.prototype.slickGoTo = function (i, e) {\n    var t = this;\n    t.changeSlide({\n      data: {\n        message: "index",\n        index: parseInt(i)\n      }\n    }, e);\n  }, e.prototype.init = function (e) {\n    var t = this;\n    i(t.$slider).hasClass("slick-initialized") || (i(t.$slider).addClass("slick-initialized"), t.buildRows(), t.buildOut(), t.setProps(), t.startLoad(), t.loadSlider(), t.initializeEvents(), t.updateArrows(), t.updateDots(), t.checkResponsive(!0), t.focusHandler()), e && t.$slider.trigger("init", [t]), t.options.accessibility === !0 && t.initADA(), t.options.autoplay && (t.paused = !1, t.autoPlay());\n  }, e.prototype.initADA = function () {\n    var e = this,\n      t = Math.ceil(e.slideCount / e.options.slidesToShow),\n      o = e.getNavigableIndexes().filter(function (i) {\n        return i >= 0 && i < e.slideCount;\n      });\n    e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({\n      "aria-hidden": "true",\n      tabindex: "-1"\n    }).find("a, input, button, select").attr({\n      tabindex: "-1"\n    }), null !== e.$dots && (e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function (t) {\n      var s = o.indexOf(t);\n      if (i(this).attr({\n        role: "tabpanel",\n        id: "slick-slide" + e.instanceUid + t,\n        tabindex: -1\n      }), s !== -1) {\n        var n = "slick-slide-control" + e.instanceUid + s;\n        i("#" + n).length && i(this).attr({\n          "aria-describedby": n\n        });\n      }\n    }), e.$dots.attr("role", "tablist").find("li").each(function (s) {\n      var n = o[s];\n      i(this).attr({\n        role: "presentation"\n      }), i(this).find("button").first().attr({\n        role: "tab",\n        id: "slick-slide-control" + e.instanceUid + s,\n        "aria-controls": "slick-slide" + e.instanceUid + n,\n        "aria-label": s + 1 + " of " + t,\n        "aria-selected": null,\n        tabindex: "-1"\n      });\n    }).eq(e.currentSlide).find("button").attr({\n      "aria-selected": "true",\n      tabindex: "0"\n    }).end());\n    for (var s = e.currentSlide, n = s + e.options.slidesToShow; s < n; s++) e.options.focusOnChange ? e.$slides.eq(s).attr({\n      tabindex: "0"\n    }) : e.$slides.eq(s).removeAttr("tabindex");\n    e.activateADA();\n  }, e.prototype.initArrowEvents = function () {\n    var i = this;\n    i.options.arrows === !0 && i.slideCount > i.options.slidesToShow && (i.$prevArrow.off("click.slick").on("click.slick", {\n      message: "previous"\n    }, i.changeSlide), i.$nextArrow.off("click.slick").on("click.slick", {\n      message: "next"\n    }, i.changeSlide), i.options.accessibility === !0 && (i.$prevArrow.on("keydown.slick", i.keyHandler), i.$nextArrow.on("keydown.slick", i.keyHandler)));\n  }, e.prototype.initDotEvents = function () {\n    var e = this;\n    e.options.dots === !0 && e.slideCount > e.options.slidesToShow && (i("li", e.$dots).on("click.slick", {\n      message: "index"\n    }, e.changeSlide), e.options.accessibility === !0 && e.$dots.on("keydown.slick", e.keyHandler)), e.options.dots === !0 && e.options.pauseOnDotsHover === !0 && e.slideCount > e.options.slidesToShow && i("li", e.$dots).on("mouseenter.slick", i.proxy(e.interrupt, e, !0)).on("mouseleave.slick", i.proxy(e.interrupt, e, !1));\n  }, e.prototype.initSlideEvents = function () {\n    var e = this;\n    e.options.pauseOnHover && (e.$list.on("mouseenter.slick", i.proxy(e.interrupt, e, !0)), e.$list.on("mouseleave.slick", i.proxy(e.interrupt, e, !1)));\n  }, e.prototype.initializeEvents = function () {\n    var e = this;\n    e.initArrowEvents(), e.initDotEvents(), e.initSlideEvents(), e.$list.on("touchstart.slick mousedown.slick", {\n      action: "start"\n    }, e.swipeHandler), e.$list.on("touchmove.slick mousemove.slick", {\n      action: "move"\n    }, e.swipeHandler), e.$list.on("touchend.slick mouseup.slick", {\n      action: "end"\n    }, e.swipeHandler), e.$list.on("touchcancel.slick mouseleave.slick", {\n      action: "end"\n    }, e.swipeHandler), e.$list.on("click.slick", e.clickHandler), i(document).on(e.visibilityChange, i.proxy(e.visibility, e)), e.options.accessibility === !0 && e.$list.on("keydown.slick", e.keyHandler), e.options.focusOnSelect === !0 && i(e.$slideTrack).children().on("click.slick", e.selectHandler), i(window).on("orientationchange.slick.slick-" + e.instanceUid, i.proxy(e.orientationChange, e)), i(window).on("resize.slick.slick-" + e.instanceUid, i.proxy(e.resize, e)), i("[draggable!=true]", e.$slideTrack).on("dragstart", e.preventDefault), i(window).on("load.slick.slick-" + e.instanceUid, e.setPosition), i(e.setPosition);\n  }, e.prototype.initUI = function () {\n    var i = this;\n    i.options.arrows === !0 && i.slideCount > i.options.slidesToShow && (i.$prevArrow.show(), i.$nextArrow.show()), i.options.dots === !0 && i.slideCount > i.options.slidesToShow && i.$dots.show();\n  }, e.prototype.keyHandler = function (i) {\n    var e = this;\n    i.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === i.keyCode && e.options.accessibility === !0 ? e.changeSlide({\n      data: {\n        message: e.options.rtl === !0 ? "next" : "previous"\n      }\n    }) : 39 === i.keyCode && e.options.accessibility === !0 && e.changeSlide({\n      data: {\n        message: e.options.rtl === !0 ? "previous" : "next"\n      }\n    }));\n  }, e.prototype.lazyLoad = function () {\n    function e(e) {\n      i("img[data-lazy]", e).each(function () {\n        var e = i(this),\n          t = i(this).attr("data-lazy"),\n          o = i(this).attr("data-srcset"),\n          s = i(this).attr("data-sizes") || r.$slider.attr("data-sizes"),\n          n = document.createElement("img");\n        n.onload = function () {\n          e.animate({\n            opacity: 0\n          }, 100, function () {\n            o && (e.attr("srcset", o), s && e.attr("sizes", s)), e.attr("src", t).animate({\n              opacity: 1\n            }, 200, function () {\n              e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading");\n            }), r.$slider.trigger("lazyLoaded", [r, e, t]);\n          });\n        }, n.onerror = function () {\n          e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), r.$slider.trigger("lazyLoadError", [r, e, t]);\n        }, n.src = t;\n      });\n    }\n    var t,\n      o,\n      s,\n      n,\n      r = this;\n    if (r.options.centerMode === !0 ? r.options.infinite === !0 ? (s = r.currentSlide + (r.options.slidesToShow / 2 + 1), n = s + r.options.slidesToShow + 2) : (s = Math.max(0, r.currentSlide - (r.options.slidesToShow / 2 + 1)), n = 2 + (r.options.slidesToShow / 2 + 1) + r.currentSlide) : (s = r.options.infinite ? r.options.slidesToShow + r.currentSlide : r.currentSlide, n = Math.ceil(s + r.options.slidesToShow), r.options.fade === !0 && (s > 0 && s--, n <= r.slideCount && n++)), t = r.$slider.find(".slick-slide").slice(s, n), "anticipated" === r.options.lazyLoad) for (var l = s - 1, d = n, a = r.$slider.find(".slick-slide"), c = 0; c < r.options.slidesToScroll; c++) l < 0 && (l = r.slideCount - 1), t = t.add(a.eq(l)), t = t.add(a.eq(d)), l--, d++;\n    e(t), r.slideCount <= r.options.slidesToShow ? (o = r.$slider.find(".slick-slide"), e(o)) : r.currentSlide >= r.slideCount - r.options.slidesToShow ? (o = r.$slider.find(".slick-cloned").slice(0, r.options.slidesToShow), e(o)) : 0 === r.currentSlide && (o = r.$slider.find(".slick-cloned").slice(r.options.slidesToShow * -1), e(o));\n  }, e.prototype.loadSlider = function () {\n    var i = this;\n    i.setPosition(), i.$slideTrack.css({\n      opacity: 1\n    }), i.$slider.removeClass("slick-loading"), i.initUI(), "progressive" === i.options.lazyLoad && i.progressiveLazyLoad();\n  }, e.prototype.next = e.prototype.slickNext = function () {\n    var i = this;\n    i.changeSlide({\n      data: {\n        message: "next"\n      }\n    });\n  }, e.prototype.orientationChange = function () {\n    var i = this;\n    i.checkResponsive(), i.setPosition();\n  }, e.prototype.pause = e.prototype.slickPause = function () {\n    var i = this;\n    i.autoPlayClear(), i.paused = !0;\n  }, e.prototype.play = e.prototype.slickPlay = function () {\n    var i = this;\n    i.autoPlay(), i.options.autoplay = !0, i.paused = !1, i.focussed = !1, i.interrupted = !1;\n  }, e.prototype.postSlide = function (e) {\n    var t = this;\n    if (!t.unslicked && (t.$slider.trigger("afterChange", [t, e]), t.animating = !1, t.slideCount > t.options.slidesToShow && t.setPosition(), t.swipeLeft = null, t.options.autoplay && t.autoPlay(), t.options.accessibility === !0 && (t.initADA(), t.options.focusOnChange))) {\n      var o = i(t.$slides.get(t.currentSlide));\n      o.attr("tabindex", 0).focus();\n    }\n  }, e.prototype.prev = e.prototype.slickPrev = function () {\n    var i = this;\n    i.changeSlide({\n      data: {\n        message: "previous"\n      }\n    });\n  }, e.prototype.preventDefault = function (i) {\n    i.preventDefault();\n  }, e.prototype.progressiveLazyLoad = function (e) {\n    e = e || 1;\n    var t,\n      o,\n      s,\n      n,\n      r,\n      l = this,\n      d = i("img[data-lazy]", l.$slider);\n    d.length ? (t = d.first(), o = t.attr("data-lazy"), s = t.attr("data-srcset"), n = t.attr("data-sizes") || l.$slider.attr("data-sizes"), r = document.createElement("img"), r.onload = function () {\n      s && (t.attr("srcset", s), n && t.attr("sizes", n)), t.attr("src", o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"), l.options.adaptiveHeight === !0 && l.setPosition(), l.$slider.trigger("lazyLoaded", [l, t, o]), l.progressiveLazyLoad();\n    }, r.onerror = function () {\n      e < 3 ? setTimeout(function () {\n        l.progressiveLazyLoad(e + 1);\n      }, 500) : (t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), l.$slider.trigger("lazyLoadError", [l, t, o]), l.progressiveLazyLoad());\n    }, r.src = o) : l.$slider.trigger("allImagesLoaded", [l]);\n  }, e.prototype.refresh = function (e) {\n    var t,\n      o,\n      s = this;\n    o = s.slideCount - s.options.slidesToShow, !s.options.infinite && s.currentSlide > o && (s.currentSlide = o), s.slideCount <= s.options.slidesToShow && (s.currentSlide = 0), t = s.currentSlide, s.destroy(!0), i.extend(s, s.initials, {\n      currentSlide: t\n    }), s.init(), e || s.changeSlide({\n      data: {\n        message: "index",\n        index: t\n      }\n    }, !1);\n  }, e.prototype.registerBreakpoints = function () {\n    var e,\n      t,\n      o,\n      s = this,\n      n = s.options.responsive || null;\n    if ("array" === i.type(n) && n.length) {\n      s.respondTo = s.options.respondTo || "window";\n      for (e in n) if (o = s.breakpoints.length - 1, n.hasOwnProperty(e)) {\n        for (t = n[e].breakpoint; o >= 0;) s.breakpoints[o] && s.breakpoints[o] === t && s.breakpoints.splice(o, 1), o--;\n        s.breakpoints.push(t), s.breakpointSettings[t] = n[e].settings;\n      }\n      s.breakpoints.sort(function (i, e) {\n        return s.options.mobileFirst ? i - e : e - i;\n      });\n    }\n  }, e.prototype.reinit = function () {\n    var e = this;\n    e.$slides = e.$slideTrack.children(e.options.slide).addClass("slick-slide"), e.slideCount = e.$slides.length, e.currentSlide >= e.slideCount && 0 !== e.currentSlide && (e.currentSlide = e.currentSlide - e.options.slidesToScroll), e.slideCount <= e.options.slidesToShow && (e.currentSlide = 0), e.registerBreakpoints(), e.setProps(), e.setupInfinite(), e.buildArrows(), e.updateArrows(), e.initArrowEvents(), e.buildDots(), e.updateDots(), e.initDotEvents(), e.cleanUpSlideEvents(), e.initSlideEvents(), e.checkResponsive(!1, !0), e.options.focusOnSelect === !0 && i(e.$slideTrack).children().on("click.slick", e.selectHandler), e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0), e.setPosition(), e.focusHandler(), e.paused = !e.options.autoplay, e.autoPlay(), e.$slider.trigger("reInit", [e]);\n  }, e.prototype.resize = function () {\n    var e = this;\n    i(window).width() !== e.windowWidth && (clearTimeout(e.windowDelay), e.windowDelay = window.setTimeout(function () {\n      e.windowWidth = i(window).width(), e.checkResponsive(), e.unslicked || e.setPosition();\n    }, 50));\n  }, e.prototype.removeSlide = e.prototype.slickRemove = function (i, e, t) {\n    var o = this;\n    return "boolean" == typeof i ? (e = i, i = e === !0 ? 0 : o.slideCount - 1) : i = e === !0 ? --i : i, !(o.slideCount < 1 || i < 0 || i > o.slideCount - 1) && (o.unload(), t === !0 ? o.$slideTrack.children().remove() : o.$slideTrack.children(this.options.slide).eq(i).remove(), o.$slides = o.$slideTrack.children(this.options.slide), o.$slideTrack.children(this.options.slide).detach(), o.$slideTrack.append(o.$slides), o.$slidesCache = o.$slides, void o.reinit());\n  }, e.prototype.setCSS = function (i) {\n    var e,\n      t,\n      o = this,\n      s = {};\n    o.options.rtl === !0 && (i = -i), e = "left" == o.positionProp ? Math.ceil(i) + "px" : "0px", t = "top" == o.positionProp ? Math.ceil(i) + "px" : "0px", s[o.positionProp] = i, o.transformsEnabled === !1 ? o.$slideTrack.css(s) : (s = {}, o.cssTransitions === !1 ? (s[o.animType] = "translate(" + e + ", " + t + ")", o.$slideTrack.css(s)) : (s[o.animType] = "translate3d(" + e + ", " + t + ", 0px)", o.$slideTrack.css(s)));\n  }, e.prototype.setDimensions = function () {\n    var i = this;\n    i.options.vertical === !1 ? i.options.centerMode === !0 && i.$list.css({\n      padding: "0px " + i.options.centerPadding\n    }) : (i.$list.height(i.$slides.first().outerHeight(!0) * i.options.slidesToShow), i.options.centerMode === !0 && i.$list.css({\n      padding: i.options.centerPadding + " 0px"\n    })), i.listWidth = i.$list.width(), i.listHeight = i.$list.height(), i.options.vertical === !1 && i.options.variableWidth === !1 ? (i.slideWidth = Math.ceil(i.listWidth / i.options.slidesToShow), i.$slideTrack.width(Math.ceil(i.slideWidth * i.$slideTrack.children(".slick-slide").length))) : i.options.variableWidth === !0 ? i.$slideTrack.width(5e3 * i.slideCount) : (i.slideWidth = Math.ceil(i.listWidth), i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0) * i.$slideTrack.children(".slick-slide").length)));\n    var e = i.$slides.first().outerWidth(!0) - i.$slides.first().width();\n    i.options.variableWidth === !1 && i.$slideTrack.children(".slick-slide").width(i.slideWidth - e);\n  }, e.prototype.setFade = function () {\n    var e,\n      t = this;\n    t.$slides.each(function (o, s) {\n      e = t.slideWidth * o * -1, t.options.rtl === !0 ? i(s).css({\n        position: "relative",\n        right: e,\n        top: 0,\n        zIndex: t.options.zIndex - 2,\n        opacity: 0\n      }) : i(s).css({\n        position: "relative",\n        left: e,\n        top: 0,\n        zIndex: t.options.zIndex - 2,\n        opacity: 0\n      });\n    }), t.$slides.eq(t.currentSlide).css({\n      zIndex: t.options.zIndex - 1,\n      opacity: 1\n    });\n  }, e.prototype.setHeight = function () {\n    var i = this;\n    if (1 === i.options.slidesToShow && i.options.adaptiveHeight === !0 && i.options.vertical === !1) {\n      var e = i.$slides.eq(i.currentSlide).outerHeight(!0);\n      i.$list.css("height", e);\n    }\n  }, e.prototype.setOption = e.prototype.slickSetOption = function () {\n    var e,\n      t,\n      o,\n      s,\n      n,\n      r = this,\n      l = !1;\n    if ("object" === i.type(arguments[0]) ? (o = arguments[0], l = arguments[1], n = "multiple") : "string" === i.type(arguments[0]) && (o = arguments[0], s = arguments[1], l = arguments[2], "responsive" === arguments[0] && "array" === i.type(arguments[1]) ? n = "responsive" : "undefined" != typeof arguments[1] && (n = "single")), "single" === n) r.options[o] = s;else if ("multiple" === n) i.each(o, function (i, e) {\n      r.options[i] = e;\n    });else if ("responsive" === n) for (t in s) if ("array" !== i.type(r.options.responsive)) r.options.responsive = [s[t]];else {\n      for (e = r.options.responsive.length - 1; e >= 0;) r.options.responsive[e].breakpoint === s[t].breakpoint && r.options.responsive.splice(e, 1), e--;\n      r.options.responsive.push(s[t]);\n    }\n    l && (r.unload(), r.reinit());\n  }, e.prototype.setPosition = function () {\n    var i = this;\n    i.setDimensions(), i.setHeight(), i.options.fade === !1 ? i.setCSS(i.getLeft(i.currentSlide)) : i.setFade(), i.$slider.trigger("setPosition", [i]);\n  }, e.prototype.setProps = function () {\n    var i = this,\n      e = document.body.style;\n    i.positionProp = i.options.vertical === !0 ? "top" : "left", "top" === i.positionProp ? i.$slider.addClass("slick-vertical") : i.$slider.removeClass("slick-vertical"), void 0 === e.WebkitTransition && void 0 === e.MozTransition && void 0 === e.msTransition || i.options.useCSS === !0 && (i.cssTransitions = !0), i.options.fade && ("number" == typeof i.options.zIndex ? i.options.zIndex < 3 && (i.options.zIndex = 3) : i.options.zIndex = i.defaults.zIndex), void 0 !== e.OTransform && (i.animType = "OTransform", i.transformType = "-o-transform", i.transitionType = "OTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), void 0 !== e.MozTransform && (i.animType = "MozTransform", i.transformType = "-moz-transform", i.transitionType = "MozTransition", void 0 === e.perspectiveProperty && void 0 === e.MozPerspective && (i.animType = !1)), void 0 !== e.webkitTransform && (i.animType = "webkitTransform", i.transformType = "-webkit-transform", i.transitionType = "webkitTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), void 0 !== e.msTransform && (i.animType = "msTransform", i.transformType = "-ms-transform", i.transitionType = "msTransition", void 0 === e.msTransform && (i.animType = !1)), void 0 !== e.transform && i.animType !== !1 && (i.animType = "transform", i.transformType = "transform", i.transitionType = "transition"), i.transformsEnabled = i.options.useTransform && null !== i.animType && i.animType !== !1;\n  }, e.prototype.setSlideClasses = function (i) {\n    var e,\n      t,\n      o,\n      s,\n      n = this;\n    if (t = n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"), n.$slides.eq(i).addClass("slick-current"), n.options.centerMode === !0) {\n      var r = n.options.slidesToShow % 2 === 0 ? 1 : 0;\n      e = Math.floor(n.options.slidesToShow / 2), n.options.infinite === !0 && (i >= e && i <= n.slideCount - 1 - e ? n.$slides.slice(i - e + r, i + e + 1).addClass("slick-active").attr("aria-hidden", "false") : (o = n.options.slidesToShow + i, t.slice(o - e + 1 + r, o + e + 2).addClass("slick-active").attr("aria-hidden", "false")), 0 === i ? t.eq(t.length - 1 - n.options.slidesToShow).addClass("slick-center") : i === n.slideCount - 1 && t.eq(n.options.slidesToShow).addClass("slick-center")), n.$slides.eq(i).addClass("slick-center");\n    } else i >= 0 && i <= n.slideCount - n.options.slidesToShow ? n.$slides.slice(i, i + n.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : t.length <= n.options.slidesToShow ? t.addClass("slick-active").attr("aria-hidden", "false") : (s = n.slideCount % n.options.slidesToShow, o = n.options.infinite === !0 ? n.options.slidesToShow + i : i, n.options.slidesToShow == n.options.slidesToScroll && n.slideCount - i < n.options.slidesToShow ? t.slice(o - (n.options.slidesToShow - s), o + s).addClass("slick-active").attr("aria-hidden", "false") : t.slice(o, o + n.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false"));\n    "ondemand" !== n.options.lazyLoad && "anticipated" !== n.options.lazyLoad || n.lazyLoad();\n  }, e.prototype.setupInfinite = function () {\n    var e,\n      t,\n      o,\n      s = this;\n    if (s.options.fade === !0 && (s.options.centerMode = !1), s.options.infinite === !0 && s.options.fade === !1 && (t = null, s.slideCount > s.options.slidesToShow)) {\n      for (o = s.options.centerMode === !0 ? s.options.slidesToShow + 1 : s.options.slidesToShow, e = s.slideCount; e > s.slideCount - o; e -= 1) t = e - 1, i(s.$slides[t]).clone(!0).attr("id", "").attr("data-slick-index", t - s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");\n      for (e = 0; e < o + s.slideCount; e += 1) t = e, i(s.$slides[t]).clone(!0).attr("id", "").attr("data-slick-index", t + s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");\n      s.$slideTrack.find(".slick-cloned").find("[id]").each(function () {\n        i(this).attr("id", "");\n      });\n    }\n  }, e.prototype.interrupt = function (i) {\n    var e = this;\n    i || e.autoPlay(), e.interrupted = i;\n  }, e.prototype.selectHandler = function (e) {\n    var t = this,\n      o = i(e.target).is(".slick-slide") ? i(e.target) : i(e.target).parents(".slick-slide"),\n      s = parseInt(o.attr("data-slick-index"));\n    return s || (s = 0), t.slideCount <= t.options.slidesToShow ? void t.slideHandler(s, !1, !0) : void t.slideHandler(s);\n  }, e.prototype.slideHandler = function (i, e, t) {\n    var o,\n      s,\n      n,\n      r,\n      l,\n      d = null,\n      a = this;\n    if (e = e || !1, !(a.animating === !0 && a.options.waitForAnimate === !0 || a.options.fade === !0 && a.currentSlide === i)) return e === !1 && a.asNavFor(i), o = i, d = a.getLeft(o), r = a.getLeft(a.currentSlide), a.currentLeft = null === a.swipeLeft ? r : a.swipeLeft, a.options.infinite === !1 && a.options.centerMode === !1 && (i < 0 || i > a.getDotCount() * a.options.slidesToScroll) ? void (a.options.fade === !1 && (o = a.currentSlide, t !== !0 && a.slideCount > a.options.slidesToShow ? a.animateSlide(r, function () {\n      a.postSlide(o);\n    }) : a.postSlide(o))) : a.options.infinite === !1 && a.options.centerMode === !0 && (i < 0 || i > a.slideCount - a.options.slidesToScroll) ? void (a.options.fade === !1 && (o = a.currentSlide, t !== !0 && a.slideCount > a.options.slidesToShow ? a.animateSlide(r, function () {\n      a.postSlide(o);\n    }) : a.postSlide(o))) : (a.options.autoplay && clearInterval(a.autoPlayTimer), s = o < 0 ? a.slideCount % a.options.slidesToScroll !== 0 ? a.slideCount - a.slideCount % a.options.slidesToScroll : a.slideCount + o : o >= a.slideCount ? a.slideCount % a.options.slidesToScroll !== 0 ? 0 : o - a.slideCount : o, a.animating = !0, a.$slider.trigger("beforeChange", [a, a.currentSlide, s]), n = a.currentSlide, a.currentSlide = s, a.setSlideClasses(a.currentSlide), a.options.asNavFor && (l = a.getNavTarget(), l = l.slick("getSlick"), l.slideCount <= l.options.slidesToShow && l.setSlideClasses(a.currentSlide)), a.updateDots(), a.updateArrows(), a.options.fade === !0 ? (t !== !0 ? (a.fadeSlideOut(n), a.fadeSlide(s, function () {\n      a.postSlide(s);\n    })) : a.postSlide(s), void a.animateHeight()) : void (t !== !0 && a.slideCount > a.options.slidesToShow ? a.animateSlide(d, function () {\n      a.postSlide(s);\n    }) : a.postSlide(s)));\n  }, e.prototype.startLoad = function () {\n    var i = this;\n    i.options.arrows === !0 && i.slideCount > i.options.slidesToShow && (i.$prevArrow.hide(), i.$nextArrow.hide()), i.options.dots === !0 && i.slideCount > i.options.slidesToShow && i.$dots.hide(), i.$slider.addClass("slick-loading");\n  }, e.prototype.swipeDirection = function () {\n    var i,\n      e,\n      t,\n      o,\n      s = this;\n    return i = s.touchObject.startX - s.touchObject.curX, e = s.touchObject.startY - s.touchObject.curY, t = Math.atan2(e, i), o = Math.round(180 * t / Math.PI), o < 0 && (o = 360 - Math.abs(o)), o <= 45 && o >= 0 ? s.options.rtl === !1 ? "left" : "right" : o <= 360 && o >= 315 ? s.options.rtl === !1 ? "left" : "right" : o >= 135 && o <= 225 ? s.options.rtl === !1 ? "right" : "left" : s.options.verticalSwiping === !0 ? o >= 35 && o <= 135 ? "down" : "up" : "vertical";\n  }, e.prototype.swipeEnd = function (i) {\n    var e,\n      t,\n      o = this;\n    if (o.dragging = !1, o.swiping = !1, o.scrolling) return o.scrolling = !1, !1;\n    if (o.interrupted = !1, o.shouldClick = !(o.touchObject.swipeLength > 10), void 0 === o.touchObject.curX) return !1;\n    if (o.touchObject.edgeHit === !0 && o.$slider.trigger("edge", [o, o.swipeDirection()]), o.touchObject.swipeLength >= o.touchObject.minSwipe) {\n      switch (t = o.swipeDirection()) {\n        case "left":\n        case "down":\n          e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide + o.getSlideCount()) : o.currentSlide + o.getSlideCount(), o.currentDirection = 0;\n          break;\n        case "right":\n        case "up":\n          e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide - o.getSlideCount()) : o.currentSlide - o.getSlideCount(), o.currentDirection = 1;\n      }\n      "vertical" != t && (o.slideHandler(e), o.touchObject = {}, o.$slider.trigger("swipe", [o, t]));\n    } else o.touchObject.startX !== o.touchObject.curX && (o.slideHandler(o.currentSlide), o.touchObject = {});\n  }, e.prototype.swipeHandler = function (i) {\n    var e = this;\n    if (!(e.options.swipe === !1 || "ontouchend" in document && e.options.swipe === !1 || e.options.draggable === !1 && i.type.indexOf("mouse") !== -1)) switch (e.touchObject.fingerCount = i.originalEvent && void 0 !== i.originalEvent.touches ? i.originalEvent.touches.length : 1, e.touchObject.minSwipe = e.listWidth / e.options.touchThreshold, e.options.verticalSwiping === !0 && (e.touchObject.minSwipe = e.listHeight / e.options.touchThreshold), i.data.action) {\n      case "start":\n        e.swipeStart(i);\n        break;\n      case "move":\n        e.swipeMove(i);\n        break;\n      case "end":\n        e.swipeEnd(i);\n    }\n  }, e.prototype.swipeMove = function (i) {\n    var e,\n      t,\n      o,\n      s,\n      n,\n      r,\n      l = this;\n    return n = void 0 !== i.originalEvent ? i.originalEvent.touches : null, !(!l.dragging || l.scrolling || n && 1 !== n.length) && (e = l.getLeft(l.currentSlide), l.touchObject.curX = void 0 !== n ? n[0].pageX : i.clientX, l.touchObject.curY = void 0 !== n ? n[0].pageY : i.clientY, l.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(l.touchObject.curX - l.touchObject.startX, 2))), r = Math.round(Math.sqrt(Math.pow(l.touchObject.curY - l.touchObject.startY, 2))), !l.options.verticalSwiping && !l.swiping && r > 4 ? (l.scrolling = !0, !1) : (l.options.verticalSwiping === !0 && (l.touchObject.swipeLength = r), t = l.swipeDirection(), void 0 !== i.originalEvent && l.touchObject.swipeLength > 4 && (l.swiping = !0, i.preventDefault()), s = (l.options.rtl === !1 ? 1 : -1) * (l.touchObject.curX > l.touchObject.startX ? 1 : -1), l.options.verticalSwiping === !0 && (s = l.touchObject.curY > l.touchObject.startY ? 1 : -1), o = l.touchObject.swipeLength, l.touchObject.edgeHit = !1, l.options.infinite === !1 && (0 === l.currentSlide && "right" === t || l.currentSlide >= l.getDotCount() && "left" === t) && (o = l.touchObject.swipeLength * l.options.edgeFriction, l.touchObject.edgeHit = !0), l.options.vertical === !1 ? l.swipeLeft = e + o * s : l.swipeLeft = e + o * (l.$list.height() / l.listWidth) * s, l.options.verticalSwiping === !0 && (l.swipeLeft = e + o * s), l.options.fade !== !0 && l.options.touchMove !== !1 && (l.animating === !0 ? (l.swipeLeft = null, !1) : void l.setCSS(l.swipeLeft))));\n  }, e.prototype.swipeStart = function (i) {\n    var e,\n      t = this;\n    return t.interrupted = !0, 1 !== t.touchObject.fingerCount || t.slideCount <= t.options.slidesToShow ? (t.touchObject = {}, !1) : (void 0 !== i.originalEvent && void 0 !== i.originalEvent.touches && (e = i.originalEvent.touches[0]), t.touchObject.startX = t.touchObject.curX = void 0 !== e ? e.pageX : i.clientX, t.touchObject.startY = t.touchObject.curY = void 0 !== e ? e.pageY : i.clientY, void (t.dragging = !0));\n  }, e.prototype.unfilterSlides = e.prototype.slickUnfilter = function () {\n    var i = this;\n    null !== i.$slidesCache && (i.unload(), i.$slideTrack.children(this.options.slide).detach(), i.$slidesCache.appendTo(i.$slideTrack), i.reinit());\n  }, e.prototype.unload = function () {\n    var e = this;\n    i(".slick-cloned", e.$slider).remove(), e.$dots && e.$dots.remove(), e.$prevArrow && e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.remove(), e.$nextArrow && e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.remove(), e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "");\n  }, e.prototype.unslick = function (i) {\n    var e = this;\n    e.$slider.trigger("unslick", [e, i]), e.destroy();\n  }, e.prototype.updateArrows = function () {\n    var i,\n      e = this;\n    i = Math.floor(e.options.slidesToShow / 2), e.options.arrows === !0 && e.slideCount > e.options.slidesToShow && !e.options.infinite && (e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 0 === e.currentSlide ? (e.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : e.currentSlide >= e.slideCount - e.options.slidesToShow && e.options.centerMode === !1 ? (e.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : e.currentSlide >= e.slideCount - 1 && e.options.centerMode === !0 && (e.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")));\n  }, e.prototype.updateDots = function () {\n    var i = this;\n    null !== i.$dots && (i.$dots.find("li").removeClass("slick-active").end(), i.$dots.find("li").eq(Math.floor(i.currentSlide / i.options.slidesToScroll)).addClass("slick-active"));\n  }, e.prototype.visibility = function () {\n    var i = this;\n    i.options.autoplay && (document[i.hidden] ? i.interrupted = !0 : i.interrupted = !1);\n  }, i.fn.slick = function () {\n    var i,\n      t,\n      o = this,\n      s = arguments[0],\n      n = Array.prototype.slice.call(arguments, 1),\n      r = o.length;\n    for (i = 0; i < r; i++) if ("object" == _typeof(s) || "undefined" == typeof s ? o[i].slick = new e(o[i], s) : t = o[i].slick[s].apply(o[i].slick, n), "undefined" != typeof t) return t;\n    return o;\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///784\n')},741:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: external \"jQuery\"\nvar external_jQuery_ = __webpack_require__(669);\nvar external_jQuery_default = /*#__PURE__*/__webpack_require__.n(external_jQuery_);\n;// ./node_modules/bootstrap/js/src/util.js\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n/**\n * Private TransitionEnd Helpers\n */\n\nvar TRANSITION_END = 'transitionend';\nvar MAX_UID = 1000000;\nvar MILLISECONDS_MULTIPLIER = 1000;\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nfunction toType(obj) {\n  if (obj === null || typeof obj === 'undefined') {\n    return \"\".concat(obj);\n  }\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase();\n}\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: TRANSITION_END,\n    delegateType: TRANSITION_END,\n    handle: function handle(event) {\n      if (external_jQuery_default()(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\n      }\n      return undefined;\n    }\n  };\n}\nfunction transitionEndEmulator(duration) {\n  var _this = this;\n  var called = false;\n  external_jQuery_default()(this).one(Util.TRANSITION_END, function () {\n    called = true;\n  });\n  setTimeout(function () {\n    if (!called) {\n      Util.triggerTransitionEnd(_this);\n    }\n  }, duration);\n  return this;\n}\nfunction setTransitionEndSupport() {\n  (external_jQuery_default()).fn.emulateTransitionEnd = transitionEndEmulator;\n  (external_jQuery_default()).event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n}\n\n/**\n * Public Util API\n */\n\nvar Util = {\n  TRANSITION_END: 'bsTransitionEnd',\n  getUID: function getUID(prefix) {\n    do {\n      // eslint-disable-next-line no-bitwise\n      prefix += ~~(Math.random() * MAX_UID); // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(prefix));\n    return prefix;\n  },\n  getSelectorFromElement: function getSelectorFromElement(element) {\n    var selector = element.getAttribute('data-target');\n    if (!selector || selector === '#') {\n      var hrefAttr = element.getAttribute('href');\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : '';\n    }\n    try {\n      return document.querySelector(selector) ? selector : null;\n    } catch (_) {\n      return null;\n    }\n  },\n  getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {\n    if (!element) {\n      return 0;\n    }\n\n    // Get transition-duration of the element\n    var transitionDuration = external_jQuery_default()(element).css('transition-duration');\n    var transitionDelay = external_jQuery_default()(element).css('transition-delay');\n    var floatTransitionDuration = parseFloat(transitionDuration);\n    var floatTransitionDelay = parseFloat(transitionDelay);\n\n    // Return 0 if element or transition duration is not found\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0;\n    }\n\n    // If multiple durations are defined, take the first\n    transitionDuration = transitionDuration.split(',')[0];\n    transitionDelay = transitionDelay.split(',')[0];\n    return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n  },\n  reflow: function reflow(element) {\n    return element.offsetHeight;\n  },\n  triggerTransitionEnd: function triggerTransitionEnd(element) {\n    external_jQuery_default()(element).trigger(TRANSITION_END);\n  },\n  supportsTransitionEnd: function supportsTransitionEnd() {\n    return Boolean(TRANSITION_END);\n  },\n  isElement: function isElement(obj) {\n    return (obj[0] || obj).nodeType;\n  },\n  typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\n    for (var property in configTypes) {\n      if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n        var expectedTypes = configTypes[property];\n        var value = config[property];\n        var valueType = value && Util.isElement(value) ? 'element' : toType(value);\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new Error(\"\".concat(componentName.toUpperCase(), \": \") + \"Option \\\"\".concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" \") + \"but expected type \\\"\".concat(expectedTypes, \"\\\".\"));\n        }\n      }\n    }\n  },\n  findShadowRoot: function findShadowRoot(element) {\n    if (!document.documentElement.attachShadow) {\n      return null;\n    }\n\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n      var root = element.getRootNode();\n      return root instanceof ShadowRoot ? root : null;\n    }\n    if (element instanceof ShadowRoot) {\n      return element;\n    }\n\n    // when we don't find a shadow root\n    if (!element.parentNode) {\n      return null;\n    }\n    return Util.findShadowRoot(element.parentNode);\n  },\n  jQueryDetection: function jQueryDetection() {\n    if (typeof (external_jQuery_default()) === 'undefined') {\n      throw new TypeError('Bootstrap\\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\\'s JavaScript.');\n    }\n    var version = external_jQuery_default().fn.jquery.split(' ')[0].split('.');\n    var minMajor = 1;\n    var ltMajor = 2;\n    var minMinor = 9;\n    var minPatch = 1;\n    var maxMajor = 4;\n    if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {\n      throw new Error('Bootstrap\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');\n    }\n  }\n};\nUtil.jQueryDetection();\nsetTransitionEndSupport();\n/* harmony default export */ var util = (Util);\n;// ./node_modules/bootstrap/js/src/alert.js\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n/**\n * Constants\n */\n\nvar NAME = 'alert';\nvar VERSION = '4.6.2';\nvar DATA_KEY = 'bs.alert';\nvar EVENT_KEY = \".\".concat(DATA_KEY);\nvar DATA_API_KEY = '.data-api';\nvar JQUERY_NO_CONFLICT = (external_jQuery_default()).fn[NAME];\nvar CLASS_NAME_ALERT = 'alert';\nvar CLASS_NAME_FADE = 'fade';\nvar CLASS_NAME_SHOW = 'show';\nvar EVENT_CLOSE = \"close\".concat(EVENT_KEY);\nvar EVENT_CLOSED = \"closed\".concat(EVENT_KEY);\nvar EVENT_CLICK_DATA_API = \"click\".concat(EVENT_KEY).concat(DATA_API_KEY);\nvar SELECTOR_DISMISS = '[data-dismiss=\"alert\"]';\n\n/**\n * Class definition\n */\nvar Alert = /*#__PURE__*/function () {\n  function Alert(element) {\n    _classCallCheck(this, Alert);\n    this._element = element;\n  }\n\n  // Getters\n  return _createClass(Alert, [{\n    key: \"close\",\n    value:\n    // Public\n    function close(element) {\n      var rootElement = this._element;\n      if (element) {\n        rootElement = this._getRootElement(element);\n      }\n      var customEvent = this._triggerCloseEvent(rootElement);\n      if (customEvent.isDefaultPrevented()) {\n        return;\n      }\n      this._removeElement(rootElement);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      external_jQuery_default().removeData(this._element, DATA_KEY);\n      this._element = null;\n    }\n\n    // Private\n  }, {\n    key: \"_getRootElement\",\n    value: function _getRootElement(element) {\n      var selector = util.getSelectorFromElement(element);\n      var parent = false;\n      if (selector) {\n        parent = document.querySelector(selector);\n      }\n      if (!parent) {\n        parent = external_jQuery_default()(element).closest(\".\".concat(CLASS_NAME_ALERT))[0];\n      }\n      return parent;\n    }\n  }, {\n    key: \"_triggerCloseEvent\",\n    value: function _triggerCloseEvent(element) {\n      var closeEvent = external_jQuery_default().Event(EVENT_CLOSE);\n      external_jQuery_default()(element).trigger(closeEvent);\n      return closeEvent;\n    }\n  }, {\n    key: \"_removeElement\",\n    value: function _removeElement(element) {\n      var _this = this;\n      external_jQuery_default()(element).removeClass(CLASS_NAME_SHOW);\n      if (!external_jQuery_default()(element).hasClass(CLASS_NAME_FADE)) {\n        this._destroyElement(element);\n        return;\n      }\n      var transitionDuration = util.getTransitionDurationFromElement(element);\n      external_jQuery_default()(element).one(util.TRANSITION_END, function (event) {\n        return _this._destroyElement(element, event);\n      }).emulateTransitionEnd(transitionDuration);\n    }\n  }, {\n    key: \"_destroyElement\",\n    value: function _destroyElement(element) {\n      external_jQuery_default()(element).detach().trigger(EVENT_CLOSED).remove();\n    }\n\n    // Static\n  }], [{\n    key: \"VERSION\",\n    get: function get() {\n      return VERSION;\n    }\n  }, {\n    key: \"_jQueryInterface\",\n    value: function _jQueryInterface(config) {\n      return this.each(function () {\n        var $element = external_jQuery_default()(this);\n        var data = $element.data(DATA_KEY);\n        if (!data) {\n          data = new Alert(this);\n          $element.data(DATA_KEY, data);\n        }\n        if (config === 'close') {\n          data[config](this);\n        }\n      });\n    }\n  }, {\n    key: \"_handleDismiss\",\n    value: function _handleDismiss(alertInstance) {\n      return function (event) {\n        if (event) {\n          event.preventDefault();\n        }\n        alertInstance.close(this);\n      };\n    }\n  }]);\n}();\n/**\n * Data API implementation\n */\nexternal_jQuery_default()(document).on(EVENT_CLICK_DATA_API, SELECTOR_DISMISS, Alert._handleDismiss(new Alert()));\n\n/**\n * jQuery\n */\n\n(external_jQuery_default()).fn[NAME] = Alert._jQueryInterface;\n(external_jQuery_default()).fn[NAME].Constructor = Alert;\n(external_jQuery_default()).fn[NAME].noConflict = function () {\n  (external_jQuery_default()).fn[NAME] = JQUERY_NO_CONFLICT;\n  return Alert._jQueryInterface;\n};\n/* harmony default export */ var src_alert = ((/* unused pure expression or super */ null && (Alert)));\n;// ./node_modules/bootstrap/js/src/button.js\nfunction button_typeof(o) { \"@babel/helpers - typeof\"; return button_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, button_typeof(o); }\nfunction button_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction button_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, button_toPropertyKey(o.key), o); } }\nfunction button_createClass(e, r, t) { return r && button_defineProperties(e.prototype, r), t && button_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction button_toPropertyKey(t) { var i = button_toPrimitive(t, \"string\"); return \"symbol\" == button_typeof(i) ? i : i + \"\"; }\nfunction button_toPrimitive(t, r) { if (\"object\" != button_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != button_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n/**\n * Constants\n */\n\nvar button_NAME = 'button';\nvar button_VERSION = '4.6.2';\nvar button_DATA_KEY = 'bs.button';\nvar button_EVENT_KEY = \".\".concat(button_DATA_KEY);\nvar button_DATA_API_KEY = '.data-api';\nvar button_JQUERY_NO_CONFLICT = (external_jQuery_default()).fn[button_NAME];\nvar CLASS_NAME_ACTIVE = 'active';\nvar CLASS_NAME_BUTTON = 'btn';\nvar CLASS_NAME_FOCUS = 'focus';\nvar button_EVENT_CLICK_DATA_API = \"click\".concat(button_EVENT_KEY).concat(button_DATA_API_KEY);\nvar EVENT_FOCUS_BLUR_DATA_API = \"focus\".concat(button_EVENT_KEY).concat(button_DATA_API_KEY, \" \") + \"blur\".concat(button_EVENT_KEY).concat(button_DATA_API_KEY);\nvar EVENT_LOAD_DATA_API = \"load\".concat(button_EVENT_KEY).concat(button_DATA_API_KEY);\nvar SELECTOR_DATA_TOGGLE_CARROT = '[data-toggle^=\"button\"]';\nvar SELECTOR_DATA_TOGGLES = '[data-toggle=\"buttons\"]';\nvar SELECTOR_DATA_TOGGLE = '[data-toggle=\"button\"]';\nvar SELECTOR_DATA_TOGGLES_BUTTONS = '[data-toggle=\"buttons\"] .btn';\nvar SELECTOR_INPUT = 'input:not([type=\"hidden\"])';\nvar SELECTOR_ACTIVE = '.active';\nvar SELECTOR_BUTTON = '.btn';\n\n/**\n * Class definition\n */\nvar Button = /*#__PURE__*/function () {\n  function Button(element) {\n    button_classCallCheck(this, Button);\n    this._element = element;\n    this.shouldAvoidTriggerChange = false;\n  }\n\n  // Getters\n  return button_createClass(Button, [{\n    key: \"toggle\",\n    value:\n    // Public\n    function toggle() {\n      var triggerChangeEvent = true;\n      var addAriaPressed = true;\n      var rootElement = external_jQuery_default()(this._element).closest(SELECTOR_DATA_TOGGLES)[0];\n      if (rootElement) {\n        var input = this._element.querySelector(SELECTOR_INPUT);\n        if (input) {\n          if (input.type === 'radio') {\n            if (input.checked && this._element.classList.contains(CLASS_NAME_ACTIVE)) {\n              triggerChangeEvent = false;\n            } else {\n              var activeElement = rootElement.querySelector(SELECTOR_ACTIVE);\n              if (activeElement) {\n                external_jQuery_default()(activeElement).removeClass(CLASS_NAME_ACTIVE);\n              }\n            }\n          }\n          if (triggerChangeEvent) {\n            // if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input\n            if (input.type === 'checkbox' || input.type === 'radio') {\n              input.checked = !this._element.classList.contains(CLASS_NAME_ACTIVE);\n            }\n            if (!this.shouldAvoidTriggerChange) {\n              external_jQuery_default()(input).trigger('change');\n            }\n          }\n          input.focus();\n          addAriaPressed = false;\n        }\n      }\n      if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {\n        if (addAriaPressed) {\n          this._element.setAttribute('aria-pressed', !this._element.classList.contains(CLASS_NAME_ACTIVE));\n        }\n        if (triggerChangeEvent) {\n          external_jQuery_default()(this._element).toggleClass(CLASS_NAME_ACTIVE);\n        }\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      external_jQuery_default().removeData(this._element, button_DATA_KEY);\n      this._element = null;\n    }\n\n    // Static\n  }], [{\n    key: \"VERSION\",\n    get: function get() {\n      return button_VERSION;\n    }\n  }, {\n    key: \"_jQueryInterface\",\n    value: function _jQueryInterface(config, avoidTriggerChange) {\n      return this.each(function () {\n        var $element = external_jQuery_default()(this);\n        var data = $element.data(button_DATA_KEY);\n        if (!data) {\n          data = new Button(this);\n          $element.data(button_DATA_KEY, data);\n        }\n        data.shouldAvoidTriggerChange = avoidTriggerChange;\n        if (config === 'toggle') {\n          data[config]();\n        }\n      });\n    }\n  }]);\n}();\n/**\n * Data API implementation\n */\nexternal_jQuery_default()(document).on(button_EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, function (event) {\n  var button = event.target;\n  var initialButton = button;\n  if (!external_jQuery_default()(button).hasClass(CLASS_NAME_BUTTON)) {\n    button = external_jQuery_default()(button).closest(SELECTOR_BUTTON)[0];\n  }\n  if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {\n    event.preventDefault(); // work around Firefox bug #1540995\n  } else {\n    var inputBtn = button.querySelector(SELECTOR_INPUT);\n    if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {\n      event.preventDefault(); // work around Firefox bug #1540995\n      return;\n    }\n    if (initialButton.tagName === 'INPUT' || button.tagName !== 'LABEL') {\n      Button._jQueryInterface.call(external_jQuery_default()(button), 'toggle', initialButton.tagName === 'INPUT');\n    }\n  }\n}).on(EVENT_FOCUS_BLUR_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, function (event) {\n  var button = external_jQuery_default()(event.target).closest(SELECTOR_BUTTON)[0];\n  external_jQuery_default()(button).toggleClass(CLASS_NAME_FOCUS, /^focus(in)?$/.test(event.type));\n});\nexternal_jQuery_default()(window).on(EVENT_LOAD_DATA_API, function () {\n  // ensure correct active class is set to match the controls' actual values/states\n\n  // find all checkboxes/readio buttons inside data-toggle groups\n  var buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS));\n  for (var i = 0, len = buttons.length; i < len; i++) {\n    var button = buttons[i];\n    var input = button.querySelector(SELECTOR_INPUT);\n    if (input.checked || input.hasAttribute('checked')) {\n      button.classList.add(CLASS_NAME_ACTIVE);\n    } else {\n      button.classList.remove(CLASS_NAME_ACTIVE);\n    }\n  }\n\n  // find all button toggles\n  buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE));\n  for (var _i = 0, _len = buttons.length; _i < _len; _i++) {\n    var _button = buttons[_i];\n    if (_button.getAttribute('aria-pressed') === 'true') {\n      _button.classList.add(CLASS_NAME_ACTIVE);\n    } else {\n      _button.classList.remove(CLASS_NAME_ACTIVE);\n    }\n  }\n});\n\n/**\n * jQuery\n */\n\n(external_jQuery_default()).fn[button_NAME] = Button._jQueryInterface;\n(external_jQuery_default()).fn[button_NAME].Constructor = Button;\n(external_jQuery_default()).fn[button_NAME].noConflict = function () {\n  (external_jQuery_default()).fn[button_NAME] = button_JQUERY_NO_CONFLICT;\n  return Button._jQueryInterface;\n};\n/* harmony default export */ var src_button = ((/* unused pure expression or super */ null && (Button)));\n;// ./node_modules/bootstrap/js/src/collapse.js\nfunction collapse_typeof(o) { \"@babel/helpers - typeof\"; return collapse_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, collapse_typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = collapse_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction collapse_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction collapse_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, collapse_toPropertyKey(o.key), o); } }\nfunction collapse_createClass(e, r, t) { return r && collapse_defineProperties(e.prototype, r), t && collapse_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction collapse_toPropertyKey(t) { var i = collapse_toPrimitive(t, \"string\"); return \"symbol\" == collapse_typeof(i) ? i : i + \"\"; }\nfunction collapse_toPrimitive(t, r) { if (\"object\" != collapse_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != collapse_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n/**\n * Constants\n */\n\nvar collapse_NAME = 'collapse';\nvar collapse_VERSION = '4.6.2';\nvar collapse_DATA_KEY = 'bs.collapse';\nvar collapse_EVENT_KEY = \".\".concat(collapse_DATA_KEY);\nvar collapse_DATA_API_KEY = '.data-api';\nvar collapse_JQUERY_NO_CONFLICT = (external_jQuery_default()).fn[collapse_NAME];\nvar collapse_CLASS_NAME_SHOW = 'show';\nvar CLASS_NAME_COLLAPSE = 'collapse';\nvar CLASS_NAME_COLLAPSING = 'collapsing';\nvar CLASS_NAME_COLLAPSED = 'collapsed';\nvar DIMENSION_WIDTH = 'width';\nvar DIMENSION_HEIGHT = 'height';\nvar EVENT_SHOW = \"show\".concat(collapse_EVENT_KEY);\nvar EVENT_SHOWN = \"shown\".concat(collapse_EVENT_KEY);\nvar EVENT_HIDE = \"hide\".concat(collapse_EVENT_KEY);\nvar EVENT_HIDDEN = \"hidden\".concat(collapse_EVENT_KEY);\nvar collapse_EVENT_CLICK_DATA_API = \"click\".concat(collapse_EVENT_KEY).concat(collapse_DATA_API_KEY);\nvar SELECTOR_ACTIVES = '.show, .collapsing';\nvar collapse_SELECTOR_DATA_TOGGLE = '[data-toggle=\"collapse\"]';\nvar Default = {\n  toggle: true,\n  parent: ''\n};\nvar DefaultType = {\n  toggle: 'boolean',\n  parent: '(string|element)'\n};\n\n/**\n * Class definition\n */\nvar Collapse = /*#__PURE__*/function () {\n  function Collapse(element, config) {\n    collapse_classCallCheck(this, Collapse);\n    this._isTransitioning = false;\n    this._element = element;\n    this._config = this._getConfig(config);\n    this._triggerArray = [].slice.call(document.querySelectorAll(\"[data-toggle=\\\"collapse\\\"][href=\\\"#\".concat(element.id, \"\\\"],\") + \"[data-toggle=\\\"collapse\\\"][data-target=\\\"#\".concat(element.id, \"\\\"]\")));\n    var toggleList = [].slice.call(document.querySelectorAll(collapse_SELECTOR_DATA_TOGGLE));\n    for (var i = 0, len = toggleList.length; i < len; i++) {\n      var elem = toggleList[i];\n      var selector = util.getSelectorFromElement(elem);\n      var filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {\n        return foundElem === element;\n      });\n      if (selector !== null && filterElement.length > 0) {\n        this._selector = selector;\n        this._triggerArray.push(elem);\n      }\n    }\n    this._parent = this._config.parent ? this._getParent() : null;\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n    }\n    if (this._config.toggle) {\n      this.toggle();\n    }\n  }\n\n  // Getters\n  return collapse_createClass(Collapse, [{\n    key: \"toggle\",\n    value:\n    // Public\n    function toggle() {\n      if (external_jQuery_default()(this._element).hasClass(collapse_CLASS_NAME_SHOW)) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this = this;\n      if (this._isTransitioning || external_jQuery_default()(this._element).hasClass(collapse_CLASS_NAME_SHOW)) {\n        return;\n      }\n      var actives;\n      var activesData;\n      if (this._parent) {\n        actives = [].slice.call(this._parent.querySelectorAll(SELECTOR_ACTIVES)).filter(function (elem) {\n          if (typeof _this._config.parent === 'string') {\n            return elem.getAttribute('data-parent') === _this._config.parent;\n          }\n          return elem.classList.contains(CLASS_NAME_COLLAPSE);\n        });\n        if (actives.length === 0) {\n          actives = null;\n        }\n      }\n      if (actives) {\n        activesData = external_jQuery_default()(actives).not(this._selector).data(collapse_DATA_KEY);\n        if (activesData && activesData._isTransitioning) {\n          return;\n        }\n      }\n      var startEvent = external_jQuery_default().Event(EVENT_SHOW);\n      external_jQuery_default()(this._element).trigger(startEvent);\n      if (startEvent.isDefaultPrevented()) {\n        return;\n      }\n      if (actives) {\n        Collapse._jQueryInterface.call(external_jQuery_default()(actives).not(this._selector), 'hide');\n        if (!activesData) {\n          external_jQuery_default()(actives).data(collapse_DATA_KEY, null);\n        }\n      }\n      var dimension = this._getDimension();\n      external_jQuery_default()(this._element).removeClass(CLASS_NAME_COLLAPSE).addClass(CLASS_NAME_COLLAPSING);\n      this._element.style[dimension] = 0;\n      if (this._triggerArray.length) {\n        external_jQuery_default()(this._triggerArray).removeClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', true);\n      }\n      this.setTransitioning(true);\n      var complete = function complete() {\n        external_jQuery_default()(_this._element).removeClass(CLASS_NAME_COLLAPSING).addClass(\"\".concat(CLASS_NAME_COLLAPSE, \" \").concat(collapse_CLASS_NAME_SHOW));\n        _this._element.style[dimension] = '';\n        _this.setTransitioning(false);\n        external_jQuery_default()(_this._element).trigger(EVENT_SHOWN);\n      };\n      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n      var scrollSize = \"scroll\".concat(capitalizedDimension);\n      var transitionDuration = util.getTransitionDurationFromElement(this._element);\n      external_jQuery_default()(this._element).one(util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      this._element.style[dimension] = \"\".concat(this._element[scrollSize], \"px\");\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this2 = this;\n      if (this._isTransitioning || !external_jQuery_default()(this._element).hasClass(collapse_CLASS_NAME_SHOW)) {\n        return;\n      }\n      var startEvent = external_jQuery_default().Event(EVENT_HIDE);\n      external_jQuery_default()(this._element).trigger(startEvent);\n      if (startEvent.isDefaultPrevented()) {\n        return;\n      }\n      var dimension = this._getDimension();\n      this._element.style[dimension] = \"\".concat(this._element.getBoundingClientRect()[dimension], \"px\");\n      util.reflow(this._element);\n      external_jQuery_default()(this._element).addClass(CLASS_NAME_COLLAPSING).removeClass(\"\".concat(CLASS_NAME_COLLAPSE, \" \").concat(collapse_CLASS_NAME_SHOW));\n      var triggerArrayLength = this._triggerArray.length;\n      if (triggerArrayLength > 0) {\n        for (var i = 0; i < triggerArrayLength; i++) {\n          var trigger = this._triggerArray[i];\n          var selector = util.getSelectorFromElement(trigger);\n          if (selector !== null) {\n            var $elem = external_jQuery_default()([].slice.call(document.querySelectorAll(selector)));\n            if (!$elem.hasClass(collapse_CLASS_NAME_SHOW)) {\n              external_jQuery_default()(trigger).addClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', false);\n            }\n          }\n        }\n      }\n      this.setTransitioning(true);\n      var complete = function complete() {\n        _this2.setTransitioning(false);\n        external_jQuery_default()(_this2._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE).trigger(EVENT_HIDDEN);\n      };\n      this._element.style[dimension] = '';\n      var transitionDuration = util.getTransitionDurationFromElement(this._element);\n      external_jQuery_default()(this._element).one(util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n    }\n  }, {\n    key: \"setTransitioning\",\n    value: function setTransitioning(isTransitioning) {\n      this._isTransitioning = isTransitioning;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      external_jQuery_default().removeData(this._element, collapse_DATA_KEY);\n      this._config = null;\n      this._parent = null;\n      this._element = null;\n      this._triggerArray = null;\n      this._isTransitioning = null;\n    }\n\n    // Private\n  }, {\n    key: \"_getConfig\",\n    value: function _getConfig(config) {\n      config = _objectSpread(_objectSpread({}, Default), config);\n      config.toggle = Boolean(config.toggle); // Coerce string values\n      util.typeCheckConfig(collapse_NAME, config, DefaultType);\n      return config;\n    }\n  }, {\n    key: \"_getDimension\",\n    value: function _getDimension() {\n      var hasWidth = external_jQuery_default()(this._element).hasClass(DIMENSION_WIDTH);\n      return hasWidth ? DIMENSION_WIDTH : DIMENSION_HEIGHT;\n    }\n  }, {\n    key: \"_getParent\",\n    value: function _getParent() {\n      var _this3 = this;\n      var parent;\n      if (util.isElement(this._config.parent)) {\n        parent = this._config.parent;\n\n        // It's a jQuery object\n        if (typeof this._config.parent.jquery !== 'undefined') {\n          parent = this._config.parent[0];\n        }\n      } else {\n        parent = document.querySelector(this._config.parent);\n      }\n      var selector = \"[data-toggle=\\\"collapse\\\"][data-parent=\\\"\".concat(this._config.parent, \"\\\"]\");\n      var children = [].slice.call(parent.querySelectorAll(selector));\n      external_jQuery_default()(children).each(function (i, element) {\n        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n      });\n      return parent;\n    }\n  }, {\n    key: \"_addAriaAndCollapsedClass\",\n    value: function _addAriaAndCollapsedClass(element, triggerArray) {\n      var isOpen = external_jQuery_default()(element).hasClass(collapse_CLASS_NAME_SHOW);\n      if (triggerArray.length) {\n        external_jQuery_default()(triggerArray).toggleClass(CLASS_NAME_COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n      }\n    }\n\n    // Static\n  }], [{\n    key: \"VERSION\",\n    get: function get() {\n      return collapse_VERSION;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Default;\n    }\n  }, {\n    key: \"_getTargetFromElement\",\n    value: function _getTargetFromElement(element) {\n      var selector = util.getSelectorFromElement(element);\n      return selector ? document.querySelector(selector) : null;\n    }\n  }, {\n    key: \"_jQueryInterface\",\n    value: function _jQueryInterface(config) {\n      return this.each(function () {\n        var $element = external_jQuery_default()(this);\n        var data = $element.data(collapse_DATA_KEY);\n        var _config = _objectSpread(_objectSpread(_objectSpread({}, Default), $element.data()), collapse_typeof(config) === 'object' && config ? config : {});\n        if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {\n          _config.toggle = false;\n        }\n        if (!data) {\n          data = new Collapse(this, _config);\n          $element.data(collapse_DATA_KEY, data);\n        }\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n          data[config]();\n        }\n      });\n    }\n  }]);\n}();\n/**\n * Data API implementation\n */\nexternal_jQuery_default()(document).on(collapse_EVENT_CLICK_DATA_API, collapse_SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.currentTarget.tagName === 'A') {\n    event.preventDefault();\n  }\n  var $trigger = external_jQuery_default()(this);\n  var selector = util.getSelectorFromElement(this);\n  var selectors = [].slice.call(document.querySelectorAll(selector));\n  external_jQuery_default()(selectors).each(function () {\n    var $target = external_jQuery_default()(this);\n    var data = $target.data(collapse_DATA_KEY);\n    var config = data ? 'toggle' : $trigger.data();\n    Collapse._jQueryInterface.call($target, config);\n  });\n});\n\n/**\n * jQuery\n */\n\n(external_jQuery_default()).fn[collapse_NAME] = Collapse._jQueryInterface;\n(external_jQuery_default()).fn[collapse_NAME].Constructor = Collapse;\n(external_jQuery_default()).fn[collapse_NAME].noConflict = function () {\n  (external_jQuery_default()).fn[collapse_NAME] = collapse_JQUERY_NO_CONFLICT;\n  return Collapse._jQueryInterface;\n};\n/* harmony default export */ var collapse = ((/* unused pure expression or super */ null && (Collapse)));\n;// ./node_modules/popper.js/dist/esm/popper.js\n/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.16.1\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\nvar timeoutDuration = function () {\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}();\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n    overflow = _getStyleComputedProp.overflow,\n    overflowX = _getStyleComputedProp.overflowX,\n    overflowY = _getStyleComputedProp.overflowY;\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nfunction getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n  var nodeName = offsetParent && offsetParent.nodeName;\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n  return offsetParent;\n}\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);\n}\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n};\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.width;\n  var height = sizes.height || element.clientHeight || result.height;\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n  return getClientRect(result);\n}\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop);\n    var marginLeft = parseFloat(styles.marginLeft);\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n  return offsets;\n}\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = {\n    top: 0,\n    left: 0\n  };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n        height = _getWindowSizes.height,\n        width = _getWindowSizes.width;\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n  return boundaries;\n}\nfunction getArea(_ref) {\n  var width = _ref.width,\n    height = _ref.height;\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n      height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n  var variation = placement.split('-')[1];\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n      data = fn(data, modifier);\n    }\n  });\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n      enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, {\n    passive: true\n  });\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, {\n    passive: true\n  });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, {\n    position: options.positionFixed ? 'fixed' : 'absolute'\n  });\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n    popper = _data$offsets.popper,\n    reference = _data$offsets.reference;\n  var round = Math.round,\n    floor = Math.floor;\n  var noRound = function noRound(v) {\n    return v;\n  };\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n    y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n    top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n    popper = _data$offsets.popper,\n    reference = _data$offsets.reference;\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n  var flipOrder = [];\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n    popper = _data$offsets.popper,\n    reference = _data$offsets.reference;\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n    _data$offsets = data.offsets,\n    popper = _data$offsets.popper,\n    reference = _data$offsets.reference;\n  var basePlacement = placement.split('-')[0];\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n    left = popperStyles.left,\n    transform = popperStyles[transformProp];\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n  options.boundaries = boundaries;\n  var order = options.priority;\n  var popper = data.offsets.popper;\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n  data.offsets.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n      reference = _data$offsets.reference,\n      popper = _data$offsets.popper;\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n    popper = _data$offsets.popper,\n    reference = _data$offsets.reference;\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\nPopper.Utils = (typeof window !== 'undefined' ? window : __webpack_require__.g).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n/* harmony default export */ var popper = (Popper);\n;// ./node_modules/bootstrap/js/src/dropdown.js\nfunction dropdown_typeof(o) { \"@babel/helpers - typeof\"; return dropdown_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, dropdown_typeof(o); }\nfunction dropdown_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction dropdown_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? dropdown_ownKeys(Object(t), !0).forEach(function (r) { dropdown_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : dropdown_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction dropdown_defineProperty(e, r, t) { return (r = dropdown_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction dropdown_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction dropdown_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, dropdown_toPropertyKey(o.key), o); } }\nfunction dropdown_createClass(e, r, t) { return r && dropdown_defineProperties(e.prototype, r), t && dropdown_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction dropdown_toPropertyKey(t) { var i = dropdown_toPrimitive(t, \"string\"); return \"symbol\" == dropdown_typeof(i) ? i : i + \"\"; }\nfunction dropdown_toPrimitive(t, r) { if (\"object\" != dropdown_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != dropdown_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n\n/**\n * Constants\n */\n\nvar dropdown_NAME = 'dropdown';\nvar dropdown_VERSION = '4.6.2';\nvar dropdown_DATA_KEY = 'bs.dropdown';\nvar dropdown_EVENT_KEY = \".\".concat(dropdown_DATA_KEY);\nvar dropdown_DATA_API_KEY = '.data-api';\nvar dropdown_JQUERY_NO_CONFLICT = (external_jQuery_default()).fn[dropdown_NAME];\nvar ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\nvar SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key\nvar TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key\nvar ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key\nvar ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key\nvar RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)\nvar REGEXP_KEYDOWN = new RegExp(\"\".concat(ARROW_UP_KEYCODE, \"|\").concat(ARROW_DOWN_KEYCODE, \"|\").concat(ESCAPE_KEYCODE));\nvar CLASS_NAME_DISABLED = 'disabled';\nvar dropdown_CLASS_NAME_SHOW = 'show';\nvar CLASS_NAME_DROPUP = 'dropup';\nvar CLASS_NAME_DROPRIGHT = 'dropright';\nvar CLASS_NAME_DROPLEFT = 'dropleft';\nvar CLASS_NAME_MENURIGHT = 'dropdown-menu-right';\nvar CLASS_NAME_POSITION_STATIC = 'position-static';\nvar dropdown_EVENT_HIDE = \"hide\".concat(dropdown_EVENT_KEY);\nvar dropdown_EVENT_HIDDEN = \"hidden\".concat(dropdown_EVENT_KEY);\nvar dropdown_EVENT_SHOW = \"show\".concat(dropdown_EVENT_KEY);\nvar dropdown_EVENT_SHOWN = \"shown\".concat(dropdown_EVENT_KEY);\nvar EVENT_CLICK = \"click\".concat(dropdown_EVENT_KEY);\nvar dropdown_EVENT_CLICK_DATA_API = \"click\".concat(dropdown_EVENT_KEY).concat(dropdown_DATA_API_KEY);\nvar EVENT_KEYDOWN_DATA_API = \"keydown\".concat(dropdown_EVENT_KEY).concat(dropdown_DATA_API_KEY);\nvar EVENT_KEYUP_DATA_API = \"keyup\".concat(dropdown_EVENT_KEY).concat(dropdown_DATA_API_KEY);\nvar dropdown_SELECTOR_DATA_TOGGLE = '[data-toggle=\"dropdown\"]';\nvar SELECTOR_FORM_CHILD = '.dropdown form';\nvar SELECTOR_MENU = '.dropdown-menu';\nvar SELECTOR_NAVBAR_NAV = '.navbar-nav';\nvar SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';\nvar PLACEMENT_TOP = 'top-start';\nvar PLACEMENT_TOPEND = 'top-end';\nvar PLACEMENT_BOTTOM = 'bottom-start';\nvar PLACEMENT_BOTTOMEND = 'bottom-end';\nvar PLACEMENT_RIGHT = 'right-start';\nvar PLACEMENT_LEFT = 'left-start';\nvar dropdown_Default = {\n  offset: 0,\n  flip: true,\n  boundary: 'scrollParent',\n  reference: 'toggle',\n  display: 'dynamic',\n  popperConfig: null\n};\nvar dropdown_DefaultType = {\n  offset: '(number|string|function)',\n  flip: 'boolean',\n  boundary: '(string|element)',\n  reference: '(string|element)',\n  display: 'string',\n  popperConfig: '(null|object)'\n};\n\n/**\n * Class definition\n */\nvar Dropdown = /*#__PURE__*/function () {\n  function Dropdown(element, config) {\n    dropdown_classCallCheck(this, Dropdown);\n    this._element = element;\n    this._popper = null;\n    this._config = this._getConfig(config);\n    this._menu = this._getMenuElement();\n    this._inNavbar = this._detectNavbar();\n    this._addEventListeners();\n  }\n\n  // Getters\n  return dropdown_createClass(Dropdown, [{\n    key: \"toggle\",\n    value:\n    // Public\n    function toggle() {\n      if (this._element.disabled || external_jQuery_default()(this._element).hasClass(CLASS_NAME_DISABLED)) {\n        return;\n      }\n      var isActive = external_jQuery_default()(this._menu).hasClass(dropdown_CLASS_NAME_SHOW);\n      Dropdown._clearMenus();\n      if (isActive) {\n        return;\n      }\n      this.show(true);\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var usePopper = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this._element.disabled || external_jQuery_default()(this._element).hasClass(CLASS_NAME_DISABLED) || external_jQuery_default()(this._menu).hasClass(dropdown_CLASS_NAME_SHOW)) {\n        return;\n      }\n      var relatedTarget = {\n        relatedTarget: this._element\n      };\n      var showEvent = external_jQuery_default().Event(dropdown_EVENT_SHOW, relatedTarget);\n      var parent = Dropdown._getParentFromElement(this._element);\n      external_jQuery_default()(parent).trigger(showEvent);\n      if (showEvent.isDefaultPrevented()) {\n        return;\n      }\n\n      // Totally disable Popper for Dropdowns in Navbar\n      if (!this._inNavbar && usePopper) {\n        // Check for Popper dependency\n        if (typeof popper === 'undefined') {\n          throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org)');\n        }\n        var referenceElement = this._element;\n        if (this._config.reference === 'parent') {\n          referenceElement = parent;\n        } else if (util.isElement(this._config.reference)) {\n          referenceElement = this._config.reference;\n\n          // Check if it's jQuery element\n          if (typeof this._config.reference.jquery !== 'undefined') {\n            referenceElement = this._config.reference[0];\n          }\n        }\n\n        // If boundary is not `scrollParent`, then set position to `static`\n        // to allow the menu to \"escape\" the scroll parent's boundaries\n        // https://github.com/twbs/bootstrap/issues/24251\n        if (this._config.boundary !== 'scrollParent') {\n          external_jQuery_default()(parent).addClass(CLASS_NAME_POSITION_STATIC);\n        }\n        this._popper = new popper(referenceElement, this._menu, this._getPopperConfig());\n      }\n\n      // If this is a touch-enabled device we add extra\n      // empty mouseover listeners to the body's immediate children;\n      // only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement && external_jQuery_default()(parent).closest(SELECTOR_NAVBAR_NAV).length === 0) {\n        external_jQuery_default()(document.body).children().on('mouseover', null, (external_jQuery_default()).noop);\n      }\n      this._element.focus();\n      this._element.setAttribute('aria-expanded', true);\n      external_jQuery_default()(this._menu).toggleClass(dropdown_CLASS_NAME_SHOW);\n      external_jQuery_default()(parent).toggleClass(dropdown_CLASS_NAME_SHOW).trigger(external_jQuery_default().Event(dropdown_EVENT_SHOWN, relatedTarget));\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this._element.disabled || external_jQuery_default()(this._element).hasClass(CLASS_NAME_DISABLED) || !external_jQuery_default()(this._menu).hasClass(dropdown_CLASS_NAME_SHOW)) {\n        return;\n      }\n      var relatedTarget = {\n        relatedTarget: this._element\n      };\n      var hideEvent = external_jQuery_default().Event(dropdown_EVENT_HIDE, relatedTarget);\n      var parent = Dropdown._getParentFromElement(this._element);\n      external_jQuery_default()(parent).trigger(hideEvent);\n      if (hideEvent.isDefaultPrevented()) {\n        return;\n      }\n      if (this._popper) {\n        this._popper.destroy();\n      }\n      external_jQuery_default()(this._menu).toggleClass(dropdown_CLASS_NAME_SHOW);\n      external_jQuery_default()(parent).toggleClass(dropdown_CLASS_NAME_SHOW).trigger(external_jQuery_default().Event(dropdown_EVENT_HIDDEN, relatedTarget));\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      external_jQuery_default().removeData(this._element, dropdown_DATA_KEY);\n      external_jQuery_default()(this._element).off(dropdown_EVENT_KEY);\n      this._element = null;\n      this._menu = null;\n      if (this._popper !== null) {\n        this._popper.destroy();\n        this._popper = null;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._inNavbar = this._detectNavbar();\n      if (this._popper !== null) {\n        this._popper.scheduleUpdate();\n      }\n    }\n\n    // Private\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this = this;\n      external_jQuery_default()(this._element).on(EVENT_CLICK, function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        _this.toggle();\n      });\n    }\n  }, {\n    key: \"_getConfig\",\n    value: function _getConfig(config) {\n      config = dropdown_objectSpread(dropdown_objectSpread(dropdown_objectSpread({}, this.constructor.Default), external_jQuery_default()(this._element).data()), config);\n      util.typeCheckConfig(dropdown_NAME, config, this.constructor.DefaultType);\n      return config;\n    }\n  }, {\n    key: \"_getMenuElement\",\n    value: function _getMenuElement() {\n      if (!this._menu) {\n        var parent = Dropdown._getParentFromElement(this._element);\n        if (parent) {\n          this._menu = parent.querySelector(SELECTOR_MENU);\n        }\n      }\n      return this._menu;\n    }\n  }, {\n    key: \"_getPlacement\",\n    value: function _getPlacement() {\n      var $parentDropdown = external_jQuery_default()(this._element.parentNode);\n      var placement = PLACEMENT_BOTTOM;\n\n      // Handle dropup\n      if ($parentDropdown.hasClass(CLASS_NAME_DROPUP)) {\n        placement = external_jQuery_default()(this._menu).hasClass(CLASS_NAME_MENURIGHT) ? PLACEMENT_TOPEND : PLACEMENT_TOP;\n      } else if ($parentDropdown.hasClass(CLASS_NAME_DROPRIGHT)) {\n        placement = PLACEMENT_RIGHT;\n      } else if ($parentDropdown.hasClass(CLASS_NAME_DROPLEFT)) {\n        placement = PLACEMENT_LEFT;\n      } else if (external_jQuery_default()(this._menu).hasClass(CLASS_NAME_MENURIGHT)) {\n        placement = PLACEMENT_BOTTOMEND;\n      }\n      return placement;\n    }\n  }, {\n    key: \"_detectNavbar\",\n    value: function _detectNavbar() {\n      return external_jQuery_default()(this._element).closest('.navbar').length > 0;\n    }\n  }, {\n    key: \"_getOffset\",\n    value: function _getOffset() {\n      var _this2 = this;\n      var offset = {};\n      if (typeof this._config.offset === 'function') {\n        offset.fn = function (data) {\n          data.offsets = dropdown_objectSpread(dropdown_objectSpread({}, data.offsets), _this2._config.offset(data.offsets, _this2._element));\n          return data;\n        };\n      } else {\n        offset.offset = this._config.offset;\n      }\n      return offset;\n    }\n  }, {\n    key: \"_getPopperConfig\",\n    value: function _getPopperConfig() {\n      var popperConfig = {\n        placement: this._getPlacement(),\n        modifiers: {\n          offset: this._getOffset(),\n          flip: {\n            enabled: this._config.flip\n          },\n          preventOverflow: {\n            boundariesElement: this._config.boundary\n          }\n        }\n      };\n\n      // Disable Popper if we have a static display\n      if (this._config.display === 'static') {\n        popperConfig.modifiers.applyStyle = {\n          enabled: false\n        };\n      }\n      return dropdown_objectSpread(dropdown_objectSpread({}, popperConfig), this._config.popperConfig);\n    }\n\n    // Static\n  }], [{\n    key: \"VERSION\",\n    get: function get() {\n      return dropdown_VERSION;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return dropdown_Default;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return dropdown_DefaultType;\n    }\n  }, {\n    key: \"_jQueryInterface\",\n    value: function _jQueryInterface(config) {\n      return this.each(function () {\n        var data = external_jQuery_default()(this).data(dropdown_DATA_KEY);\n        var _config = dropdown_typeof(config) === 'object' ? config : null;\n        if (!data) {\n          data = new Dropdown(this, _config);\n          external_jQuery_default()(this).data(dropdown_DATA_KEY, data);\n        }\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n          data[config]();\n        }\n      });\n    }\n  }, {\n    key: \"_clearMenus\",\n    value: function _clearMenus(event) {\n      if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {\n        return;\n      }\n      var toggles = [].slice.call(document.querySelectorAll(dropdown_SELECTOR_DATA_TOGGLE));\n      for (var i = 0, len = toggles.length; i < len; i++) {\n        var parent = Dropdown._getParentFromElement(toggles[i]);\n        var context = external_jQuery_default()(toggles[i]).data(dropdown_DATA_KEY);\n        var relatedTarget = {\n          relatedTarget: toggles[i]\n        };\n        if (event && event.type === 'click') {\n          relatedTarget.clickEvent = event;\n        }\n        if (!context) {\n          continue;\n        }\n        var dropdownMenu = context._menu;\n        if (!external_jQuery_default()(parent).hasClass(dropdown_CLASS_NAME_SHOW)) {\n          continue;\n        }\n        if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && external_jQuery_default().contains(parent, event.target)) {\n          continue;\n        }\n        var hideEvent = external_jQuery_default().Event(dropdown_EVENT_HIDE, relatedTarget);\n        external_jQuery_default()(parent).trigger(hideEvent);\n        if (hideEvent.isDefaultPrevented()) {\n          continue;\n        }\n\n        // If this is a touch-enabled device we remove the extra\n        // empty mouseover listeners we added for iOS support\n        if ('ontouchstart' in document.documentElement) {\n          external_jQuery_default()(document.body).children().off('mouseover', null, (external_jQuery_default()).noop);\n        }\n        toggles[i].setAttribute('aria-expanded', 'false');\n        if (context._popper) {\n          context._popper.destroy();\n        }\n        external_jQuery_default()(dropdownMenu).removeClass(dropdown_CLASS_NAME_SHOW);\n        external_jQuery_default()(parent).removeClass(dropdown_CLASS_NAME_SHOW).trigger(external_jQuery_default().Event(dropdown_EVENT_HIDDEN, relatedTarget));\n      }\n    }\n  }, {\n    key: \"_getParentFromElement\",\n    value: function _getParentFromElement(element) {\n      var parent;\n      var selector = util.getSelectorFromElement(element);\n      if (selector) {\n        parent = document.querySelector(selector);\n      }\n      return parent || element.parentNode;\n    }\n\n    // eslint-disable-next-line complexity\n  }, {\n    key: \"_dataApiKeydownHandler\",\n    value: function _dataApiKeydownHandler(event) {\n      // If not input/textarea:\n      //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\n      // If input/textarea:\n      //  - If space key => not a dropdown command\n      //  - If key is other than escape\n      //    - If key is not up or down => not a dropdown command\n      //    - If trigger inside the menu => not a dropdown command\n      if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || external_jQuery_default()(event.target).closest(SELECTOR_MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {\n        return;\n      }\n      if (this.disabled || external_jQuery_default()(this).hasClass(CLASS_NAME_DISABLED)) {\n        return;\n      }\n      var parent = Dropdown._getParentFromElement(this);\n      var isActive = external_jQuery_default()(parent).hasClass(dropdown_CLASS_NAME_SHOW);\n      if (!isActive && event.which === ESCAPE_KEYCODE) {\n        return;\n      }\n      event.preventDefault();\n      event.stopPropagation();\n      if (!isActive || event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE) {\n        if (event.which === ESCAPE_KEYCODE) {\n          external_jQuery_default()(parent.querySelector(dropdown_SELECTOR_DATA_TOGGLE)).trigger('focus');\n        }\n        external_jQuery_default()(this).trigger('click');\n        return;\n      }\n      var items = [].slice.call(parent.querySelectorAll(SELECTOR_VISIBLE_ITEMS)).filter(function (item) {\n        return external_jQuery_default()(item).is(':visible');\n      });\n      if (items.length === 0) {\n        return;\n      }\n      var index = items.indexOf(event.target);\n      if (event.which === ARROW_UP_KEYCODE && index > 0) {\n        // Up\n        index--;\n      }\n      if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\n        // Down\n        index++;\n      }\n      if (index < 0) {\n        index = 0;\n      }\n      items[index].focus();\n    }\n  }]);\n}();\n/**\n * Data API implementation\n */\nexternal_jQuery_default()(document).on(EVENT_KEYDOWN_DATA_API, dropdown_SELECTOR_DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown._dataApiKeydownHandler).on(\"\".concat(dropdown_EVENT_CLICK_DATA_API, \" \").concat(EVENT_KEYUP_DATA_API), Dropdown._clearMenus).on(dropdown_EVENT_CLICK_DATA_API, dropdown_SELECTOR_DATA_TOGGLE, function (event) {\n  event.preventDefault();\n  event.stopPropagation();\n  Dropdown._jQueryInterface.call(external_jQuery_default()(this), 'toggle');\n}).on(dropdown_EVENT_CLICK_DATA_API, SELECTOR_FORM_CHILD, function (e) {\n  e.stopPropagation();\n});\n\n/**\n * jQuery\n */\n\n(external_jQuery_default()).fn[dropdown_NAME] = Dropdown._jQueryInterface;\n(external_jQuery_default()).fn[dropdown_NAME].Constructor = Dropdown;\n(external_jQuery_default()).fn[dropdown_NAME].noConflict = function () {\n  (external_jQuery_default()).fn[dropdown_NAME] = dropdown_JQUERY_NO_CONFLICT;\n  return Dropdown._jQueryInterface;\n};\n/* harmony default export */ var dropdown = ((/* unused pure expression or super */ null && (Dropdown)));\n;// ./node_modules/bootstrap/js/src/modal.js\nfunction modal_typeof(o) { \"@babel/helpers - typeof\"; return modal_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, modal_typeof(o); }\nfunction modal_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction modal_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? modal_ownKeys(Object(t), !0).forEach(function (r) { modal_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : modal_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction modal_defineProperty(e, r, t) { return (r = modal_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction modal_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction modal_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, modal_toPropertyKey(o.key), o); } }\nfunction modal_createClass(e, r, t) { return r && modal_defineProperties(e.prototype, r), t && modal_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction modal_toPropertyKey(t) { var i = modal_toPrimitive(t, \"string\"); return \"symbol\" == modal_typeof(i) ? i : i + \"\"; }\nfunction modal_toPrimitive(t, r) { if (\"object\" != modal_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != modal_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n/**\n * Constants\n */\n\nvar modal_NAME = 'modal';\nvar modal_VERSION = '4.6.2';\nvar modal_DATA_KEY = 'bs.modal';\nvar modal_EVENT_KEY = \".\".concat(modal_DATA_KEY);\nvar modal_DATA_API_KEY = '.data-api';\nvar modal_JQUERY_NO_CONFLICT = (external_jQuery_default()).fn[modal_NAME];\nvar modal_ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\n\nvar CLASS_NAME_SCROLLABLE = 'modal-dialog-scrollable';\nvar CLASS_NAME_SCROLLBAR_MEASURER = 'modal-scrollbar-measure';\nvar CLASS_NAME_BACKDROP = 'modal-backdrop';\nvar CLASS_NAME_OPEN = 'modal-open';\nvar modal_CLASS_NAME_FADE = 'fade';\nvar modal_CLASS_NAME_SHOW = 'show';\nvar CLASS_NAME_STATIC = 'modal-static';\nvar modal_EVENT_HIDE = \"hide\".concat(modal_EVENT_KEY);\nvar EVENT_HIDE_PREVENTED = \"hidePrevented\".concat(modal_EVENT_KEY);\nvar modal_EVENT_HIDDEN = \"hidden\".concat(modal_EVENT_KEY);\nvar modal_EVENT_SHOW = \"show\".concat(modal_EVENT_KEY);\nvar modal_EVENT_SHOWN = \"shown\".concat(modal_EVENT_KEY);\nvar EVENT_FOCUSIN = \"focusin\".concat(modal_EVENT_KEY);\nvar EVENT_RESIZE = \"resize\".concat(modal_EVENT_KEY);\nvar EVENT_CLICK_DISMISS = \"click.dismiss\".concat(modal_EVENT_KEY);\nvar EVENT_KEYDOWN_DISMISS = \"keydown.dismiss\".concat(modal_EVENT_KEY);\nvar EVENT_MOUSEUP_DISMISS = \"mouseup.dismiss\".concat(modal_EVENT_KEY);\nvar EVENT_MOUSEDOWN_DISMISS = \"mousedown.dismiss\".concat(modal_EVENT_KEY);\nvar modal_EVENT_CLICK_DATA_API = \"click\".concat(modal_EVENT_KEY).concat(modal_DATA_API_KEY);\nvar SELECTOR_DIALOG = '.modal-dialog';\nvar SELECTOR_MODAL_BODY = '.modal-body';\nvar modal_SELECTOR_DATA_TOGGLE = '[data-toggle=\"modal\"]';\nvar SELECTOR_DATA_DISMISS = '[data-dismiss=\"modal\"]';\nvar SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\nvar SELECTOR_STICKY_CONTENT = '.sticky-top';\nvar modal_Default = {\n  backdrop: true,\n  keyboard: true,\n  focus: true,\n  show: true\n};\nvar modal_DefaultType = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  focus: 'boolean',\n  show: 'boolean'\n};\n\n/**\n * Class definition\n */\nvar Modal = /*#__PURE__*/function () {\n  function Modal(element, config) {\n    modal_classCallCheck(this, Modal);\n    this._config = this._getConfig(config);\n    this._element = element;\n    this._dialog = element.querySelector(SELECTOR_DIALOG);\n    this._backdrop = null;\n    this._isShown = false;\n    this._isBodyOverflowing = false;\n    this._ignoreBackdropClick = false;\n    this._isTransitioning = false;\n    this._scrollbarWidth = 0;\n  }\n\n  // Getters\n  return modal_createClass(Modal, [{\n    key: \"toggle\",\n    value:\n    // Public\n    function toggle(relatedTarget) {\n      return this._isShown ? this.hide() : this.show(relatedTarget);\n    }\n  }, {\n    key: \"show\",\n    value: function show(relatedTarget) {\n      var _this = this;\n      if (this._isShown || this._isTransitioning) {\n        return;\n      }\n      var showEvent = external_jQuery_default().Event(modal_EVENT_SHOW, {\n        relatedTarget: relatedTarget\n      });\n      external_jQuery_default()(this._element).trigger(showEvent);\n      if (showEvent.isDefaultPrevented()) {\n        return;\n      }\n      this._isShown = true;\n      if (external_jQuery_default()(this._element).hasClass(modal_CLASS_NAME_FADE)) {\n        this._isTransitioning = true;\n      }\n      this._checkScrollbar();\n      this._setScrollbar();\n      this._adjustDialog();\n      this._setEscapeEvent();\n      this._setResizeEvent();\n      external_jQuery_default()(this._element).on(EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, function (event) {\n        return _this.hide(event);\n      });\n      external_jQuery_default()(this._dialog).on(EVENT_MOUSEDOWN_DISMISS, function () {\n        external_jQuery_default()(_this._element).one(EVENT_MOUSEUP_DISMISS, function (event) {\n          if (external_jQuery_default()(event.target).is(_this._element)) {\n            _this._ignoreBackdropClick = true;\n          }\n        });\n      });\n      this._showBackdrop(function () {\n        return _this._showElement(relatedTarget);\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(event) {\n      var _this2 = this;\n      if (event) {\n        event.preventDefault();\n      }\n      if (!this._isShown || this._isTransitioning) {\n        return;\n      }\n      var hideEvent = external_jQuery_default().Event(modal_EVENT_HIDE);\n      external_jQuery_default()(this._element).trigger(hideEvent);\n      if (!this._isShown || hideEvent.isDefaultPrevented()) {\n        return;\n      }\n      this._isShown = false;\n      var transition = external_jQuery_default()(this._element).hasClass(modal_CLASS_NAME_FADE);\n      if (transition) {\n        this._isTransitioning = true;\n      }\n      this._setEscapeEvent();\n      this._setResizeEvent();\n      external_jQuery_default()(document).off(EVENT_FOCUSIN);\n      external_jQuery_default()(this._element).removeClass(modal_CLASS_NAME_SHOW);\n      external_jQuery_default()(this._element).off(EVENT_CLICK_DISMISS);\n      external_jQuery_default()(this._dialog).off(EVENT_MOUSEDOWN_DISMISS);\n      if (transition) {\n        var transitionDuration = util.getTransitionDurationFromElement(this._element);\n        external_jQuery_default()(this._element).one(util.TRANSITION_END, function (event) {\n          return _this2._hideModal(event);\n        }).emulateTransitionEnd(transitionDuration);\n      } else {\n        this._hideModal();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      [window, this._element, this._dialog].forEach(function (htmlElement) {\n        return external_jQuery_default()(htmlElement).off(modal_EVENT_KEY);\n      });\n\n      /**\n       * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`\n       * Do not move `document` in `htmlElements` array\n       * It will remove `EVENT_CLICK_DATA_API` event that should remain\n       */\n      external_jQuery_default()(document).off(EVENT_FOCUSIN);\n      external_jQuery_default().removeData(this._element, modal_DATA_KEY);\n      this._config = null;\n      this._element = null;\n      this._dialog = null;\n      this._backdrop = null;\n      this._isShown = null;\n      this._isBodyOverflowing = null;\n      this._ignoreBackdropClick = null;\n      this._isTransitioning = null;\n      this._scrollbarWidth = null;\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate() {\n      this._adjustDialog();\n    }\n\n    // Private\n  }, {\n    key: \"_getConfig\",\n    value: function _getConfig(config) {\n      config = modal_objectSpread(modal_objectSpread({}, modal_Default), config);\n      util.typeCheckConfig(modal_NAME, config, modal_DefaultType);\n      return config;\n    }\n  }, {\n    key: \"_triggerBackdropTransition\",\n    value: function _triggerBackdropTransition() {\n      var _this3 = this;\n      var hideEventPrevented = external_jQuery_default().Event(EVENT_HIDE_PREVENTED);\n      external_jQuery_default()(this._element).trigger(hideEventPrevented);\n      if (hideEventPrevented.isDefaultPrevented()) {\n        return;\n      }\n      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n      if (!isModalOverflowing) {\n        this._element.style.overflowY = 'hidden';\n      }\n      this._element.classList.add(CLASS_NAME_STATIC);\n      var modalTransitionDuration = util.getTransitionDurationFromElement(this._dialog);\n      external_jQuery_default()(this._element).off(util.TRANSITION_END);\n      external_jQuery_default()(this._element).one(util.TRANSITION_END, function () {\n        _this3._element.classList.remove(CLASS_NAME_STATIC);\n        if (!isModalOverflowing) {\n          external_jQuery_default()(_this3._element).one(util.TRANSITION_END, function () {\n            _this3._element.style.overflowY = '';\n          }).emulateTransitionEnd(_this3._element, modalTransitionDuration);\n        }\n      }).emulateTransitionEnd(modalTransitionDuration);\n      this._element.focus();\n    }\n  }, {\n    key: \"_showElement\",\n    value: function _showElement(relatedTarget) {\n      var _this4 = this;\n      var transition = external_jQuery_default()(this._element).hasClass(modal_CLASS_NAME_FADE);\n      var modalBody = this._dialog ? this._dialog.querySelector(SELECTOR_MODAL_BODY) : null;\n      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n        // Don't move modal's DOM position\n        document.body.appendChild(this._element);\n      }\n      this._element.style.display = 'block';\n      this._element.removeAttribute('aria-hidden');\n      this._element.setAttribute('aria-modal', true);\n      this._element.setAttribute('role', 'dialog');\n      if (external_jQuery_default()(this._dialog).hasClass(CLASS_NAME_SCROLLABLE) && modalBody) {\n        modalBody.scrollTop = 0;\n      } else {\n        this._element.scrollTop = 0;\n      }\n      if (transition) {\n        util.reflow(this._element);\n      }\n      external_jQuery_default()(this._element).addClass(modal_CLASS_NAME_SHOW);\n      if (this._config.focus) {\n        this._enforceFocus();\n      }\n      var shownEvent = external_jQuery_default().Event(modal_EVENT_SHOWN, {\n        relatedTarget: relatedTarget\n      });\n      var transitionComplete = function transitionComplete() {\n        if (_this4._config.focus) {\n          _this4._element.focus();\n        }\n        _this4._isTransitioning = false;\n        external_jQuery_default()(_this4._element).trigger(shownEvent);\n      };\n      if (transition) {\n        var transitionDuration = util.getTransitionDurationFromElement(this._dialog);\n        external_jQuery_default()(this._dialog).one(util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);\n      } else {\n        transitionComplete();\n      }\n    }\n  }, {\n    key: \"_enforceFocus\",\n    value: function _enforceFocus() {\n      var _this5 = this;\n      external_jQuery_default()(document).off(EVENT_FOCUSIN) // Guard against infinite focus loop\n      .on(EVENT_FOCUSIN, function (event) {\n        if (document !== event.target && _this5._element !== event.target && external_jQuery_default()(_this5._element).has(event.target).length === 0) {\n          _this5._element.focus();\n        }\n      });\n    }\n  }, {\n    key: \"_setEscapeEvent\",\n    value: function _setEscapeEvent() {\n      var _this6 = this;\n      if (this._isShown) {\n        external_jQuery_default()(this._element).on(EVENT_KEYDOWN_DISMISS, function (event) {\n          if (_this6._config.keyboard && event.which === modal_ESCAPE_KEYCODE) {\n            event.preventDefault();\n            _this6.hide();\n          } else if (!_this6._config.keyboard && event.which === modal_ESCAPE_KEYCODE) {\n            _this6._triggerBackdropTransition();\n          }\n        });\n      } else if (!this._isShown) {\n        external_jQuery_default()(this._element).off(EVENT_KEYDOWN_DISMISS);\n      }\n    }\n  }, {\n    key: \"_setResizeEvent\",\n    value: function _setResizeEvent() {\n      var _this7 = this;\n      if (this._isShown) {\n        external_jQuery_default()(window).on(EVENT_RESIZE, function (event) {\n          return _this7.handleUpdate(event);\n        });\n      } else {\n        external_jQuery_default()(window).off(EVENT_RESIZE);\n      }\n    }\n  }, {\n    key: \"_hideModal\",\n    value: function _hideModal() {\n      var _this8 = this;\n      this._element.style.display = 'none';\n      this._element.setAttribute('aria-hidden', true);\n      this._element.removeAttribute('aria-modal');\n      this._element.removeAttribute('role');\n      this._isTransitioning = false;\n      this._showBackdrop(function () {\n        external_jQuery_default()(document.body).removeClass(CLASS_NAME_OPEN);\n        _this8._resetAdjustments();\n        _this8._resetScrollbar();\n        external_jQuery_default()(_this8._element).trigger(modal_EVENT_HIDDEN);\n      });\n    }\n  }, {\n    key: \"_removeBackdrop\",\n    value: function _removeBackdrop() {\n      if (this._backdrop) {\n        external_jQuery_default()(this._backdrop).remove();\n        this._backdrop = null;\n      }\n    }\n  }, {\n    key: \"_showBackdrop\",\n    value: function _showBackdrop(callback) {\n      var _this9 = this;\n      var animate = external_jQuery_default()(this._element).hasClass(modal_CLASS_NAME_FADE) ? modal_CLASS_NAME_FADE : '';\n      if (this._isShown && this._config.backdrop) {\n        this._backdrop = document.createElement('div');\n        this._backdrop.className = CLASS_NAME_BACKDROP;\n        if (animate) {\n          this._backdrop.classList.add(animate);\n        }\n        external_jQuery_default()(this._backdrop).appendTo(document.body);\n        external_jQuery_default()(this._element).on(EVENT_CLICK_DISMISS, function (event) {\n          if (_this9._ignoreBackdropClick) {\n            _this9._ignoreBackdropClick = false;\n            return;\n          }\n          if (event.target !== event.currentTarget) {\n            return;\n          }\n          if (_this9._config.backdrop === 'static') {\n            _this9._triggerBackdropTransition();\n          } else {\n            _this9.hide();\n          }\n        });\n        if (animate) {\n          util.reflow(this._backdrop);\n        }\n        external_jQuery_default()(this._backdrop).addClass(modal_CLASS_NAME_SHOW);\n        if (!callback) {\n          return;\n        }\n        if (!animate) {\n          callback();\n          return;\n        }\n        var backdropTransitionDuration = util.getTransitionDurationFromElement(this._backdrop);\n        external_jQuery_default()(this._backdrop).one(util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);\n      } else if (!this._isShown && this._backdrop) {\n        external_jQuery_default()(this._backdrop).removeClass(modal_CLASS_NAME_SHOW);\n        var callbackRemove = function callbackRemove() {\n          _this9._removeBackdrop();\n          if (callback) {\n            callback();\n          }\n        };\n        if (external_jQuery_default()(this._element).hasClass(modal_CLASS_NAME_FADE)) {\n          var _backdropTransitionDuration = util.getTransitionDurationFromElement(this._backdrop);\n          external_jQuery_default()(this._backdrop).one(util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);\n        } else {\n          callbackRemove();\n        }\n      } else if (callback) {\n        callback();\n      }\n    }\n\n    // ----------------------------------------------------------------------\n    // the following methods are used to handle overflowing modals\n    // todo (fat): these should probably be refactored out of modal.js\n    // ----------------------------------------------------------------------\n  }, {\n    key: \"_adjustDialog\",\n    value: function _adjustDialog() {\n      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n      if (!this._isBodyOverflowing && isModalOverflowing) {\n        this._element.style.paddingLeft = \"\".concat(this._scrollbarWidth, \"px\");\n      }\n      if (this._isBodyOverflowing && !isModalOverflowing) {\n        this._element.style.paddingRight = \"\".concat(this._scrollbarWidth, \"px\");\n      }\n    }\n  }, {\n    key: \"_resetAdjustments\",\n    value: function _resetAdjustments() {\n      this._element.style.paddingLeft = '';\n      this._element.style.paddingRight = '';\n    }\n  }, {\n    key: \"_checkScrollbar\",\n    value: function _checkScrollbar() {\n      var rect = document.body.getBoundingClientRect();\n      this._isBodyOverflowing = Math.round(rect.left + rect.right) < window.innerWidth;\n      this._scrollbarWidth = this._getScrollbarWidth();\n    }\n  }, {\n    key: \"_setScrollbar\",\n    value: function _setScrollbar() {\n      var _this10 = this;\n      if (this._isBodyOverflowing) {\n        // Note: DOMNode.style.paddingRight returns the actual value or '' if not set\n        //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set\n        var fixedContent = [].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));\n        var stickyContent = [].slice.call(document.querySelectorAll(SELECTOR_STICKY_CONTENT));\n\n        // Adjust fixed content padding\n        external_jQuery_default()(fixedContent).each(function (index, element) {\n          var actualPadding = element.style.paddingRight;\n          var calculatedPadding = external_jQuery_default()(element).css('padding-right');\n          external_jQuery_default()(element).data('padding-right', actualPadding).css('padding-right', \"\".concat(parseFloat(calculatedPadding) + _this10._scrollbarWidth, \"px\"));\n        });\n\n        // Adjust sticky content margin\n        external_jQuery_default()(stickyContent).each(function (index, element) {\n          var actualMargin = element.style.marginRight;\n          var calculatedMargin = external_jQuery_default()(element).css('margin-right');\n          external_jQuery_default()(element).data('margin-right', actualMargin).css('margin-right', \"\".concat(parseFloat(calculatedMargin) - _this10._scrollbarWidth, \"px\"));\n        });\n\n        // Adjust body padding\n        var actualPadding = document.body.style.paddingRight;\n        var calculatedPadding = external_jQuery_default()(document.body).css('padding-right');\n        external_jQuery_default()(document.body).data('padding-right', actualPadding).css('padding-right', \"\".concat(parseFloat(calculatedPadding) + this._scrollbarWidth, \"px\"));\n      }\n      external_jQuery_default()(document.body).addClass(CLASS_NAME_OPEN);\n    }\n  }, {\n    key: \"_resetScrollbar\",\n    value: function _resetScrollbar() {\n      // Restore fixed content padding\n      var fixedContent = [].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));\n      external_jQuery_default()(fixedContent).each(function (index, element) {\n        var padding = external_jQuery_default()(element).data('padding-right');\n        external_jQuery_default()(element).removeData('padding-right');\n        element.style.paddingRight = padding ? padding : '';\n      });\n\n      // Restore sticky content\n      var elements = [].slice.call(document.querySelectorAll(\"\".concat(SELECTOR_STICKY_CONTENT)));\n      external_jQuery_default()(elements).each(function (index, element) {\n        var margin = external_jQuery_default()(element).data('margin-right');\n        if (typeof margin !== 'undefined') {\n          external_jQuery_default()(element).css('margin-right', margin).removeData('margin-right');\n        }\n      });\n\n      // Restore body padding\n      var padding = external_jQuery_default()(document.body).data('padding-right');\n      external_jQuery_default()(document.body).removeData('padding-right');\n      document.body.style.paddingRight = padding ? padding : '';\n    }\n  }, {\n    key: \"_getScrollbarWidth\",\n    value: function _getScrollbarWidth() {\n      // thx d.walsh\n      var scrollDiv = document.createElement('div');\n      scrollDiv.className = CLASS_NAME_SCROLLBAR_MEASURER;\n      document.body.appendChild(scrollDiv);\n      var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n      return scrollbarWidth;\n    }\n\n    // Static\n  }], [{\n    key: \"VERSION\",\n    get: function get() {\n      return modal_VERSION;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return modal_Default;\n    }\n  }, {\n    key: \"_jQueryInterface\",\n    value: function _jQueryInterface(config, relatedTarget) {\n      return this.each(function () {\n        var data = external_jQuery_default()(this).data(modal_DATA_KEY);\n        var _config = modal_objectSpread(modal_objectSpread(modal_objectSpread({}, modal_Default), external_jQuery_default()(this).data()), modal_typeof(config) === 'object' && config ? config : {});\n        if (!data) {\n          data = new Modal(this, _config);\n          external_jQuery_default()(this).data(modal_DATA_KEY, data);\n        }\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n          data[config](relatedTarget);\n        } else if (_config.show) {\n          data.show(relatedTarget);\n        }\n      });\n    }\n  }]);\n}();\n/**\n * Data API implementation\n */\nexternal_jQuery_default()(document).on(modal_EVENT_CLICK_DATA_API, modal_SELECTOR_DATA_TOGGLE, function (event) {\n  var _this11 = this;\n  var target;\n  var selector = util.getSelectorFromElement(this);\n  if (selector) {\n    target = document.querySelector(selector);\n  }\n  var config = external_jQuery_default()(target).data(modal_DATA_KEY) ? 'toggle' : modal_objectSpread(modal_objectSpread({}, external_jQuery_default()(target).data()), external_jQuery_default()(this).data());\n  if (this.tagName === 'A' || this.tagName === 'AREA') {\n    event.preventDefault();\n  }\n  var $target = external_jQuery_default()(target).one(modal_EVENT_SHOW, function (showEvent) {\n    if (showEvent.isDefaultPrevented()) {\n      // Only register focus restorer if modal will actually get shown\n      return;\n    }\n    $target.one(modal_EVENT_HIDDEN, function () {\n      if (external_jQuery_default()(_this11).is(':visible')) {\n        _this11.focus();\n      }\n    });\n  });\n  Modal._jQueryInterface.call(external_jQuery_default()(target), config, this);\n});\n\n/**\n * jQuery\n */\n\n(external_jQuery_default()).fn[modal_NAME] = Modal._jQueryInterface;\n(external_jQuery_default()).fn[modal_NAME].Constructor = Modal;\n(external_jQuery_default()).fn[modal_NAME].noConflict = function () {\n  (external_jQuery_default()).fn[modal_NAME] = modal_JQUERY_NO_CONFLICT;\n  return Modal._jQueryInterface;\n};\n/* harmony default export */ var modal = ((/* unused pure expression or super */ null && (Modal)));\n;// ./node_modules/bootstrap/js/src/tools/sanitizer.js\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): tools/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar uriAttrs = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'];\nvar ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i;\nvar DefaultWhitelist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  div: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n};\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * Shoutout to Angular https://github.com/angular/angular/blob/12.2.x/packages/core/src/sanitization/url_sanitizer.ts\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i;\n\n/**\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n *\n * Shoutout to Angular https://github.com/angular/angular/blob/12.2.x/packages/core/src/sanitization/url_sanitizer.ts\n */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[\\d+/a-z]+=*$/i;\nfunction allowedAttribute(attr, allowedAttributeList) {\n  var attrName = attr.nodeName.toLowerCase();\n  if (allowedAttributeList.indexOf(attrName) !== -1) {\n    if (uriAttrs.indexOf(attrName) !== -1) {\n      return Boolean(SAFE_URL_PATTERN.test(attr.nodeValue) || DATA_URL_PATTERN.test(attr.nodeValue));\n    }\n    return true;\n  }\n  var regExp = allowedAttributeList.filter(function (attrRegex) {\n    return attrRegex instanceof RegExp;\n  });\n\n  // Check if a regular expression validates the attribute.\n  for (var i = 0, len = regExp.length; i < len; i++) {\n    if (regExp[i].test(attrName)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {\n  if (unsafeHtml.length === 0) {\n    return unsafeHtml;\n  }\n  if (sanitizeFn && typeof sanitizeFn === 'function') {\n    return sanitizeFn(unsafeHtml);\n  }\n  var domParser = new window.DOMParser();\n  var createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');\n  var whitelistKeys = Object.keys(whiteList);\n  var elements = [].slice.call(createdDocument.body.querySelectorAll('*'));\n  var _loop = function _loop() {\n    var el = elements[i];\n    var elName = el.nodeName.toLowerCase();\n    if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {\n      el.parentNode.removeChild(el);\n      return 1; // continue\n    }\n    var attributeList = [].slice.call(el.attributes);\n    // eslint-disable-next-line unicorn/prefer-spread\n    var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\n    attributeList.forEach(function (attr) {\n      if (!allowedAttribute(attr, whitelistedAttributes)) {\n        el.removeAttribute(attr.nodeName);\n      }\n    });\n  };\n  for (var i = 0, len = elements.length; i < len; i++) {\n    if (_loop()) continue;\n  }\n  return createdDocument.body.innerHTML;\n}\n;// ./node_modules/bootstrap/js/src/tooltip.js\nfunction tooltip_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction tooltip_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? tooltip_ownKeys(Object(t), !0).forEach(function (r) { tooltip_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : tooltip_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction tooltip_defineProperty(e, r, t) { return (r = tooltip_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction tooltip_typeof(o) { \"@babel/helpers - typeof\"; return tooltip_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, tooltip_typeof(o); }\nfunction tooltip_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction tooltip_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, tooltip_toPropertyKey(o.key), o); } }\nfunction tooltip_createClass(e, r, t) { return r && tooltip_defineProperties(e.prototype, r), t && tooltip_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction tooltip_toPropertyKey(t) { var i = tooltip_toPrimitive(t, \"string\"); return \"symbol\" == tooltip_typeof(i) ? i : i + \"\"; }\nfunction tooltip_toPrimitive(t, r) { if (\"object\" != tooltip_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != tooltip_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n\n\n/**\n * Constants\n */\n\nvar tooltip_NAME = 'tooltip';\nvar tooltip_VERSION = '4.6.2';\nvar tooltip_DATA_KEY = 'bs.tooltip';\nvar tooltip_EVENT_KEY = \".\".concat(tooltip_DATA_KEY);\nvar tooltip_JQUERY_NO_CONFLICT = (external_jQuery_default()).fn[tooltip_NAME];\nvar CLASS_PREFIX = 'bs-tooltip';\nvar BSCLS_PREFIX_REGEX = new RegExp(\"(^|\\\\s)\".concat(CLASS_PREFIX, \"\\\\S+\"), 'g');\nvar DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];\nvar tooltip_CLASS_NAME_FADE = 'fade';\nvar tooltip_CLASS_NAME_SHOW = 'show';\nvar HOVER_STATE_SHOW = 'show';\nvar HOVER_STATE_OUT = 'out';\nvar SELECTOR_TOOLTIP_INNER = '.tooltip-inner';\nvar SELECTOR_ARROW = '.arrow';\nvar TRIGGER_HOVER = 'hover';\nvar TRIGGER_FOCUS = 'focus';\nvar TRIGGER_CLICK = 'click';\nvar TRIGGER_MANUAL = 'manual';\nvar AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: 'right',\n  BOTTOM: 'bottom',\n  LEFT: 'left'\n};\nvar tooltip_Default = {\n  animation: true,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n  trigger: 'hover focus',\n  title: '',\n  delay: 0,\n  html: false,\n  selector: false,\n  placement: 'top',\n  offset: 0,\n  container: false,\n  fallbackPlacement: 'flip',\n  boundary: 'scrollParent',\n  customClass: '',\n  sanitize: true,\n  sanitizeFn: null,\n  whiteList: DefaultWhitelist,\n  popperConfig: null\n};\nvar tooltip_DefaultType = {\n  animation: 'boolean',\n  template: 'string',\n  title: '(string|element|function)',\n  trigger: 'string',\n  delay: '(number|object)',\n  html: 'boolean',\n  selector: '(string|boolean)',\n  placement: '(string|function)',\n  offset: '(number|string|function)',\n  container: '(string|element|boolean)',\n  fallbackPlacement: '(string|array)',\n  boundary: '(string|element)',\n  customClass: '(string|function)',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  whiteList: 'object',\n  popperConfig: '(null|object)'\n};\nvar Event = {\n  HIDE: \"hide\".concat(tooltip_EVENT_KEY),\n  HIDDEN: \"hidden\".concat(tooltip_EVENT_KEY),\n  SHOW: \"show\".concat(tooltip_EVENT_KEY),\n  SHOWN: \"shown\".concat(tooltip_EVENT_KEY),\n  INSERTED: \"inserted\".concat(tooltip_EVENT_KEY),\n  CLICK: \"click\".concat(tooltip_EVENT_KEY),\n  FOCUSIN: \"focusin\".concat(tooltip_EVENT_KEY),\n  FOCUSOUT: \"focusout\".concat(tooltip_EVENT_KEY),\n  MOUSEENTER: \"mouseenter\".concat(tooltip_EVENT_KEY),\n  MOUSELEAVE: \"mouseleave\".concat(tooltip_EVENT_KEY)\n};\n\n/**\n * Class definition\n */\nvar Tooltip = /*#__PURE__*/function () {\n  function Tooltip(element, config) {\n    tooltip_classCallCheck(this, Tooltip);\n    if (typeof popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s tooltips require Popper (https://popper.js.org)');\n    }\n\n    // Private\n    this._isEnabled = true;\n    this._timeout = 0;\n    this._hoverState = '';\n    this._activeTrigger = {};\n    this._popper = null;\n\n    // Protected\n    this.element = element;\n    this.config = this._getConfig(config);\n    this.tip = null;\n    this._setListeners();\n  }\n\n  // Getters\n  return tooltip_createClass(Tooltip, [{\n    key: \"enable\",\n    value:\n    // Public\n    function enable() {\n      this._isEnabled = true;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this._isEnabled = false;\n    }\n  }, {\n    key: \"toggleEnabled\",\n    value: function toggleEnabled() {\n      this._isEnabled = !this._isEnabled;\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      if (!this._isEnabled) {\n        return;\n      }\n      if (event) {\n        var dataKey = this.constructor.DATA_KEY;\n        var context = external_jQuery_default()(event.currentTarget).data(dataKey);\n        if (!context) {\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n          external_jQuery_default()(event.currentTarget).data(dataKey, context);\n        }\n        context._activeTrigger.click = !context._activeTrigger.click;\n        if (context._isWithActiveTrigger()) {\n          context._enter(null, context);\n        } else {\n          context._leave(null, context);\n        }\n      } else {\n        if (external_jQuery_default()(this.getTipElement()).hasClass(tooltip_CLASS_NAME_SHOW)) {\n          this._leave(null, this);\n          return;\n        }\n        this._enter(null, this);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      clearTimeout(this._timeout);\n      external_jQuery_default().removeData(this.element, this.constructor.DATA_KEY);\n      external_jQuery_default()(this.element).off(this.constructor.EVENT_KEY);\n      external_jQuery_default()(this.element).closest('.modal').off('hide.bs.modal', this._hideModalHandler);\n      if (this.tip) {\n        external_jQuery_default()(this.tip).remove();\n      }\n      this._isEnabled = null;\n      this._timeout = null;\n      this._hoverState = null;\n      this._activeTrigger = null;\n      if (this._popper) {\n        this._popper.destroy();\n      }\n      this._popper = null;\n      this.element = null;\n      this.config = null;\n      this.tip = null;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this = this;\n      if (external_jQuery_default()(this.element).css('display') === 'none') {\n        throw new Error('Please use show on visible elements');\n      }\n      var showEvent = external_jQuery_default().Event(this.constructor.Event.SHOW);\n      if (this.isWithContent() && this._isEnabled) {\n        external_jQuery_default()(this.element).trigger(showEvent);\n        var shadowRoot = util.findShadowRoot(this.element);\n        var isInTheDom = external_jQuery_default().contains(shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement, this.element);\n        if (showEvent.isDefaultPrevented() || !isInTheDom) {\n          return;\n        }\n        var tip = this.getTipElement();\n        var tipId = util.getUID(this.constructor.NAME);\n        tip.setAttribute('id', tipId);\n        this.element.setAttribute('aria-describedby', tipId);\n        this.setContent();\n        if (this.config.animation) {\n          external_jQuery_default()(tip).addClass(tooltip_CLASS_NAME_FADE);\n        }\n        var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n        var attachment = this._getAttachment(placement);\n        this.addAttachmentClass(attachment);\n        var container = this._getContainer();\n        external_jQuery_default()(tip).data(this.constructor.DATA_KEY, this);\n        if (!external_jQuery_default().contains(this.element.ownerDocument.documentElement, this.tip)) {\n          external_jQuery_default()(tip).appendTo(container);\n        }\n        external_jQuery_default()(this.element).trigger(this.constructor.Event.INSERTED);\n        this._popper = new popper(this.element, tip, this._getPopperConfig(attachment));\n        external_jQuery_default()(tip).addClass(tooltip_CLASS_NAME_SHOW);\n        external_jQuery_default()(tip).addClass(this.config.customClass);\n\n        // If this is a touch-enabled device we add extra\n        // empty mouseover listeners to the body's immediate children;\n        // only needed because of broken event delegation on iOS\n        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n        if ('ontouchstart' in document.documentElement) {\n          external_jQuery_default()(document.body).children().on('mouseover', null, (external_jQuery_default()).noop);\n        }\n        var complete = function complete() {\n          if (_this.config.animation) {\n            _this._fixTransition();\n          }\n          var prevHoverState = _this._hoverState;\n          _this._hoverState = null;\n          external_jQuery_default()(_this.element).trigger(_this.constructor.Event.SHOWN);\n          if (prevHoverState === HOVER_STATE_OUT) {\n            _this._leave(null, _this);\n          }\n        };\n        if (external_jQuery_default()(this.tip).hasClass(tooltip_CLASS_NAME_FADE)) {\n          var transitionDuration = util.getTransitionDurationFromElement(this.tip);\n          external_jQuery_default()(this.tip).one(util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n        } else {\n          complete();\n        }\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(callback) {\n      var _this2 = this;\n      var tip = this.getTipElement();\n      var hideEvent = external_jQuery_default().Event(this.constructor.Event.HIDE);\n      var complete = function complete() {\n        if (_this2._hoverState !== HOVER_STATE_SHOW && tip.parentNode) {\n          tip.parentNode.removeChild(tip);\n        }\n        _this2._cleanTipClass();\n        _this2.element.removeAttribute('aria-describedby');\n        external_jQuery_default()(_this2.element).trigger(_this2.constructor.Event.HIDDEN);\n        if (_this2._popper !== null) {\n          _this2._popper.destroy();\n        }\n        if (callback) {\n          callback();\n        }\n      };\n      external_jQuery_default()(this.element).trigger(hideEvent);\n      if (hideEvent.isDefaultPrevented()) {\n        return;\n      }\n      external_jQuery_default()(tip).removeClass(tooltip_CLASS_NAME_SHOW);\n\n      // If this is a touch-enabled device we remove the extra\n      // empty mouseover listeners we added for iOS support\n      if ('ontouchstart' in document.documentElement) {\n        external_jQuery_default()(document.body).children().off('mouseover', null, (external_jQuery_default()).noop);\n      }\n      this._activeTrigger[TRIGGER_CLICK] = false;\n      this._activeTrigger[TRIGGER_FOCUS] = false;\n      this._activeTrigger[TRIGGER_HOVER] = false;\n      if (external_jQuery_default()(this.tip).hasClass(tooltip_CLASS_NAME_FADE)) {\n        var transitionDuration = util.getTransitionDurationFromElement(tip);\n        external_jQuery_default()(tip).one(util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      } else {\n        complete();\n      }\n      this._hoverState = '';\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this._popper !== null) {\n        this._popper.scheduleUpdate();\n      }\n    }\n\n    // Protected\n  }, {\n    key: \"isWithContent\",\n    value: function isWithContent() {\n      return Boolean(this.getTitle());\n    }\n  }, {\n    key: \"addAttachmentClass\",\n    value: function addAttachmentClass(attachment) {\n      external_jQuery_default()(this.getTipElement()).addClass(\"\".concat(CLASS_PREFIX, \"-\").concat(attachment));\n    }\n  }, {\n    key: \"getTipElement\",\n    value: function getTipElement() {\n      this.tip = this.tip || external_jQuery_default()(this.config.template)[0];\n      return this.tip;\n    }\n  }, {\n    key: \"setContent\",\n    value: function setContent() {\n      var tip = this.getTipElement();\n      this.setElementContent(external_jQuery_default()(tip.querySelectorAll(SELECTOR_TOOLTIP_INNER)), this.getTitle());\n      external_jQuery_default()(tip).removeClass(\"\".concat(tooltip_CLASS_NAME_FADE, \" \").concat(tooltip_CLASS_NAME_SHOW));\n    }\n  }, {\n    key: \"setElementContent\",\n    value: function setElementContent($element, content) {\n      if (tooltip_typeof(content) === 'object' && (content.nodeType || content.jquery)) {\n        // Content is a DOM node or a jQuery\n        if (this.config.html) {\n          if (!external_jQuery_default()(content).parent().is($element)) {\n            $element.empty().append(content);\n          }\n        } else {\n          $element.text(external_jQuery_default()(content).text());\n        }\n        return;\n      }\n      if (this.config.html) {\n        if (this.config.sanitize) {\n          content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn);\n        }\n        $element.html(content);\n      } else {\n        $element.text(content);\n      }\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      var title = this.element.getAttribute('data-original-title');\n      if (!title) {\n        title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n      }\n      return title;\n    }\n\n    // Private\n  }, {\n    key: \"_getPopperConfig\",\n    value: function _getPopperConfig(attachment) {\n      var _this3 = this;\n      var defaultBsConfig = {\n        placement: attachment,\n        modifiers: {\n          offset: this._getOffset(),\n          flip: {\n            behavior: this.config.fallbackPlacement\n          },\n          arrow: {\n            element: SELECTOR_ARROW\n          },\n          preventOverflow: {\n            boundariesElement: this.config.boundary\n          }\n        },\n        onCreate: function onCreate(data) {\n          if (data.originalPlacement !== data.placement) {\n            _this3._handlePopperPlacementChange(data);\n          }\n        },\n        onUpdate: function onUpdate(data) {\n          return _this3._handlePopperPlacementChange(data);\n        }\n      };\n      return tooltip_objectSpread(tooltip_objectSpread({}, defaultBsConfig), this.config.popperConfig);\n    }\n  }, {\n    key: \"_getOffset\",\n    value: function _getOffset() {\n      var _this4 = this;\n      var offset = {};\n      if (typeof this.config.offset === 'function') {\n        offset.fn = function (data) {\n          data.offsets = tooltip_objectSpread(tooltip_objectSpread({}, data.offsets), _this4.config.offset(data.offsets, _this4.element));\n          return data;\n        };\n      } else {\n        offset.offset = this.config.offset;\n      }\n      return offset;\n    }\n  }, {\n    key: \"_getContainer\",\n    value: function _getContainer() {\n      if (this.config.container === false) {\n        return document.body;\n      }\n      if (util.isElement(this.config.container)) {\n        return external_jQuery_default()(this.config.container);\n      }\n      return external_jQuery_default()(document).find(this.config.container);\n    }\n  }, {\n    key: \"_getAttachment\",\n    value: function _getAttachment(placement) {\n      return AttachmentMap[placement.toUpperCase()];\n    }\n  }, {\n    key: \"_setListeners\",\n    value: function _setListeners() {\n      var _this5 = this;\n      var triggers = this.config.trigger.split(' ');\n      triggers.forEach(function (trigger) {\n        if (trigger === 'click') {\n          external_jQuery_default()(_this5.element).on(_this5.constructor.Event.CLICK, _this5.config.selector, function (event) {\n            return _this5.toggle(event);\n          });\n        } else if (trigger !== TRIGGER_MANUAL) {\n          var eventIn = trigger === TRIGGER_HOVER ? _this5.constructor.Event.MOUSEENTER : _this5.constructor.Event.FOCUSIN;\n          var eventOut = trigger === TRIGGER_HOVER ? _this5.constructor.Event.MOUSELEAVE : _this5.constructor.Event.FOCUSOUT;\n          external_jQuery_default()(_this5.element).on(eventIn, _this5.config.selector, function (event) {\n            return _this5._enter(event);\n          }).on(eventOut, _this5.config.selector, function (event) {\n            return _this5._leave(event);\n          });\n        }\n      });\n      this._hideModalHandler = function () {\n        if (_this5.element) {\n          _this5.hide();\n        }\n      };\n      external_jQuery_default()(this.element).closest('.modal').on('hide.bs.modal', this._hideModalHandler);\n      if (this.config.selector) {\n        this.config = tooltip_objectSpread(tooltip_objectSpread({}, this.config), {}, {\n          trigger: 'manual',\n          selector: ''\n        });\n      } else {\n        this._fixTitle();\n      }\n    }\n  }, {\n    key: \"_fixTitle\",\n    value: function _fixTitle() {\n      var titleType = tooltip_typeof(this.element.getAttribute('data-original-title'));\n      if (this.element.getAttribute('title') || titleType !== 'string') {\n        this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n        this.element.setAttribute('title', '');\n      }\n    }\n  }, {\n    key: \"_enter\",\n    value: function _enter(event, context) {\n      var dataKey = this.constructor.DATA_KEY;\n      context = context || external_jQuery_default()(event.currentTarget).data(dataKey);\n      if (!context) {\n        context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n        external_jQuery_default()(event.currentTarget).data(dataKey, context);\n      }\n      if (event) {\n        context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;\n      }\n      if (external_jQuery_default()(context.getTipElement()).hasClass(tooltip_CLASS_NAME_SHOW) || context._hoverState === HOVER_STATE_SHOW) {\n        context._hoverState = HOVER_STATE_SHOW;\n        return;\n      }\n      clearTimeout(context._timeout);\n      context._hoverState = HOVER_STATE_SHOW;\n      if (!context.config.delay || !context.config.delay.show) {\n        context.show();\n        return;\n      }\n      context._timeout = setTimeout(function () {\n        if (context._hoverState === HOVER_STATE_SHOW) {\n          context.show();\n        }\n      }, context.config.delay.show);\n    }\n  }, {\n    key: \"_leave\",\n    value: function _leave(event, context) {\n      var dataKey = this.constructor.DATA_KEY;\n      context = context || external_jQuery_default()(event.currentTarget).data(dataKey);\n      if (!context) {\n        context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n        external_jQuery_default()(event.currentTarget).data(dataKey, context);\n      }\n      if (event) {\n        context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = false;\n      }\n      if (context._isWithActiveTrigger()) {\n        return;\n      }\n      clearTimeout(context._timeout);\n      context._hoverState = HOVER_STATE_OUT;\n      if (!context.config.delay || !context.config.delay.hide) {\n        context.hide();\n        return;\n      }\n      context._timeout = setTimeout(function () {\n        if (context._hoverState === HOVER_STATE_OUT) {\n          context.hide();\n        }\n      }, context.config.delay.hide);\n    }\n  }, {\n    key: \"_isWithActiveTrigger\",\n    value: function _isWithActiveTrigger() {\n      for (var trigger in this._activeTrigger) {\n        if (this._activeTrigger[trigger]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"_getConfig\",\n    value: function _getConfig(config) {\n      var dataAttributes = external_jQuery_default()(this.element).data();\n      Object.keys(dataAttributes).forEach(function (dataAttr) {\n        if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {\n          delete dataAttributes[dataAttr];\n        }\n      });\n      config = tooltip_objectSpread(tooltip_objectSpread(tooltip_objectSpread({}, this.constructor.Default), dataAttributes), tooltip_typeof(config) === 'object' && config ? config : {});\n      if (typeof config.delay === 'number') {\n        config.delay = {\n          show: config.delay,\n          hide: config.delay\n        };\n      }\n      if (typeof config.title === 'number') {\n        config.title = config.title.toString();\n      }\n      if (typeof config.content === 'number') {\n        config.content = config.content.toString();\n      }\n      util.typeCheckConfig(tooltip_NAME, config, this.constructor.DefaultType);\n      if (config.sanitize) {\n        config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn);\n      }\n      return config;\n    }\n  }, {\n    key: \"_getDelegateConfig\",\n    value: function _getDelegateConfig() {\n      var config = {};\n      if (this.config) {\n        for (var key in this.config) {\n          if (this.constructor.Default[key] !== this.config[key]) {\n            config[key] = this.config[key];\n          }\n        }\n      }\n      return config;\n    }\n  }, {\n    key: \"_cleanTipClass\",\n    value: function _cleanTipClass() {\n      var $tip = external_jQuery_default()(this.getTipElement());\n      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);\n      if (tabClass !== null && tabClass.length) {\n        $tip.removeClass(tabClass.join(''));\n      }\n    }\n  }, {\n    key: \"_handlePopperPlacementChange\",\n    value: function _handlePopperPlacementChange(popperData) {\n      this.tip = popperData.instance.popper;\n      this._cleanTipClass();\n      this.addAttachmentClass(this._getAttachment(popperData.placement));\n    }\n  }, {\n    key: \"_fixTransition\",\n    value: function _fixTransition() {\n      var tip = this.getTipElement();\n      var initConfigAnimation = this.config.animation;\n      if (tip.getAttribute('x-placement') !== null) {\n        return;\n      }\n      external_jQuery_default()(tip).removeClass(tooltip_CLASS_NAME_FADE);\n      this.config.animation = false;\n      this.hide();\n      this.show();\n      this.config.animation = initConfigAnimation;\n    }\n\n    // Static\n  }], [{\n    key: \"VERSION\",\n    get: function get() {\n      return tooltip_VERSION;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return tooltip_Default;\n    }\n  }, {\n    key: \"NAME\",\n    get: function get() {\n      return tooltip_NAME;\n    }\n  }, {\n    key: \"DATA_KEY\",\n    get: function get() {\n      return tooltip_DATA_KEY;\n    }\n  }, {\n    key: \"Event\",\n    get: function get() {\n      return Event;\n    }\n  }, {\n    key: \"EVENT_KEY\",\n    get: function get() {\n      return tooltip_EVENT_KEY;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return tooltip_DefaultType;\n    }\n  }, {\n    key: \"_jQueryInterface\",\n    value: function _jQueryInterface(config) {\n      return this.each(function () {\n        var $element = external_jQuery_default()(this);\n        var data = $element.data(tooltip_DATA_KEY);\n        var _config = tooltip_typeof(config) === 'object' && config;\n        if (!data && /dispose|hide/.test(config)) {\n          return;\n        }\n        if (!data) {\n          data = new Tooltip(this, _config);\n          $element.data(tooltip_DATA_KEY, data);\n        }\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n          data[config]();\n        }\n      });\n    }\n  }]);\n}();\n/**\n * jQuery\n */\n(external_jQuery_default()).fn[tooltip_NAME] = Tooltip._jQueryInterface;\n(external_jQuery_default()).fn[tooltip_NAME].Constructor = Tooltip;\n(external_jQuery_default()).fn[tooltip_NAME].noConflict = function () {\n  (external_jQuery_default()).fn[tooltip_NAME] = tooltip_JQUERY_NO_CONFLICT;\n  return Tooltip._jQueryInterface;\n};\n/* harmony default export */ var tooltip = (Tooltip);\n;// ./node_modules/bootstrap/js/src/popover.js\nfunction popover_typeof(o) { \"@babel/helpers - typeof\"; return popover_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, popover_typeof(o); }\nfunction popover_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction popover_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, popover_toPropertyKey(o.key), o); } }\nfunction popover_createClass(e, r, t) { return r && popover_defineProperties(e.prototype, r), t && popover_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == popover_typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction popover_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction popover_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? popover_ownKeys(Object(t), !0).forEach(function (r) { popover_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : popover_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction popover_defineProperty(e, r, t) { return (r = popover_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction popover_toPropertyKey(t) { var i = popover_toPrimitive(t, \"string\"); return \"symbol\" == popover_typeof(i) ? i : i + \"\"; }\nfunction popover_toPrimitive(t, r) { if (\"object\" != popover_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != popover_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n/**\n * Constants\n */\n\nvar popover_NAME = 'popover';\nvar popover_VERSION = '4.6.2';\nvar popover_DATA_KEY = 'bs.popover';\nvar popover_EVENT_KEY = \".\".concat(popover_DATA_KEY);\nvar popover_JQUERY_NO_CONFLICT = (external_jQuery_default()).fn[popover_NAME];\nvar popover_CLASS_PREFIX = 'bs-popover';\nvar popover_BSCLS_PREFIX_REGEX = new RegExp(\"(^|\\\\s)\".concat(popover_CLASS_PREFIX, \"\\\\S+\"), 'g');\nvar popover_CLASS_NAME_FADE = 'fade';\nvar popover_CLASS_NAME_SHOW = 'show';\nvar SELECTOR_TITLE = '.popover-header';\nvar SELECTOR_CONTENT = '.popover-body';\nvar popover_Default = popover_objectSpread(popover_objectSpread({}, tooltip.Default), {}, {\n  placement: 'right',\n  trigger: 'click',\n  content: '',\n  template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div></div>'\n});\nvar popover_DefaultType = popover_objectSpread(popover_objectSpread({}, tooltip.DefaultType), {}, {\n  content: '(string|element|function)'\n});\nvar popover_Event = {\n  HIDE: \"hide\".concat(popover_EVENT_KEY),\n  HIDDEN: \"hidden\".concat(popover_EVENT_KEY),\n  SHOW: \"show\".concat(popover_EVENT_KEY),\n  SHOWN: \"shown\".concat(popover_EVENT_KEY),\n  INSERTED: \"inserted\".concat(popover_EVENT_KEY),\n  CLICK: \"click\".concat(popover_EVENT_KEY),\n  FOCUSIN: \"focusin\".concat(popover_EVENT_KEY),\n  FOCUSOUT: \"focusout\".concat(popover_EVENT_KEY),\n  MOUSEENTER: \"mouseenter\".concat(popover_EVENT_KEY),\n  MOUSELEAVE: \"mouseleave\".concat(popover_EVENT_KEY)\n};\n\n/**\n * Class definition\n */\nvar Popover = /*#__PURE__*/function (_Tooltip) {\n  function Popover() {\n    popover_classCallCheck(this, Popover);\n    return _callSuper(this, Popover, arguments);\n  }\n  _inherits(Popover, _Tooltip);\n  return popover_createClass(Popover, [{\n    key: \"isWithContent\",\n    value:\n    // Overrides\n    function isWithContent() {\n      return this.getTitle() || this._getContent();\n    }\n  }, {\n    key: \"addAttachmentClass\",\n    value: function addAttachmentClass(attachment) {\n      external_jQuery_default()(this.getTipElement()).addClass(\"\".concat(popover_CLASS_PREFIX, \"-\").concat(attachment));\n    }\n  }, {\n    key: \"getTipElement\",\n    value: function getTipElement() {\n      this.tip = this.tip || external_jQuery_default()(this.config.template)[0];\n      return this.tip;\n    }\n  }, {\n    key: \"setContent\",\n    value: function setContent() {\n      var $tip = external_jQuery_default()(this.getTipElement());\n\n      // We use append for html objects to maintain js events\n      this.setElementContent($tip.find(SELECTOR_TITLE), this.getTitle());\n      var content = this._getContent();\n      if (typeof content === 'function') {\n        content = content.call(this.element);\n      }\n      this.setElementContent($tip.find(SELECTOR_CONTENT), content);\n      $tip.removeClass(\"\".concat(popover_CLASS_NAME_FADE, \" \").concat(popover_CLASS_NAME_SHOW));\n    }\n\n    // Private\n  }, {\n    key: \"_getContent\",\n    value: function _getContent() {\n      return this.element.getAttribute('data-content') || this.config.content;\n    }\n  }, {\n    key: \"_cleanTipClass\",\n    value: function _cleanTipClass() {\n      var $tip = external_jQuery_default()(this.getTipElement());\n      var tabClass = $tip.attr('class').match(popover_BSCLS_PREFIX_REGEX);\n      if (tabClass !== null && tabClass.length > 0) {\n        $tip.removeClass(tabClass.join(''));\n      }\n    }\n\n    // Static\n  }], [{\n    key: \"VERSION\",\n    get:\n    // Getters\n    function get() {\n      return popover_VERSION;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return popover_Default;\n    }\n  }, {\n    key: \"NAME\",\n    get: function get() {\n      return popover_NAME;\n    }\n  }, {\n    key: \"DATA_KEY\",\n    get: function get() {\n      return popover_DATA_KEY;\n    }\n  }, {\n    key: \"Event\",\n    get: function get() {\n      return popover_Event;\n    }\n  }, {\n    key: \"EVENT_KEY\",\n    get: function get() {\n      return popover_EVENT_KEY;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return popover_DefaultType;\n    }\n  }, {\n    key: \"_jQueryInterface\",\n    value: function _jQueryInterface(config) {\n      return this.each(function () {\n        var data = external_jQuery_default()(this).data(popover_DATA_KEY);\n        var _config = popover_typeof(config) === 'object' ? config : null;\n        if (!data && /dispose|hide/.test(config)) {\n          return;\n        }\n        if (!data) {\n          data = new Popover(this, _config);\n          external_jQuery_default()(this).data(popover_DATA_KEY, data);\n        }\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n          data[config]();\n        }\n      });\n    }\n  }]);\n}(tooltip);\n/**\n * jQuery\n */\n(external_jQuery_default()).fn[popover_NAME] = Popover._jQueryInterface;\n(external_jQuery_default()).fn[popover_NAME].Constructor = Popover;\n(external_jQuery_default()).fn[popover_NAME].noConflict = function () {\n  (external_jQuery_default()).fn[popover_NAME] = popover_JQUERY_NO_CONFLICT;\n  return Popover._jQueryInterface;\n};\n/* harmony default export */ var popover = ((/* unused pure expression or super */ null && (Popover)));\n;// ./node_modules/bootstrap/js/src/tab.js\nfunction tab_typeof(o) { \"@babel/helpers - typeof\"; return tab_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, tab_typeof(o); }\nfunction tab_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction tab_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, tab_toPropertyKey(o.key), o); } }\nfunction tab_createClass(e, r, t) { return r && tab_defineProperties(e.prototype, r), t && tab_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction tab_toPropertyKey(t) { var i = tab_toPrimitive(t, \"string\"); return \"symbol\" == tab_typeof(i) ? i : i + \"\"; }\nfunction tab_toPrimitive(t, r) { if (\"object\" != tab_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != tab_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): tab.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n/**\n * Constants\n */\n\nvar tab_NAME = 'tab';\nvar tab_VERSION = '4.6.2';\nvar tab_DATA_KEY = 'bs.tab';\nvar tab_EVENT_KEY = \".\".concat(tab_DATA_KEY);\nvar tab_DATA_API_KEY = '.data-api';\nvar tab_JQUERY_NO_CONFLICT = (external_jQuery_default()).fn[tab_NAME];\nvar CLASS_NAME_DROPDOWN_MENU = 'dropdown-menu';\nvar tab_CLASS_NAME_ACTIVE = 'active';\nvar tab_CLASS_NAME_DISABLED = 'disabled';\nvar tab_CLASS_NAME_FADE = 'fade';\nvar tab_CLASS_NAME_SHOW = 'show';\nvar tab_EVENT_HIDE = \"hide\".concat(tab_EVENT_KEY);\nvar tab_EVENT_HIDDEN = \"hidden\".concat(tab_EVENT_KEY);\nvar tab_EVENT_SHOW = \"show\".concat(tab_EVENT_KEY);\nvar tab_EVENT_SHOWN = \"shown\".concat(tab_EVENT_KEY);\nvar tab_EVENT_CLICK_DATA_API = \"click\".concat(tab_EVENT_KEY).concat(tab_DATA_API_KEY);\nvar SELECTOR_DROPDOWN = '.dropdown';\nvar SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\nvar tab_SELECTOR_ACTIVE = '.active';\nvar SELECTOR_ACTIVE_UL = '> li > .active';\nvar tab_SELECTOR_DATA_TOGGLE = '[data-toggle=\"tab\"], [data-toggle=\"pill\"], [data-toggle=\"list\"]';\nvar SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\nvar SELECTOR_DROPDOWN_ACTIVE_CHILD = '> .dropdown-menu .active';\n\n/**\n * Class definition\n */\nvar Tab = /*#__PURE__*/function () {\n  function Tab(element) {\n    tab_classCallCheck(this, Tab);\n    this._element = element;\n  }\n\n  // Getters\n  return tab_createClass(Tab, [{\n    key: \"show\",\n    value:\n    // Public\n    function show() {\n      var _this = this;\n      if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && external_jQuery_default()(this._element).hasClass(tab_CLASS_NAME_ACTIVE) || external_jQuery_default()(this._element).hasClass(tab_CLASS_NAME_DISABLED) || this._element.hasAttribute('disabled')) {\n        return;\n      }\n      var target;\n      var previous;\n      var listElement = external_jQuery_default()(this._element).closest(SELECTOR_NAV_LIST_GROUP)[0];\n      var selector = util.getSelectorFromElement(this._element);\n      if (listElement) {\n        var itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? SELECTOR_ACTIVE_UL : tab_SELECTOR_ACTIVE;\n        previous = external_jQuery_default().makeArray(external_jQuery_default()(listElement).find(itemSelector));\n        previous = previous[previous.length - 1];\n      }\n      var hideEvent = external_jQuery_default().Event(tab_EVENT_HIDE, {\n        relatedTarget: this._element\n      });\n      var showEvent = external_jQuery_default().Event(tab_EVENT_SHOW, {\n        relatedTarget: previous\n      });\n      if (previous) {\n        external_jQuery_default()(previous).trigger(hideEvent);\n      }\n      external_jQuery_default()(this._element).trigger(showEvent);\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {\n        return;\n      }\n      if (selector) {\n        target = document.querySelector(selector);\n      }\n      this._activate(this._element, listElement);\n      var complete = function complete() {\n        var hiddenEvent = external_jQuery_default().Event(tab_EVENT_HIDDEN, {\n          relatedTarget: _this._element\n        });\n        var shownEvent = external_jQuery_default().Event(tab_EVENT_SHOWN, {\n          relatedTarget: previous\n        });\n        external_jQuery_default()(previous).trigger(hiddenEvent);\n        external_jQuery_default()(_this._element).trigger(shownEvent);\n      };\n      if (target) {\n        this._activate(target, target.parentNode, complete);\n      } else {\n        complete();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      external_jQuery_default().removeData(this._element, tab_DATA_KEY);\n      this._element = null;\n    }\n\n    // Private\n  }, {\n    key: \"_activate\",\n    value: function _activate(element, container, callback) {\n      var _this2 = this;\n      var activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ? external_jQuery_default()(container).find(SELECTOR_ACTIVE_UL) : external_jQuery_default()(container).children(tab_SELECTOR_ACTIVE);\n      var active = activeElements[0];\n      var isTransitioning = callback && active && external_jQuery_default()(active).hasClass(tab_CLASS_NAME_FADE);\n      var complete = function complete() {\n        return _this2._transitionComplete(element, active, callback);\n      };\n      if (active && isTransitioning) {\n        var transitionDuration = util.getTransitionDurationFromElement(active);\n        external_jQuery_default()(active).removeClass(tab_CLASS_NAME_SHOW).one(util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      } else {\n        complete();\n      }\n    }\n  }, {\n    key: \"_transitionComplete\",\n    value: function _transitionComplete(element, active, callback) {\n      if (active) {\n        external_jQuery_default()(active).removeClass(tab_CLASS_NAME_ACTIVE);\n        var dropdownChild = external_jQuery_default()(active.parentNode).find(SELECTOR_DROPDOWN_ACTIVE_CHILD)[0];\n        if (dropdownChild) {\n          external_jQuery_default()(dropdownChild).removeClass(tab_CLASS_NAME_ACTIVE);\n        }\n        if (active.getAttribute('role') === 'tab') {\n          active.setAttribute('aria-selected', false);\n        }\n      }\n      external_jQuery_default()(element).addClass(tab_CLASS_NAME_ACTIVE);\n      if (element.getAttribute('role') === 'tab') {\n        element.setAttribute('aria-selected', true);\n      }\n      util.reflow(element);\n      if (element.classList.contains(tab_CLASS_NAME_FADE)) {\n        element.classList.add(tab_CLASS_NAME_SHOW);\n      }\n      var parent = element.parentNode;\n      if (parent && parent.nodeName === 'LI') {\n        parent = parent.parentNode;\n      }\n      if (parent && external_jQuery_default()(parent).hasClass(CLASS_NAME_DROPDOWN_MENU)) {\n        var dropdownElement = external_jQuery_default()(element).closest(SELECTOR_DROPDOWN)[0];\n        if (dropdownElement) {\n          var dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(SELECTOR_DROPDOWN_TOGGLE));\n          external_jQuery_default()(dropdownToggleList).addClass(tab_CLASS_NAME_ACTIVE);\n        }\n        element.setAttribute('aria-expanded', true);\n      }\n      if (callback) {\n        callback();\n      }\n    }\n\n    // Static\n  }], [{\n    key: \"VERSION\",\n    get: function get() {\n      return tab_VERSION;\n    }\n  }, {\n    key: \"_jQueryInterface\",\n    value: function _jQueryInterface(config) {\n      return this.each(function () {\n        var $this = external_jQuery_default()(this);\n        var data = $this.data(tab_DATA_KEY);\n        if (!data) {\n          data = new Tab(this);\n          $this.data(tab_DATA_KEY, data);\n        }\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n          data[config]();\n        }\n      });\n    }\n  }]);\n}();\n/**\n * Data API implementation\n */\nexternal_jQuery_default()(document).on(tab_EVENT_CLICK_DATA_API, tab_SELECTOR_DATA_TOGGLE, function (event) {\n  event.preventDefault();\n  Tab._jQueryInterface.call(external_jQuery_default()(this), 'show');\n});\n\n/**\n * jQuery\n */\n\n(external_jQuery_default()).fn[tab_NAME] = Tab._jQueryInterface;\n(external_jQuery_default()).fn[tab_NAME].Constructor = Tab;\n(external_jQuery_default()).fn[tab_NAME].noConflict = function () {\n  (external_jQuery_default()).fn[tab_NAME] = tab_JQUERY_NO_CONFLICT;\n  return Tab._jQueryInterface;\n};\n/* harmony default export */ var tab = ((/* unused pure expression or super */ null && (Tab)));\n;// ./node_modules/bootstrap/js/src/toast.js\nfunction toast_typeof(o) { \"@babel/helpers - typeof\"; return toast_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, toast_typeof(o); }\nfunction toast_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction toast_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? toast_ownKeys(Object(t), !0).forEach(function (r) { toast_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : toast_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction toast_defineProperty(e, r, t) { return (r = toast_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction toast_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction toast_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toast_toPropertyKey(o.key), o); } }\nfunction toast_createClass(e, r, t) { return r && toast_defineProperties(e.prototype, r), t && toast_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction toast_toPropertyKey(t) { var i = toast_toPrimitive(t, \"string\"); return \"symbol\" == toast_typeof(i) ? i : i + \"\"; }\nfunction toast_toPrimitive(t, r) { if (\"object\" != toast_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != toast_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.2): toast.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n\n\n/**\n * Constants\n */\n\nvar toast_NAME = 'toast';\nvar toast_VERSION = '4.6.2';\nvar toast_DATA_KEY = 'bs.toast';\nvar toast_EVENT_KEY = \".\".concat(toast_DATA_KEY);\nvar toast_JQUERY_NO_CONFLICT = (external_jQuery_default()).fn[toast_NAME];\nvar toast_CLASS_NAME_FADE = 'fade';\nvar CLASS_NAME_HIDE = 'hide';\nvar toast_CLASS_NAME_SHOW = 'show';\nvar CLASS_NAME_SHOWING = 'showing';\nvar toast_EVENT_CLICK_DISMISS = \"click.dismiss\".concat(toast_EVENT_KEY);\nvar toast_EVENT_HIDE = \"hide\".concat(toast_EVENT_KEY);\nvar toast_EVENT_HIDDEN = \"hidden\".concat(toast_EVENT_KEY);\nvar toast_EVENT_SHOW = \"show\".concat(toast_EVENT_KEY);\nvar toast_EVENT_SHOWN = \"shown\".concat(toast_EVENT_KEY);\nvar toast_SELECTOR_DATA_DISMISS = '[data-dismiss=\"toast\"]';\nvar toast_Default = {\n  animation: true,\n  autohide: true,\n  delay: 500\n};\nvar toast_DefaultType = {\n  animation: 'boolean',\n  autohide: 'boolean',\n  delay: 'number'\n};\n\n/**\n * Class definition\n */\nvar Toast = /*#__PURE__*/function () {\n  function Toast(element, config) {\n    toast_classCallCheck(this, Toast);\n    this._element = element;\n    this._config = this._getConfig(config);\n    this._timeout = null;\n    this._setListeners();\n  }\n\n  // Getters\n  return toast_createClass(Toast, [{\n    key: \"show\",\n    value:\n    // Public\n    function show() {\n      var _this = this;\n      var showEvent = external_jQuery_default().Event(toast_EVENT_SHOW);\n      external_jQuery_default()(this._element).trigger(showEvent);\n      if (showEvent.isDefaultPrevented()) {\n        return;\n      }\n      this._clearTimeout();\n      if (this._config.animation) {\n        this._element.classList.add(toast_CLASS_NAME_FADE);\n      }\n      var complete = function complete() {\n        _this._element.classList.remove(CLASS_NAME_SHOWING);\n        _this._element.classList.add(toast_CLASS_NAME_SHOW);\n        external_jQuery_default()(_this._element).trigger(toast_EVENT_SHOWN);\n        if (_this._config.autohide) {\n          _this._timeout = setTimeout(function () {\n            _this.hide();\n          }, _this._config.delay);\n        }\n      };\n      this._element.classList.remove(CLASS_NAME_HIDE);\n      util.reflow(this._element);\n      this._element.classList.add(CLASS_NAME_SHOWING);\n      if (this._config.animation) {\n        var transitionDuration = util.getTransitionDurationFromElement(this._element);\n        external_jQuery_default()(this._element).one(util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      } else {\n        complete();\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this._element.classList.contains(toast_CLASS_NAME_SHOW)) {\n        return;\n      }\n      var hideEvent = external_jQuery_default().Event(toast_EVENT_HIDE);\n      external_jQuery_default()(this._element).trigger(hideEvent);\n      if (hideEvent.isDefaultPrevented()) {\n        return;\n      }\n      this._close();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._clearTimeout();\n      if (this._element.classList.contains(toast_CLASS_NAME_SHOW)) {\n        this._element.classList.remove(toast_CLASS_NAME_SHOW);\n      }\n      external_jQuery_default()(this._element).off(toast_EVENT_CLICK_DISMISS);\n      external_jQuery_default().removeData(this._element, toast_DATA_KEY);\n      this._element = null;\n      this._config = null;\n    }\n\n    // Private\n  }, {\n    key: \"_getConfig\",\n    value: function _getConfig(config) {\n      config = toast_objectSpread(toast_objectSpread(toast_objectSpread({}, toast_Default), external_jQuery_default()(this._element).data()), toast_typeof(config) === 'object' && config ? config : {});\n      util.typeCheckConfig(toast_NAME, config, this.constructor.DefaultType);\n      return config;\n    }\n  }, {\n    key: \"_setListeners\",\n    value: function _setListeners() {\n      var _this2 = this;\n      external_jQuery_default()(this._element).on(toast_EVENT_CLICK_DISMISS, toast_SELECTOR_DATA_DISMISS, function () {\n        return _this2.hide();\n      });\n    }\n  }, {\n    key: \"_close\",\n    value: function _close() {\n      var _this3 = this;\n      var complete = function complete() {\n        _this3._element.classList.add(CLASS_NAME_HIDE);\n        external_jQuery_default()(_this3._element).trigger(toast_EVENT_HIDDEN);\n      };\n      this._element.classList.remove(toast_CLASS_NAME_SHOW);\n      if (this._config.animation) {\n        var transitionDuration = util.getTransitionDurationFromElement(this._element);\n        external_jQuery_default()(this._element).one(util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      } else {\n        complete();\n      }\n    }\n  }, {\n    key: \"_clearTimeout\",\n    value: function _clearTimeout() {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n    }\n\n    // Static\n  }], [{\n    key: \"VERSION\",\n    get: function get() {\n      return toast_VERSION;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return toast_DefaultType;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return toast_Default;\n    }\n  }, {\n    key: \"_jQueryInterface\",\n    value: function _jQueryInterface(config) {\n      return this.each(function () {\n        var $element = external_jQuery_default()(this);\n        var data = $element.data(toast_DATA_KEY);\n        var _config = toast_typeof(config) === 'object' && config;\n        if (!data) {\n          data = new Toast(this, _config);\n          $element.data(toast_DATA_KEY, data);\n        }\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n          data[config](this);\n        }\n      });\n    }\n  }]);\n}();\n/**\n * jQuery\n */\n(external_jQuery_default()).fn[toast_NAME] = Toast._jQueryInterface;\n(external_jQuery_default()).fn[toast_NAME].Constructor = Toast;\n(external_jQuery_default()).fn[toast_NAME].noConflict = function () {\n  (external_jQuery_default()).fn[toast_NAME] = toast_JQUERY_NO_CONFLICT;\n  return Toast._jQueryInterface;\n};\n/* harmony default export */ var toast = ((/* unused pure expression or super */ null && (Toast)));\n// EXTERNAL MODULE: ./node_modules/bootstrap-touchspin/dist/jquery.bootstrap-touchspin.js\nvar jquery_bootstrap_touchspin = __webpack_require__(285);\n// EXTERNAL MODULE: ./js/lib/slick.min.js\nvar slick_min = __webpack_require__(784);\n// EXTERNAL MODULE: ./js/lib/jquery.hoverIntent.min.js\nvar jquery_hoverIntent_min = __webpack_require__(42);\n;// ./js/components/slick.js\nfunction slick_typeof(o) { \"@babel/helpers - typeof\"; return slick_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, slick_typeof(o); }\nfunction slick_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction slick_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, slick_toPropertyKey(o.key), o); } }\nfunction slick_createClass(e, r, t) { return r && slick_defineProperties(e.prototype, r), t && slick_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction slick_toPropertyKey(t) { var i = slick_toPrimitive(t, \"string\"); return \"symbol\" == slick_typeof(i) ? i : i + \"\"; }\nfunction slick_toPrimitive(t, r) { if (\"object\" != slick_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != slick_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\nvar SlickSlider = /*#__PURE__*/function () {\n  function SlickSlider() {\n    slick_classCallCheck(this, SlickSlider);\n  }\n  return slick_createClass(SlickSlider, [{\n    key: \"init\",\n    value: function init() {\n      external_jQuery_default()('[data-slick]').not('.slick-initialized').each(function () {\n        var self = external_jQuery_default()(this);\n        if (self.data('count') === 1) {\n          return;\n        }\n        self.slick({\n          prevArrow: \"<button type=\\\"button\\\" class=\\\"btn btn-link slick-prev slick-arrow\\\"><i class=\\\"material-icons left\\\">&#xE314;</i></button>\",\n          nextArrow: \"<button type=\\\"button\\\" class=\\\"btn btn-link slick-next slick-arrow\\\"><i class=\\\"material-icons right\\\">&#xE315;</i></button>\"\n        });\n      });\n    }\n  }]);\n}();\n\n// EXTERNAL MODULE: ./node_modules/jquery-zoom/jquery.zoom.min.js\nvar jquery_zoom_min = __webpack_require__(471);\n;// external \"prestashop\"\nvar external_prestashop_namespaceObject = prestashop;\nvar external_prestashop_default = /*#__PURE__*/__webpack_require__.n(external_prestashop_namespaceObject);\n;// ./js/responsive.js\n/**\n * 2007-2017 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License 3.0 (AFL-3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/AFL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2017 PrestaShop SA\n * @license   https://opensource.org/licenses/AFL-3.0 Academic Free License 3.0 (AFL-3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\n\n(external_prestashop_default()).responsive = (external_prestashop_default()).responsive || {};\n(external_prestashop_default()).responsive.current_width = window.innerWidth;\n(external_prestashop_default()).responsive.min_width = 992;\n(external_prestashop_default()).responsive.mobile = (external_prestashop_default()).responsive.current_width < (external_prestashop_default()).responsive.min_width;\nfunction swapChildren(obj1, obj2) {\n  var temp = obj2.children().detach();\n  obj2.empty().append(obj1.children().detach());\n  obj1.append(temp);\n}\nfunction toggleMobileStyles() {\n  if ((external_prestashop_default()).responsive.mobile) {\n    external_jQuery_default()(\"*[id^='_desktop_']\").each(function (idx, el) {\n      var target = external_jQuery_default()('#' + el.id.replace('_desktop_', '_mobile_'));\n      if (target.length) {\n        swapChildren(external_jQuery_default()(el), target);\n      }\n    });\n    external_jQuery_default()('[data-collapse-hide-mobile]').collapse('hide');\n  } else {\n    external_jQuery_default()(\"*[id^='_mobile_']\").each(function (idx, el) {\n      var target = external_jQuery_default()('#' + el.id.replace('_mobile_', '_desktop_'));\n      if (target.length) {\n        swapChildren(external_jQuery_default()(el), target);\n      }\n    });\n    external_jQuery_default()('[data-collapse-hide-mobile]').not('.show').collapse('show');\n    external_jQuery_default()('[data-modal-hide-mobile].show').modal('hide');\n  }\n  external_prestashop_default().emit('responsive update', {\n    mobile: (external_prestashop_default()).responsive.mobile\n  });\n}\nexternal_jQuery_default()(window).on('resize', function () {\n  var _cw = (external_prestashop_default()).responsive.current_width;\n  var _mw = (external_prestashop_default()).responsive.min_width;\n  var _w = window.innerWidth;\n  var _toggle = _cw >= _mw && _w < _mw || _cw < _mw && _w >= _mw;\n  (external_prestashop_default()).responsive.current_width = _w;\n  (external_prestashop_default()).responsive.mobile = (external_prestashop_default()).responsive.current_width < (external_prestashop_default()).responsive.min_width;\n  if (_toggle) {\n    toggleMobileStyles();\n  }\n});\nexternal_jQuery_default()(document).ready(function () {\n  if ((external_prestashop_default()).responsive.mobile) {\n    toggleMobileStyles();\n  }\n});\n;// ./js/checkout.js\nvar _this = undefined;\n/**\n * 2007-2017 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License 3.0 (AFL-3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/AFL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2017 PrestaShop SA\n * @license   https://opensource.org/licenses/AFL-3.0 Academic Free License 3.0 (AFL-3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\n\nfunction setUpCheckout() {\n  external_jQuery_default()('.js-terms a').on('click', function (event) {\n    event.preventDefault();\n    var url = external_jQuery_default()(event.target).attr('href');\n    if (url) {\n      // TODO: Handle request if no pretty URL\n      url += \"?content_only=1\";\n      external_jQuery_default().get(url, function (content) {\n        external_jQuery_default()('#modal').find('.js-modal-content').html(external_jQuery_default()(content).find('.page-content--cms').contents());\n      }).fail(function (resp) {\n        external_prestashop_default().emit('handleError', {\n          eventType: 'clickTerms',\n          resp: resp\n        });\n      });\n    }\n    external_jQuery_default()('#modal').modal('show');\n  });\n  external_jQuery_default()('.js-gift-checkbox').on('click', function (event) {\n    external_jQuery_default()('#gift').collapse('toggle');\n  });\n}\nexternal_jQuery_default()(document).ready(function () {\n  if (external_jQuery_default()('body#checkout').length === 1) {\n    setUpCheckout();\n  }\n  external_prestashop_default().on('updatedDeliveryForm', function (params) {\n    if (typeof params.deliveryOption === 'undefined' || 0 === params.deliveryOption.length) {\n      return;\n    }\n    // Hide all carrier extra content ...\n    external_jQuery_default()(\".carrier-extra-content\").hide();\n    // and show the one related to the selected carrier\n    params.deliveryOption.next(\".carrier-extra-content\").slideDown();\n  });\n  external_prestashop_default().on('changedCheckoutStep', function (params) {\n    if (typeof params.event.currentTarget !== 'undefined') {\n      external_jQuery_default()('.collapse', params.event.currentTarget).not('.show').not('.collapse .collapse').collapse('show');\n    }\n  });\n});\nexternal_jQuery_default()(document).on('change', '.js-input-delivery:checked', function (event) {\n  external_jQuery_default()('.js-label-delivery.selected').removeClass('selected');\n  external_jQuery_default()('#js-' + external_jQuery_default()(_this).attr('id')).addClass('selected');\n});\nexternal_jQuery_default()(document).on('click', '.js-checkout-step-header', function (event) {\n  var stepIdentifier = external_jQuery_default()(event.currentTarget).data('identifier');\n  external_jQuery_default()('#' + stepIdentifier).addClass('-current');\n  external_jQuery_default()('#content-' + stepIdentifier).collapse('show').scrollTop();\n});\n;// ./js/customer.js\n/**\n * 2007-2017 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License 3.0 (AFL-3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/AFL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2017 PrestaShop SA\n * @license   https://opensource.org/licenses/AFL-3.0 Academic Free License 3.0 (AFL-3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\nfunction initRmaItemSelector() {\n  external_jQuery_default()('#order-return-form table thead input[type=checkbox]').on('click', function () {\n    var checked = external_jQuery_default()(this).prop('checked');\n    external_jQuery_default()('#order-return-form table tbody input[type=checkbox]').each(function (_, checkbox) {\n      external_jQuery_default()(checkbox).prop('checked', checked);\n    });\n  });\n}\nfunction setupCustomerScripts() {\n  if (external_jQuery_default()('body#order-detail')) {\n    initRmaItemSelector();\n  }\n}\nexternal_jQuery_default()(document).ready(setupCustomerScripts);\n;// ./js/listing.js\n/**\n * 2007-2017 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License 3.0 (AFL-3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/AFL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2017 PrestaShop SA\n * @license   https://opensource.org/licenses/AFL-3.0 Academic Free License 3.0 (AFL-3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\n\n\nexternal_jQuery_default()(document).ready(function () {\n  external_prestashop_default().on('clickQuickView', function (elm) {\n    var data = {\n      'action': 'quickview',\n      'id_product': elm.dataset.idProduct,\n      'id_product_attribute': elm.dataset.idProductAttribute\n    };\n    external_jQuery_default().post((external_prestashop_default()).urls.pages.product, data, null, 'json').then(function (resp) {\n      external_jQuery_default()('body').append(resp.quickview_html);\n      var productModal = external_jQuery_default()(\"#quickview-modal-\".concat(resp.product.id, \"-\").concat(resp.product.id_product_attribute));\n      productModal.modal('show');\n      productModal.on('hidden.bs.modal', function () {\n        productModal.remove();\n      });\n      productModal.on('shown.bs.modal', function () {\n        productConfig(productModal);\n      });\n    }).fail(function (resp) {\n      external_prestashop_default().emit('handleError', {\n        eventType: 'clickQuickView',\n        resp: resp\n      });\n    });\n  });\n  var productConfig = function productConfig(qv) {\n    var slickSlider = new SlickSlider();\n    slickSlider.init();\n    qv.find('#quantity_wanted').TouchSpin({\n      buttondown_class: 'btn js-touchspin',\n      buttonup_class: 'btn js-touchspin',\n      min: 1,\n      max: 1000000\n    });\n  };\n  var parseSearchUrl = function parseSearchUrl(event) {\n    if (event.target.dataset.searchUrl !== undefined) {\n      return event.target.dataset.searchUrl;\n    }\n    if (external_jQuery_default()(event.target).parent()[0].dataset.searchUrl === undefined) {\n      throw new Error('Can not parse search URL');\n    }\n    return external_jQuery_default()(event.target).parent()[0].dataset.searchUrl;\n  };\n  external_jQuery_default()('body').on('change', '#search_filters input[data-search-url]', function (event) {\n    external_prestashop_default().emit('updateFacets', parseSearchUrl(event));\n  });\n  external_jQuery_default()('body').on('click', '.js-search-filters-clear-all', function (event) {\n    external_prestashop_default().emit('updateFacets', parseSearchUrl(event));\n  });\n  external_jQuery_default()('body').on('click', '.js-search-link', function (event) {\n    event.preventDefault();\n    external_prestashop_default().emit('updateFacets', external_jQuery_default()(event.target).closest('a').get(0).href);\n  });\n  external_jQuery_default()('body').on('change', '#select-sort-order', function () {\n    var urlsearch = external_jQuery_default()(this).val();\n    external_prestashop_default().emit('updateFacets', urlsearch);\n  });\n  external_jQuery_default()('body').on('change', '#search_filters select', function (event) {\n    var urlsearch = external_jQuery_default()(this).val();\n    external_prestashop_default().emit('updateFacets', urlsearch);\n  });\n  external_prestashop_default().on('updateProductList', function (data) {\n    updateProductListDOM(data);\n    window.scrollTo(0, 0);\n  });\n});\nfunction updateProductListDOM(data) {\n  external_jQuery_default()('#search_filters').replaceWith(data.rendered_facets);\n  external_jQuery_default()('#js-active-search-filters').replaceWith(data.rendered_active_filters);\n  external_jQuery_default()('#js-product-list-top').replaceWith(data.rendered_products_top);\n  external_jQuery_default()('#js-product-list').replaceWith(data.rendered_products);\n  external_jQuery_default()('#js-product-list-bottom').replaceWith(data.rendered_products_bottom);\n  if (typeof data.rendered_products_header !== 'undefined' && data.rendered_products_header) {\n    external_jQuery_default()('#js-product-list-header').replaceWith(data.rendered_products_header);\n  }\n}\n;// ./js/product.js\n/**\n * 2007-2017 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License 3.0 (AFL-3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/AFL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2017 PrestaShop SA\n * @license   https://opensource.org/licenses/AFL-3.0 Academic Free License 3.0 (AFL-3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\n\n\nexternal_jQuery_default()(document).ready(function () {\n  console.log('ready product');\n  createProductSpin();\n  createInputFile();\n  //let slickSlider = new SlickSlider();\n  slickSliderProductInit();\n  if ((external_prestashop_default()).responsive.mobile) {\n    //$(\".btn-zoom\").hide();\n    console.log('zoom');\n    //$(\".product-img img\").parent().zoom();\n    external_jQuery_default()(\"#product-modal img\").parent().zoom({\n      magnify: 0.8\n    });\n  }\n  external_prestashop_default().on('updatedProduct', function (event) {\n    console.log('updatedProduct');\n    createInputFile();\n    if (event && event.product_minimal_quantity) {\n      var minimalProductQuantity = parseInt(event.product_minimal_quantity, 10);\n      var quantityInputSelector = '#quantity_wanted';\n      var quantityInput = external_jQuery_default()(quantityInputSelector);\n\n      // @see http://www.virtuosoft.eu/code/bootstrap-touchspin/ about Bootstrap TouchSpin\n      quantityInput.trigger('touchspin.updatesettings', {\n        min: minimalProductQuantity\n      });\n    }\n    external_jQuery_default()(external_jQuery_default()('.tabs .nav-link.active').attr('href')).addClass('active').removeClass('fade');\n    external_jQuery_default()('.js-product-images-modal').replaceWith(event.product_images_modal);\n    // slickSlider.init();\n    slickSliderProductInit();\n  });\n  function slickSliderProductInit() {\n    console.log('slickSliderProductInit');\n    external_jQuery_default()('.product-thumbs').slick({\n      asNavFor: '.products-imagescover',\n      prevArrow: '<button type=\"button\" class=\"btn btn-link slick-prev slick-arrow\"><i class=\"material-icons\">expand_less</i></button>',\n      nextArrow: '<button type=\"button\" class=\"btn btn-link slick-next slick-arrow\"><i class=\"material-icons\">expand_more</i></button>',\n      dots: false,\n      infinite: true,\n      speed: 300,\n      rows: 0,\n      slidesToShow: 6,\n      slidesToScroll: 1,\n      \"focusOnSelect\": true,\n      vertical: true,\n      verticalSwiping: true,\n      responsive: [{\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          vertical: false,\n          verticalSwiping: false,\n          prevArrow: '<button type=\"button\" class=\"btn btn-link slick-prev slick-arrow\"><i class=\"material-icons\">chevron_left</i></button>',\n          nextArrow: '<button type=\"button\" class=\"btn btn-link slick-next slick-arrow\"><i class=\"material-icons\">chevron_right</i></button>'\n        }\n      }, {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          vertical: false,\n          verticalSwiping: false,\n          prevArrow: '<button type=\"button\" class=\"btn btn-link slick-prev slick-arrow\"><i class=\"material-icons\">chevron_left</i></button>',\n          nextArrow: '<button type=\"button\" class=\"btn btn-link slick-next slick-arrow\"><i class=\"material-icons\">chevron_right</i></button>'\n        }\n      }]\n    });\n    external_jQuery_default()('.products-imagescover').slick({\n      asNavFor: '.product-thumbs',\n      prevArrow: '<button type=\"button\" class=\"btn btn-link slick-prev slick-arrow\"><i class=\"material-icons\">chevron_left</i></button>',\n      nextArrow: '<button type=\"button\" class=\"btn btn-link slick-next slick-arrow\"><i class=\"material-icons\">chevron_right</i></button>',\n      dots: false,\n      infinite: true,\n      speed: 300,\n      rows: 0,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      vertical: false,\n      verticalSwiping: false\n    });\n    external_jQuery_default()('#js-slick-product').slick({\n      asNavFor: '.product-thumbs, .products-imagescover',\n      prevArrow: '<button type=\"button\" class=\"btn btn-link slick-prev slick-arrow d-none d-md-flex\"><i class=\"material-icons\">chevron_left</i></button>',\n      nextArrow: '<button type=\"button\" class=\"btn btn-link slick-next slick-arrow d-none d-md-flex\"><i class=\"material-icons\">chevron_right</i></button>',\n      dots: false,\n      infinite: true,\n      speed: 300,\n      rows: 0,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      vertical: false,\n      verticalSwiping: false,\n      swipe: false\n    });\n\n    // On before slide change\n    /*\n     $('#js-slick-product').on('beforeChange', function (event, slick, currentSlide, nextSlide) {\n     console.log(nextSlide);\n     //$('.products-imagescover').slick('slickGoTo', nextSlide);\n     //$('.product-thumbs').slick('slickGoTo', nextSlide);\n     \n     });*/\n\n    external_jQuery_default()('.btn-zoom').on('click', function () {\n      console.log('btn-zoom click');\n      idImage = external_jQuery_default()(this).data('id-image');\n      numImage = external_jQuery_default()(this).data('num-image');\n      numSlide = external_jQuery_default()(this).parent().data('slick-index');\n      external_jQuery_default()('#js-slick-product').slick('slickGoTo', numSlide);\n      console.log('numImage : ' + numImage);\n      console.log('numSlide : ' + numSlide);\n      /*  $(\"#product-modal img.img-fluid\").addClass('d-none').removeClass('current');\n       $(\"#product-modal img#image-\" + idImage).removeClass('d-none').addClass('current');*/\n    });\n  }\n  function createInputFile() {\n    external_jQuery_default()('.js-file-input').on('change', function (event) {\n      var target, file;\n      if ((target = external_jQuery_default()(event.currentTarget)[0]) && (file = target.files[0])) {\n        external_jQuery_default()(target).prev().text(file.name);\n      }\n    });\n  }\n  function createProductSpin() {\n    var $quantityInput = external_jQuery_default()('#quantity_wanted');\n    $quantityInput.TouchSpin({\n      buttondown_class: 'btn js-touchspin',\n      buttonup_class: 'btn js-touchspin',\n      min: parseInt($quantityInput.attr('min'), 10),\n      max: 1000000\n    });\n    external_jQuery_default()('body').on('change keyup', '#quantity_wanted', function (e) {\n      external_jQuery_default()(e.currentTarget).trigger('touchspin.stopspin');\n      external_prestashop_default().emit('updateProduct', {\n        eventType: 'updatedProductQuantity',\n        event: e\n      });\n    });\n  }\n});\nvar idImage = 0;\nvar numImage = 0;\nvar numSlide = 0;\nexternal_jQuery_default()(document).on('shown.bs.modal', '#product-modal', function (e) {\n  console.log('shown #product-modal');\n  console.log('numImage : ' + numImage);\n  external_jQuery_default()('#js-slick-product').resize();\n});\nexternal_jQuery_default()(document).on('click', '.next-image-modal', function (e) {\n  console.log('next-image-modal click');\n  external_jQuery_default()('#js-slick-product').slick('slickNext');\n});\nexternal_jQuery_default()(document).on('click', '.prev-image-modal', function (e) {\n  console.log('prev-image-modal click');\n  external_jQuery_default()('#js-slick-product').slick('slickPrev');\n});\n\n//add to cart loader\nexternal_jQuery_default()(document).on('click', '.js-add-to-cart:enabled:not(.is--loading)', function () {\n  external_jQuery_default()(this).addClass('is--loading').attr(\"disabled\", true);\n});\n/*\nprestashop.on('updateCart', function (event) {\n    removeAddToCartLoader();\n\n});\nprestashop.on('handleError', function (event) {\n    removeAddToCartLoader();\n    $('.js-add-to-cart').attr(\"disabled\", false);\n\n});\nfunction removeAddToCartLoader() {\n    $('.js-add-to-cart.is--loading').removeClass('is--loading');\n\n}*/\n;// ./js/cart.js\n\n\n(external_prestashop_default()).cart = (external_prestashop_default()).cart || {};\n(external_prestashop_default()).cart.active_inputs = null;\nvar spinnerSelector = 'input[name=\"product-quantity-spin\"]';\nvar hasError = false;\nvar isUpdateOperation = false;\nvar errorMsg = '';\n\n/**\n * Attach Bootstrap TouchSpin event handlers\n */\nfunction createSpin() {\n  external_jQuery_default().each(external_jQuery_default()(spinnerSelector), function (index, spinner) {\n    external_jQuery_default()(spinner).TouchSpin({\n      buttondown_class: 'btn js-touchspin',\n      buttonup_class: 'btn js-touchspin',\n      min: parseInt(external_jQuery_default()(spinner).attr('min'), 10),\n      max: 1000000\n    });\n  });\n  CheckUpdateQuantityOperations.switchErrorStat();\n}\nexternal_jQuery_default()(document).ready(function () {\n  var productLineInCartSelector = '.js-cart-line-product-quantity';\n  var promises = [];\n  external_prestashop_default().on('updateCart', function () {\n    external_jQuery_default()('.quickview').modal('hide');\n    external_jQuery_default()('.js-cart__card-body').addClass('is--loading');\n  });\n  external_prestashop_default().on('updatedCart', function () {\n    createSpin();\n    external_jQuery_default()('.js-cart__card-body.is--loading').removeClass('is--loading');\n  });\n  external_prestashop_default().on('handleError', function (event) {\n    external_jQuery_default()('.js-cart__card-body.is--loading').removeClass('is--loading');\n  });\n  createSpin();\n  var $body = external_jQuery_default()('body');\n  function isTouchSpin(namespace) {\n    return namespace === 'on.startupspin' || namespace === 'on.startdownspin';\n  }\n  function shouldIncreaseProductQuantity(namespace) {\n    return namespace === 'on.startupspin';\n  }\n  function findCartLineProductQuantityInput($target) {\n    var $input = $target.parents('.bootstrap-touchspin').find(productLineInCartSelector);\n    if ($input.is(':focus')) {\n      return null;\n    }\n    return $input;\n  }\n  function camelize(subject) {\n    var actionTypeParts = subject.split('-');\n    var i;\n    var part;\n    var camelizedSubject = '';\n    for (i = 0; i < actionTypeParts.length; i++) {\n      part = actionTypeParts[i];\n      if (0 !== i) {\n        part = part.substring(0, 1).toUpperCase() + part.substring(1);\n      }\n      camelizedSubject = camelizedSubject + part;\n    }\n    return camelizedSubject;\n  }\n  function parseCartAction($target, namespace) {\n    if (!isTouchSpin(namespace)) {\n      return {\n        url: $target.attr('href'),\n        type: camelize($target.data('link-action'))\n      };\n    }\n    var $input = findCartLineProductQuantityInput($target);\n    if (!$input) {\n      return;\n    }\n    var cartAction = {};\n    if (shouldIncreaseProductQuantity(namespace)) {\n      cartAction = {\n        url: $input.data('up-url'),\n        type: 'increaseProductQuantity'\n      };\n    } else {\n      cartAction = {\n        url: $input.data('down-url'),\n        type: 'decreaseProductQuantity'\n      };\n    }\n    return cartAction;\n  }\n  var abortPreviousRequests = function abortPreviousRequests() {\n    var promise;\n    while (promises.length > 0) {\n      promise = promises.pop();\n      promise.abort();\n    }\n  };\n  var getTouchSpinInput = function getTouchSpinInput($button) {\n    return external_jQuery_default()($button.parents('.bootstrap-touchspin').find('input'));\n  };\n  var handleCartAction = function handleCartAction(event) {\n    event.preventDefault();\n    var $target = external_jQuery_default()(event.currentTarget);\n    var dataset = event.currentTarget.dataset;\n    var cartAction = parseCartAction($target, event.namespace);\n    var requestData = {\n      ajax: '1',\n      action: 'update'\n    };\n    if (typeof cartAction === 'undefined') {\n      return;\n    }\n    abortPreviousRequests();\n    external_jQuery_default().ajax({\n      url: cartAction.url,\n      method: 'POST',\n      data: requestData,\n      dataType: 'json',\n      beforeSend: function beforeSend(jqXHR) {\n        promises.push(jqXHR);\n      }\n    }).then(function (resp) {\n      CheckUpdateQuantityOperations.checkUpdateOpertation(resp);\n      var $quantityInput = getTouchSpinInput($target);\n      $quantityInput.val(resp.quantity);\n\n      // Refresh cart preview\n      external_prestashop_default().emit('updateCart', {\n        reason: dataset,\n        resp: resp\n      });\n    }).fail(function (resp) {\n      external_prestashop_default().emit('handleError', {\n        eventType: 'updateProductInCart',\n        resp: resp,\n        cartAction: cartAction.type\n      });\n    });\n  };\n  $body.on('click', '[data-link-action=\"delete-from-cart\"], [data-link-action=\"remove-voucher\"]', handleCartAction);\n  $body.on('touchspin.on.startdownspin', spinnerSelector, handleCartAction);\n  $body.on('touchspin.on.startupspin', spinnerSelector, handleCartAction);\n  function sendUpdateQuantityInCartRequest(updateQuantityInCartUrl, requestData, $target) {\n    abortPreviousRequests();\n    return external_jQuery_default().ajax({\n      url: updateQuantityInCartUrl,\n      method: 'POST',\n      data: requestData,\n      dataType: 'json',\n      beforeSend: function beforeSend(jqXHR) {\n        promises.push(jqXHR);\n      }\n    }).then(function (resp) {\n      CheckUpdateQuantityOperations.checkUpdateOpertation(resp);\n      $target.val(resp.quantity);\n      var dataset;\n      if ($target && $target.dataset) {\n        dataset = $target.dataset;\n      } else {\n        dataset = resp;\n      }\n\n      // Refresh cart preview\n      external_prestashop_default().emit('updateCart', {\n        reason: dataset,\n        resp: resp\n      });\n    }).fail(function (resp) {\n      external_prestashop_default().emit('handleError', {\n        eventType: 'updateProductQuantityInCart',\n        resp: resp\n      });\n    });\n  }\n  function getRequestData(quantity) {\n    return {\n      ajax: '1',\n      qty: Math.abs(quantity),\n      action: 'update',\n      op: getQuantityChangeType(quantity)\n    };\n  }\n  function getQuantityChangeType($quantity) {\n    return $quantity > 0 ? 'up' : 'down';\n  }\n  function updateProductQuantityInCart(event) {\n    var $target = external_jQuery_default()(event.currentTarget);\n    var updateQuantityInCartUrl = $target.data('update-url');\n    var baseValue = $target.attr('value');\n\n    // There should be a valid product quantity in cart\n    var targetValue = $target.val();\n    if (targetValue != parseInt(targetValue) || targetValue < 0 || isNaN(targetValue)) {\n      $target.val(baseValue);\n      return;\n    }\n\n    // There should be a new product quantity in cart\n    var qty = targetValue - baseValue;\n    if (qty === 0) {\n      return;\n    }\n    $target.attr('value', targetValue);\n    sendUpdateQuantityInCartRequest(updateQuantityInCartUrl, getRequestData(qty), $target);\n  }\n  $body.on('focusout keyup', productLineInCartSelector, function (event) {\n    if (event.type === 'keyup') {\n      if (event.keyCode === 13) {\n        updateProductQuantityInCart(event);\n      }\n      return false;\n    }\n    updateProductQuantityInCart(event);\n  });\n  $body.on('click', '.js-discount .code', function (event) {\n    event.stopPropagation();\n    var $code = external_jQuery_default()(event.currentTarget);\n    var $discountInput = external_jQuery_default()('[name=discount_name]');\n    $discountInput.val($code.text());\n    external_jQuery_default()('#promo-code').collapse('show');\n    return false;\n  });\n});\nvar CheckUpdateQuantityOperations = {\n  'switchErrorStat': function switchErrorStat() {\n    /**\n     * resp.hasError can be not defined but resp.errors not empty: quantity is updated but order cannot be placed\n     * when resp.hasError=true, quantity is not updated\n     */\n    var $checkoutBtn = external_jQuery_default()('.checkout a');\n    if (external_jQuery_default()(\"#notifications article.alert-danger\").length || '' !== errorMsg && !hasError) {\n      $checkoutBtn.addClass('disabled');\n    }\n    if ('' !== errorMsg) {\n      var strError = ' <article class=\"alert alert-danger\" role=\"alert\" data-alert=\"danger\"><ul><li>' + errorMsg + '</li></ul></article>';\n      external_jQuery_default()('#notifications.notifications-container').html(strError);\n      errorMsg = '';\n      isUpdateOperation = false;\n      if (hasError) {\n        // if hasError is true, quantity was not updated : allow checkout\n        $checkoutBtn.removeClass('disabled');\n      }\n    } else if (!hasError && isUpdateOperation) {\n      hasError = false;\n      isUpdateOperation = false;\n      external_jQuery_default()('#notifications.notifications-container').html('');\n      $checkoutBtn.removeClass('disabled');\n    }\n  },\n  'checkUpdateOpertation': function checkUpdateOpertation(resp) {\n    /**\n     * resp.hasError can be not defined but resp.errors not empty: quantity is updated but order cannot be placed\n     * when resp.hasError=true, quantity is not updated\n     */\n    hasError = resp.hasOwnProperty('hasError');\n    var errors = resp.errors || \"\";\n    // 1.7.2.x returns errors as string, 1.7.3.x returns array\n    if (errors instanceof Array) {\n      errorMsg = errors.join(\" \");\n    } else {\n      errorMsg = errors;\n    }\n    isUpdateOperation = true;\n  }\n};\n;// ./js/components/form.js\nfunction form_typeof(o) { \"@babel/helpers - typeof\"; return form_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, form_typeof(o); }\nfunction form_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction form_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, form_toPropertyKey(o.key), o); } }\nfunction form_createClass(e, r, t) { return r && form_defineProperties(e.prototype, r), t && form_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction form_toPropertyKey(t) { var i = form_toPrimitive(t, \"string\"); return \"symbol\" == form_typeof(i) ? i : i + \"\"; }\nfunction form_toPrimitive(t, r) { if (\"object\" != form_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != form_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * 2007-2017 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License 3.0 (AFL-3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/AFL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2017 PrestaShop SA\n * @license   https://opensource.org/licenses/AFL-3.0 Academic Free License 3.0 (AFL-3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\nvar Form = /*#__PURE__*/function () {\n  function Form() {\n    form_classCallCheck(this, Form);\n  }\n  return form_createClass(Form, [{\n    key: \"init\",\n    value: function init() {\n      this.parentFocus();\n      this.togglePasswordVisibility();\n      this.formValidation();\n    }\n  }, {\n    key: \"parentFocus\",\n    value: function parentFocus() {\n      external_jQuery_default()('.js-child-focus').focus(function () {\n        external_jQuery_default()(this).closest('.js-parent-focus').addClass('focus');\n      });\n      external_jQuery_default()('.js-child-focus').focusout(function () {\n        external_jQuery_default()(this).closest('.js-parent-focus').removeClass('focus');\n      });\n    }\n  }, {\n    key: \"togglePasswordVisibility\",\n    value: function togglePasswordVisibility() {\n      external_jQuery_default()('button[data-action=\"show-password\"]').on('click', function () {\n        var elm = external_jQuery_default()(this).closest('.input-group').children('input.js-visible-password');\n        if (elm.attr('type') === 'password') {\n          elm.attr('type', 'text');\n          external_jQuery_default()(this).text(external_jQuery_default()(this).data('textHide'));\n        } else {\n          elm.attr('type', 'password');\n          external_jQuery_default()(this).text(external_jQuery_default()(this).data('textShow'));\n        }\n      });\n    }\n  }, {\n    key: \"formValidation\",\n    value: function formValidation() {\n      // Fetch all the forms we want to apply custom Bootstrap validation styles to\n      var forms = document.getElementsByClassName('needs-validation');\n      if (forms.length > 0) {\n        console.log(supportedValidity());\n        if (!supportedValidity()) {\n          return;\n        }\n        // Loop over them and prevent submission\n        var divToScroll = false;\n        var validation = Array.prototype.filter.call(forms, function (form) {\n          form.addEventListener('submit', function (event) {\n            if (form.checkValidity() === false) {\n              event.preventDefault();\n              event.stopPropagation();\n              external_jQuery_default()('input:invalid,select:invalid,textarea:invalid', form).each(function (index) {\n                var _field = external_jQuery_default()(this),\n                  _parent = _field.parents('.form-group').first();\n                external_jQuery_default()('.js-invalid-feedback-browser', _parent).text(_field[0].validationMessage);\n                if (!divToScroll) {\n                  divToScroll = _parent;\n                }\n              });\n              external_jQuery_default()(this).data('disabled', false);\n              external_jQuery_default()('button[type=\"submit\"]', form).removeClass('disabled');\n            }\n            form.classList.add('was-validated');\n            if (divToScroll) {\n              external_jQuery_default()('html, body').animate({\n                scrollTop: divToScroll.offset().top\n              }, 300);\n              divToScroll = false;\n            }\n          }, false);\n        });\n      }\n    }\n  }]);\n}();\n\nvar supportedValidity = function supportedValidity() {\n  var input = document.createElement('input');\n  return 'validity' in input && 'badInput' in input.validity && 'patternMismatch' in input.validity && 'rangeOverflow' in input.validity && 'rangeUnderflow' in input.validity && 'tooLong' in input.validity && 'tooShort' in input.validity && 'typeMismatch' in input.validity && 'valid' in input.validity && 'valueMissing' in input.validity;\n};\n;// ./js/components/top-menu.js\nfunction top_menu_typeof(o) { \"@babel/helpers - typeof\"; return top_menu_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, top_menu_typeof(o); }\nfunction top_menu_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction top_menu_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, top_menu_toPropertyKey(o.key), o); } }\nfunction top_menu_createClass(e, r, t) { return r && top_menu_defineProperties(e.prototype, r), t && top_menu_defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction top_menu_toPropertyKey(t) { var i = top_menu_toPrimitive(t, \"string\"); return \"symbol\" == top_menu_typeof(i) ? i : i + \"\"; }\nfunction top_menu_toPrimitive(t, r) { if (\"object\" != top_menu_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != top_menu_typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * 2007-2017 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License 3.0 (AFL-3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/AFL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2017 PrestaShop SA\n * @license   https://opensource.org/licenses/AFL-3.0 Academic Free License 3.0 (AFL-3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\nvar TopMenu = /*#__PURE__*/function () {\n  function TopMenu(el) {\n    top_menu_classCallCheck(this, TopMenu);\n    this.el = el;\n  }\n  return top_menu_createClass(TopMenu, [{\n    key: \"init\",\n    value: function init() {\n      var self = this;\n      self.el.hoverIntent({\n        over: self.toggleClassSubMenu,\n        out: self.toggleClassSubMenu,\n        selector: ' > li',\n        timeout: 100\n      });\n    }\n  }, {\n    key: \"toggleClassSubMenu\",\n    value: function toggleClassSubMenu() {\n      var _item = external_jQuery_default()(this);\n      var expanded = _item.attr('aria-expanded');\n      if (typeof expanded !== \"undefined\") {\n        expanded = expanded.toLowerCase() === 'true';\n        _item.toggleClass('menu__item--active').attr('aria-expanded', !expanded);\n        external_jQuery_default()('.menu-sub', _item).attr('aria-expanded', !expanded).attr('aria-hidden', expanded);\n      }\n    }\n  }]);\n}();\n\n// EXTERNAL MODULE: ./node_modules/events/events.js\nvar events = __webpack_require__(32);\nvar events_default = /*#__PURE__*/__webpack_require__.n(events);\n;// ./js/components/block-cart.js\n/**\n * 2007-2017 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License 3.0 (AFL-3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/AFL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2017 PrestaShop SA\n * @license   https://opensource.org/licenses/AFL-3.0 Academic Free License 3.0 (AFL-3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\n\n(external_prestashop_default()).blockcart = (external_prestashop_default()).blockcart || {};\n(external_prestashop_default()).blockcart.showModal = function (html) {\n  function getBlockCartModal() {\n    return external_jQuery_default()('#blockcart-modal');\n  }\n  var $blockCartModal = getBlockCartModal();\n  if ($blockCartModal.length) {\n    $blockCartModal.remove();\n  }\n  external_jQuery_default()('body').append(html);\n  $blockCartModal = getBlockCartModal();\n  $blockCartModal.modal('show').on('hidden.bs.modal', function (event) {\n    external_prestashop_default().emit('updateProduct', {\n      reason: event.currentTarget.dataset,\n      event: event\n    });\n  });\n};\n// EXTERNAL MODULE: ./node_modules/lazysizes/lazysizes.js\nvar lazysizes = __webpack_require__(64);\n;// ./js/theme.js\n/**\n * 2007-2017 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License 3.0 (AFL-3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/AFL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2017 PrestaShop SA\n * @license   https://opensource.org/licenses/AFL-3.0 Academic Free License 3.0 (AFL-3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// \"inherit\" EventEmitter\nfor (var i in (events_default()).prototype) {\n  (external_prestashop_default())[i] = (events_default()).prototype[i];\n}\n$(document).ready(function () {\n  var form = new Form();\n  var slickSlider = new SlickSlider();\n  var topMenuEl = $('#_desktop_top_menu #top-menu');\n  var topMenu = new TopMenu(topMenuEl);\n  form.init();\n  slickSlider.init();\n  topMenu.init();\n\n  //display input file content in custom file input BS\n  $('.custom-file-input').on('change', function () {\n    var fileName = $(this).val().split('\\\\').pop();\n    $(this).next('.custom-file-label').addClass(\"selected\").html(fileName);\n  });\n});\ndocument.addEventListener('lazyloaded', function (e) {\n  $(e.target).parent().addClass('rc--lazyload');\n});\n$(document).ready(function () {\n  console.log('ready');\n  /* SCROLL TO ANCHOR */\n  if (window.location.hash && window.location.hash[1] != '/') {\n    scrollToAnchor(window.location.hash);\n  }\n  FullWidth();\n  if ($(location).attr(\"pathname\") != \"/commande\" && $(location).attr(\"pathname\") != \"/checkout\") {\n    sticky();\n    MobileMenuOk();\n  }\n  $(window).resize(function () {\n    FullWidth();\n    if ($(location).attr(\"pathname\") != \"/commande\" && $(location).attr(\"pathname\") != \"/checkout\") {\n      MobileMenuOk();\n    }\n  });\n  function FullWidth() {\n    $('.fullwidth').each(function () {\n      var content = $(this);\n      var fullwidth = $('body').width(),\n        margin_full = fullwidth / 2;\n      //console.log(fullwidth);\n      //console.log(content);\n      content.css({\n        'left': '50%',\n        'position': 'relative',\n        'width': fullwidth,\n        'margin-left': -margin_full\n      });\n    });\n  }\n  function sticky() {\n    console.log('sticky');\n    var yourNavigation = $(\"#header\");\n    var stickyDiv = \"sticky\";\n    var unStickyDiv = \"unsticky\";\n    var yourHeader = $('#header').height();\n    $(window).scroll(function () {\n      if ($(this).scrollTop() > 0) {\n        yourNavigation.addClass(stickyDiv).removeClass(unStickyDiv);\n        $('body').css('padding-top', yourHeader);\n      } else {\n        yourNavigation.addClass(unStickyDiv).removeClass(stickyDiv);\n        $('body').css('padding-top', 0);\n      }\n    });\n  }\n  function MobileMenuOk() {\n    $(\".modal-dialog__offcanvas #adtm_menu\").addClass(\"adtm_menu_toggle_open\");\n    //$('#adtm_menu').toggleClass('adtm_menu_toggle_open');\n    //$('#adtm_menu .advtm_menu_toggle').toggleClass('adtm_menu_mobile_mode');\n  }\n  function scrollToAnchor(anchor) {\n    console.log(anchor);\n    var target = $(anchor);\n    var scrollTop = target.offset().top - $('#header').height() - 40;\n    //var scrollTop = target.offset().top - $('#header').height();\n    console.log('header height: ' + $('#header').height());\n    console.log('scrollTop : ' + scrollTop);\n    $('html, body').animate({\n      scrollTop: scrollTop\n    }, 1000, function () {\n      // Callback after animation\n      // Must change focus!\n      var $target = $(target);\n      $target.focus();\n      if ($target.is(\":focus\")) {\n        // Checking if the target was focused\n        return false;\n      } else {\n        $target.attr('tabindex', '-1'); // Adding tabindex for elements not focusable\n        $target.focus(); // Set focus again\n      }\n    });\n  }\n\n  // Fonction pour scroller les liens vers ancres\n  $('a[href*=\"#\"]')\n  // Remove links that don't actually link to anything\n  .not('[href=\"#\"]').not('[href*=\"#footer\"]').not('.footer__title--mobile').not('.noscroll')\n  /*\n   .not('[href=\"#0\"]')\n   .not('[href=\"#bt_tabs-0\"]')\n   .not('[href=\"#bt_tabs-1\"]')*/.click(function (event) {\n    // On-page links\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\n      // Figure out element to scroll to\n\n      if ($(this).hasClass('nav-link')) {\n        var target = $(this).parent().parent();\n      } else {\n        var target = $(this.hash);\n        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n      }\n      console.log('target');\n      console.log(target);\n      console.log(target.offset().top);\n      console.log('header height');\n      console.log($('#header').height());\n\n      // Does a scroll target exist?\n      if (target.length) {\n        // Only prevent default if animation is actually gonna happen\n        //event.preventDefault();\n\n        var scrollTop = target.offset().top - $('#header').height() - 40;\n        console.log('header height: ' + $('#header').height());\n        console.log('scrollTop : ' + scrollTop);\n        $('html, body').animate({\n          scrollTop: scrollTop\n        }, 1000, function () {\n          // Callback after animation\n          // Must change focus!\n          var $target = $(target);\n          $target.focus();\n          if ($target.is(\":focus\")) {\n            // Checking if the target was focused\n            return false;\n          } else {\n            $target.attr('tabindex', '-1'); // Adding tabindex for elements not focusable\n            $target.focus(); // Set focus again\n          }\n        });\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///741\n")},285:function(module,exports,__webpack_require__){"use strict";eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n/*\r\n *  Bootstrap Touchspin - v4.7.3\r\n *  A mobile and touch friendly input spinner component for Bootstrap 3 & 4.\r\n *  https://www.virtuosoft.eu/code/bootstrap-touchspin/\r\n *\r\n *  Made by István Ujj-Mészáros\r\n *  Under MIT License\r\n */\n(function (factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(669)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function ($) {\n  'use strict';\n\n  var _currentSpinnerId = 0;\n  $.fn.TouchSpin = function (options) {\n    var defaults = {\n      min: 0,\n      // If null, there is no minimum enforced\n      max: 100,\n      // If null, there is no maximum enforced\n      initval: '',\n      replacementval: '',\n      firstclickvalueifempty: null,\n      step: 1,\n      decimals: 0,\n      stepinterval: 100,\n      forcestepdivisibility: 'round',\n      // none | floor | round | ceil\n      stepintervaldelay: 500,\n      verticalbuttons: false,\n      verticalup: '&plus;',\n      verticaldown: '&minus;',\n      verticalupclass: '',\n      verticaldownclass: '',\n      prefix: '',\n      postfix: '',\n      prefix_extraclass: '',\n      postfix_extraclass: '',\n      booster: true,\n      boostat: 10,\n      maxboostedstep: false,\n      mousewheel: true,\n      buttondown_class: 'btn btn-primary',\n      buttonup_class: 'btn btn-primary',\n      buttondown_txt: '&minus;',\n      buttonup_txt: '&plus;',\n      callback_before_calculation: function callback_before_calculation(value) {\n        return value;\n      },\n      callback_after_calculation: function callback_after_calculation(value) {\n        return value;\n      }\n    };\n    var attributeMap = {\n      min: 'min',\n      max: 'max',\n      initval: 'init-val',\n      replacementval: 'replacement-val',\n      firstclickvalueifempty: 'first-click-value-if-empty',\n      step: 'step',\n      decimals: 'decimals',\n      stepinterval: 'step-interval',\n      verticalbuttons: 'vertical-buttons',\n      verticalupclass: 'vertical-up-class',\n      verticaldownclass: 'vertical-down-class',\n      forcestepdivisibility: 'force-step-divisibility',\n      stepintervaldelay: 'step-interval-delay',\n      prefix: 'prefix',\n      postfix: 'postfix',\n      prefix_extraclass: 'prefix-extra-class',\n      postfix_extraclass: 'postfix-extra-class',\n      booster: 'booster',\n      boostat: 'boostat',\n      maxboostedstep: 'max-boosted-step',\n      mousewheel: 'mouse-wheel',\n      buttondown_class: 'button-down-class',\n      buttonup_class: 'button-up-class',\n      buttondown_txt: 'button-down-txt',\n      buttonup_txt: 'button-up-txt'\n    };\n    return this.each(function () {\n      var settings,\n        originalinput = $(this),\n        originalinput_data = originalinput.data(),\n        _detached_prefix,\n        _detached_postfix,\n        container,\n        elements,\n        verticalbuttons_html,\n        value,\n        downSpinTimer,\n        upSpinTimer,\n        downDelayTimeout,\n        upDelayTimeout,\n        spincount = 0,\n        spinning = false;\n      init();\n      function init() {\n        if (originalinput.data('alreadyinitialized')) {\n          return;\n        }\n        originalinput.data('alreadyinitialized', true);\n        _currentSpinnerId += 1;\n        originalinput.data('spinnerid', _currentSpinnerId);\n        if (!originalinput.is('input')) {\n          console.log('Must be an input.');\n          return;\n        }\n        _initSettings();\n        _setInitval();\n        _checkValue();\n        _buildHtml();\n        _initElements();\n        _updateButtonDisabledState();\n        _hideEmptyPrefixPostfix();\n        _setupMutationObservers();\n        _bindEvents();\n        _bindEventsInterface();\n      }\n      function _setInitval() {\n        if (settings.initval !== '' && originalinput.val() === '') {\n          originalinput.val(settings.initval);\n        }\n      }\n      function changeSettings(newsettings) {\n        _updateSettings(newsettings);\n        _checkValue();\n        var value = elements.input.val();\n        if (value !== '') {\n          value = parseFloat(settings.callback_before_calculation(elements.input.val()));\n          elements.input.val(settings.callback_after_calculation(parseFloat(value).toFixed(settings.decimals)));\n        }\n      }\n      function _initSettings() {\n        settings = $.extend({}, defaults, originalinput_data, _parseAttributes(), options);\n        if (parseFloat(settings.step) !== 1) {\n          var remainder;\n\n          // Modify settings.max to be divisible by step\n          remainder = settings.max % settings.step;\n          if (remainder !== 0) {\n            settings.max = parseFloat(settings.max) - remainder;\n          }\n\n          // Do the same with min, should work with negative numbers too\n          remainder = settings.min % settings.step;\n          if (remainder !== 0) {\n            settings.min = parseFloat(settings.min) + (parseFloat(settings.step) - remainder);\n          }\n        }\n      }\n      function _parseAttributes() {\n        var data = {};\n\n        // Setting up based on data attributes\n        $.each(attributeMap, function (key, value) {\n          var attrName = 'bts-' + value + '';\n          if (originalinput.is('[data-' + attrName + ']')) {\n            data[key] = originalinput.data(attrName);\n          }\n        });\n\n        // Setting up based on input attributes if specified (input attributes have precedence)\n        $.each(['min', 'max', 'step'], function (i, key) {\n          if (originalinput.is('[' + key + ']')) {\n            if (data[key] !== undefined) {\n              console.warn('Both the \"data-bts-' + key + '\" data attribute and the \"' + key + '\" individual attribute were specified, the individual attribute will take precedence on: ', originalinput);\n            }\n            data[key] = originalinput.attr(key);\n          }\n        });\n        return data;\n      }\n      function _destroy() {\n        var $parent = originalinput.parent();\n        stopSpin();\n        originalinput.off('.touchspin');\n        if ($parent.hasClass('bootstrap-touchspin-injected')) {\n          originalinput.siblings().remove();\n          originalinput.unwrap();\n        } else {\n          $('.bootstrap-touchspin-injected', $parent).remove();\n          $parent.removeClass('bootstrap-touchspin');\n        }\n        originalinput.data('alreadyinitialized', false);\n      }\n      function _updateSettings(newsettings) {\n        settings = $.extend({}, settings, newsettings);\n\n        // Update postfix and prefix texts if those settings were changed.\n        if (newsettings.postfix) {\n          var $postfix = originalinput.parent().find('.bootstrap-touchspin-postfix');\n          if ($postfix.length === 0) {\n            _detached_postfix.insertAfter(originalinput);\n          }\n          originalinput.parent().find('.bootstrap-touchspin-postfix .input-group-text').text(newsettings.postfix);\n        }\n        if (newsettings.prefix) {\n          var $prefix = originalinput.parent().find('.bootstrap-touchspin-prefix');\n          if ($prefix.length === 0) {\n            _detached_prefix.insertBefore(originalinput);\n          }\n          originalinput.parent().find('.bootstrap-touchspin-prefix .input-group-text').text(newsettings.prefix);\n        }\n        _hideEmptyPrefixPostfix();\n      }\n      function _buildHtml() {\n        var initval = originalinput.val(),\n          parentelement = originalinput.parent();\n        if (initval !== '') {\n          // initval may not be parsable as a number (callback_after_calculation() may decorate it so it cant be parsed).  Use the callbacks if provided.\n          initval = settings.callback_before_calculation(initval);\n          initval = settings.callback_after_calculation(parseFloat(initval).toFixed(settings.decimals));\n        }\n        originalinput.data('initvalue', initval).val(initval);\n        originalinput.addClass('form-control');\n        verticalbuttons_html = \"\\n          <span class=\\\"input-group-addon bootstrap-touchspin-vertical-button-wrapper\\\">\\n            <span class=\\\"input-group-btn-vertical\\\">\\n              <button tabindex=\\\"-1\\\" class=\\\"\".concat(settings.buttondown_class, \" bootstrap-touchspin-up \").concat(settings.verticalupclass, \"\\\" type=\\\"button\\\">\").concat(settings.verticalup, \"</button>\\n              <button tabindex=\\\"-1\\\" class=\\\"\").concat(settings.buttonup_class, \" bootstrap-touchspin-down \").concat(settings.verticaldownclass, \"\\\" type=\\\"button\\\">\").concat(settings.verticaldown, \"</button>\\n            </span>\\n          </span>\\n       \");\n        if (parentelement.hasClass('input-group')) {\n          _advanceInputGroup(parentelement);\n        } else {\n          _buildInputGroup();\n        }\n      }\n      function _advanceInputGroup(parentelement) {\n        parentelement.addClass('bootstrap-touchspin');\n        var prev = originalinput.prev(),\n          next = originalinput.next();\n        var downhtml,\n          uphtml,\n          prefixhtml = \"\\n            <span class=\\\"input-group-addon input-group-prepend bootstrap-touchspin-prefix input-group-prepend bootstrap-touchspin-injected\\\">\\n              <span class=\\\"input-group-text\\\">\".concat(settings.prefix, \"</span>\\n            </span>\\n          \"),\n          postfixhtml = \"\\n            <span class=\\\"input-group-addon input-group-append bootstrap-touchspin-postfix input-group-append bootstrap-touchspin-injected\\\">\\n              <span class=\\\"input-group-text\\\">\".concat(settings.postfix, \"</span>\\n            </span>\\n          \");\n        if (settings.verticalbuttons) {\n          $(verticalbuttons_html).insertAfter(originalinput);\n        } else {\n          if (prev.hasClass('input-group-btn') || prev.hasClass('input-group-prepend')) {\n            downhtml = \"\\n              <button tabindex=\\\"-1\\\" class=\\\"\".concat(settings.buttondown_class, \" bootstrap-touchspin-down bootstrap-touchspin-injected\\\" type=\\\"button\\\">\").concat(settings.buttondown_txt, \"</button>\\n            \");\n            prev.append(downhtml);\n          } else {\n            downhtml = \"\\n              <span class=\\\"input-group-btn input-group-prepend bootstrap-touchspin-injected\\\">\\n                <button tabindex=\\\"-1\\\" class=\\\"\".concat(settings.buttondown_class, \" bootstrap-touchspin-down\\\" type=\\\"button\\\">\").concat(settings.buttondown_txt, \"</button>\\n              </span>\\n            \");\n            $(downhtml).insertBefore(originalinput);\n          }\n          if (next.hasClass('input-group-btn') || next.hasClass('input-group-append')) {\n            uphtml = \"\\n            <button tabindex=\\\"-1\\\" class=\\\"\".concat(settings.buttonup_class, \" bootstrap-touchspin-up bootstrap-touchspin-injected\\\" type=\\\"button\\\">\").concat(settings.buttonup_txt, \"</button>\\n          \");\n            next.prepend(uphtml);\n          } else {\n            uphtml = \"\\n            <span class=\\\"input-group-btn input-group-append bootstrap-touchspin-injected\\\">\\n              <button tabindex=\\\"-1\\\" class=\\\"\".concat(settings.buttonup_class, \" bootstrap-touchspin-up\\\" type=\\\"button\\\">\").concat(settings.buttonup_txt, \"</button>\\n            </span>\\n          \");\n            $(uphtml).insertAfter(originalinput);\n          }\n        }\n        $(prefixhtml).insertBefore(originalinput);\n        $(postfixhtml).insertAfter(originalinput);\n        container = parentelement;\n      }\n      function _buildInputGroup() {\n        var html;\n        var inputGroupSize = '';\n        if (originalinput.hasClass('input-sm') || originalinput.hasClass('form-control-sm')) {\n          inputGroupSize = 'input-group-sm';\n        } else if (originalinput.hasClass('input-lg') || originalinput.hasClass('form-control-lg')) {\n          inputGroupSize = 'input-group-lg';\n        }\n        if (settings.verticalbuttons) {\n          html = \"\\n            <div class=\\\"input-group \".concat(inputGroupSize, \" bootstrap-touchspin bootstrap-touchspin-injected\\\">\\n              <span class=\\\"input-group-addon input-group-prepend bootstrap-touchspin-prefix\\\">\\n                <span class=\\\"input-group-text\\\">\").concat(settings.prefix, \"</span>\\n              </span>\\n              <span class=\\\"input-group-addon bootstrap-touchspin-postfix input-group-append\\\">\\n                <span class=\\\"input-group-text\\\">\").concat(settings.postfix, \"</span>\\n              </span>\\n              \").concat(verticalbuttons_html, \"\\n            </div>\\n          \");\n        } else {\n          html = \"\\n            <div class=\\\"input-group bootstrap-touchspin bootstrap-touchspin-injected\\\">\\n              <span class=\\\"input-group-btn input-group-prepend\\\">\\n                <button tabindex=\\\"-1\\\" class=\\\"\".concat(settings.buttondown_class, \" bootstrap-touchspin-down\\\" type=\\\"button\\\">\").concat(settings.buttondown_txt, \"</button>\\n              </span>\\n              <span class=\\\"input-group-addon bootstrap-touchspin-prefix input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">\").concat(settings.prefix, \"</span>\\n              </span>\\n              <span class=\\\"input-group-addon bootstrap-touchspin-postfix input-group-append\\\">\\n                <span class=\\\"input-group-text\\\">\").concat(settings.postfix, \"</span>\\n              </span>\\n              <span class=\\\"input-group-btn input-group-append\\\">\\n                <button tabindex=\\\"-1\\\" class=\\\"\").concat(settings.buttonup_class, \" bootstrap-touchspin-up\\\" type=\\\"button\\\">\").concat(settings.buttonup_txt, \"</button>\\n              </span>\\n            </div>\");\n        }\n        container = $(html).insertBefore(originalinput);\n        $('.bootstrap-touchspin-prefix', container).after(originalinput);\n        if (originalinput.hasClass('input-sm') || originalinput.hasClass('form-control-sm')) {\n          container.addClass('input-group-sm');\n        } else if (originalinput.hasClass('input-lg') || originalinput.hasClass('form-control-lg')) {\n          container.addClass('input-group-lg');\n        }\n      }\n      function _initElements() {\n        elements = {\n          down: $('.bootstrap-touchspin-down', container),\n          up: $('.bootstrap-touchspin-up', container),\n          input: $('input', container),\n          prefix: $('.bootstrap-touchspin-prefix', container).addClass(settings.prefix_extraclass),\n          postfix: $('.bootstrap-touchspin-postfix', container).addClass(settings.postfix_extraclass)\n        };\n      }\n      function _hideEmptyPrefixPostfix() {\n        if (settings.prefix === '') {\n          _detached_prefix = elements.prefix.detach();\n        }\n        if (settings.postfix === '') {\n          _detached_postfix = elements.postfix.detach();\n        }\n      }\n      function _bindEvents() {\n        originalinput.on('keydown.touchspin', function (ev) {\n          var code = ev.keyCode || ev.which;\n          if (code === 38) {\n            if (spinning !== 'up') {\n              upOnce();\n              startUpSpin();\n            }\n            ev.preventDefault();\n          } else if (code === 40) {\n            if (spinning !== 'down') {\n              downOnce();\n              startDownSpin();\n            }\n            ev.preventDefault();\n          } else if (code === 9 || code === 13) {\n            _checkValue();\n          }\n        });\n        originalinput.on('keyup.touchspin', function (ev) {\n          var code = ev.keyCode || ev.which;\n          if (code === 38) {\n            stopSpin();\n          } else if (code === 40) {\n            stopSpin();\n          }\n        });\n\n        // change is fired before blur, so we need to work around that\n        $(document).on('mousedown touchstart', function (event) {\n          if ($(event.target).is(originalinput)) {\n            return;\n          }\n          _checkValue();\n        });\n        originalinput.on('blur.touchspin', function () {\n          _checkValue();\n        });\n        elements.down.on('keydown', function (ev) {\n          var code = ev.keyCode || ev.which;\n          if (code === 32 || code === 13) {\n            if (spinning !== 'down') {\n              downOnce();\n              startDownSpin();\n            }\n            ev.preventDefault();\n          }\n        });\n        elements.down.on('keyup.touchspin', function (ev) {\n          var code = ev.keyCode || ev.which;\n          if (code === 32 || code === 13) {\n            stopSpin();\n          }\n        });\n        elements.up.on('keydown.touchspin', function (ev) {\n          var code = ev.keyCode || ev.which;\n          if (code === 32 || code === 13) {\n            if (spinning !== 'up') {\n              upOnce();\n              startUpSpin();\n            }\n            ev.preventDefault();\n          }\n        });\n        elements.up.on('keyup.touchspin', function (ev) {\n          var code = ev.keyCode || ev.which;\n          if (code === 32 || code === 13) {\n            stopSpin();\n          }\n        });\n        elements.down.on('mousedown.touchspin', function (ev) {\n          elements.down.off('touchstart.touchspin'); // android 4 workaround\n\n          if (originalinput.is(':disabled,[readonly]')) {\n            return;\n          }\n          downOnce();\n          startDownSpin();\n          ev.preventDefault();\n          ev.stopPropagation();\n        });\n        elements.down.on('touchstart.touchspin', function (ev) {\n          elements.down.off('mousedown.touchspin'); // android 4 workaround\n\n          if (originalinput.is(':disabled,[readonly]')) {\n            return;\n          }\n          downOnce();\n          startDownSpin();\n          ev.preventDefault();\n          ev.stopPropagation();\n        });\n        elements.up.on('mousedown.touchspin', function (ev) {\n          elements.up.off('touchstart.touchspin'); // android 4 workaround\n\n          if (originalinput.is(':disabled,[readonly]')) {\n            return;\n          }\n          upOnce();\n          startUpSpin();\n          ev.preventDefault();\n          ev.stopPropagation();\n        });\n        elements.up.on('touchstart.touchspin', function (ev) {\n          elements.up.off('mousedown.touchspin'); // android 4 workaround\n\n          if (originalinput.is(':disabled,[readonly]')) {\n            return;\n          }\n          upOnce();\n          startUpSpin();\n          ev.preventDefault();\n          ev.stopPropagation();\n        });\n        elements.up.on('mouseup.touchspin mouseout.touchspin touchleave.touchspin touchend.touchspin touchcancel.touchspin', function (ev) {\n          if (!spinning) {\n            return;\n          }\n          ev.stopPropagation();\n          stopSpin();\n        });\n        elements.down.on('mouseup.touchspin mouseout.touchspin touchleave.touchspin touchend.touchspin touchcancel.touchspin', function (ev) {\n          if (!spinning) {\n            return;\n          }\n          ev.stopPropagation();\n          stopSpin();\n        });\n        elements.down.on('mousemove.touchspin touchmove.touchspin', function (ev) {\n          if (!spinning) {\n            return;\n          }\n          ev.stopPropagation();\n          ev.preventDefault();\n        });\n        elements.up.on('mousemove.touchspin touchmove.touchspin', function (ev) {\n          if (!spinning) {\n            return;\n          }\n          ev.stopPropagation();\n          ev.preventDefault();\n        });\n        originalinput.on('mousewheel.touchspin DOMMouseScroll.touchspin', function (ev) {\n          if (!settings.mousewheel || !originalinput.is(':focus')) {\n            return;\n          }\n          var delta = ev.originalEvent.wheelDelta || -ev.originalEvent.deltaY || -ev.originalEvent.detail;\n          ev.stopPropagation();\n          ev.preventDefault();\n          if (delta < 0) {\n            downOnce();\n          } else {\n            upOnce();\n          }\n        });\n      }\n      function _bindEventsInterface() {\n        originalinput.on('touchspin.destroy', function () {\n          _destroy();\n        });\n        originalinput.on('touchspin.uponce', function () {\n          stopSpin();\n          upOnce();\n        });\n        originalinput.on('touchspin.downonce', function () {\n          stopSpin();\n          downOnce();\n        });\n        originalinput.on('touchspin.startupspin', function () {\n          startUpSpin();\n        });\n        originalinput.on('touchspin.startdownspin', function () {\n          startDownSpin();\n        });\n        originalinput.on('touchspin.stopspin', function () {\n          stopSpin();\n        });\n        originalinput.on('touchspin.updatesettings', function (e, newsettings) {\n          changeSettings(newsettings);\n        });\n      }\n      function _setupMutationObservers() {\n        if (typeof MutationObserver !== 'undefined') {\n          // MutationObserver is available\n          var observer = new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n              if (mutation.type === 'attributes' && (mutation.attributeName === 'disabled' || mutation.attributeName === 'readonly')) {\n                _updateButtonDisabledState();\n              }\n            });\n          });\n          observer.observe(originalinput[0], {\n            attributes: true\n          });\n        }\n      }\n      function _forcestepdivisibility(value) {\n        switch (settings.forcestepdivisibility) {\n          case 'round':\n            return (Math.round(value / settings.step) * settings.step).toFixed(settings.decimals);\n          case 'floor':\n            return (Math.floor(value / settings.step) * settings.step).toFixed(settings.decimals);\n          case 'ceil':\n            return (Math.ceil(value / settings.step) * settings.step).toFixed(settings.decimals);\n          default:\n            return value.toFixed(settings.decimals);\n        }\n      }\n      function _checkValue() {\n        var val, parsedval, returnval;\n        val = settings.callback_before_calculation(originalinput.val());\n        if (val === '') {\n          if (settings.replacementval !== '') {\n            originalinput.val(settings.replacementval);\n            originalinput.trigger('change');\n          }\n          return;\n        }\n        if (settings.decimals > 0 && val === '.') {\n          return;\n        }\n        parsedval = parseFloat(val);\n        if (isNaN(parsedval)) {\n          if (settings.replacementval !== '') {\n            parsedval = settings.replacementval;\n          } else {\n            parsedval = 0;\n          }\n        }\n        returnval = parsedval;\n        if (parsedval.toString() !== val) {\n          returnval = parsedval;\n        }\n        returnval = _forcestepdivisibility(parsedval);\n        if (settings.min !== null && parsedval < settings.min) {\n          returnval = settings.min;\n        }\n        if (settings.max !== null && parsedval > settings.max) {\n          returnval = settings.max;\n        }\n        if (parseFloat(parsedval).toString() !== parseFloat(returnval).toString()) {\n          originalinput.val(returnval);\n        }\n        originalinput.val(settings.callback_after_calculation(parseFloat(returnval).toFixed(settings.decimals)));\n      }\n      function _getBoostedStep() {\n        if (!settings.booster) {\n          return settings.step;\n        } else {\n          var boosted = Math.pow(2, Math.floor(spincount / settings.boostat)) * settings.step;\n          if (settings.maxboostedstep) {\n            if (boosted > settings.maxboostedstep) {\n              boosted = settings.maxboostedstep;\n              value = Math.round(value / boosted) * boosted;\n            }\n          }\n          return Math.max(settings.step, boosted);\n        }\n      }\n      function valueIfIsNaN() {\n        if (typeof settings.firstclickvalueifempty === 'number') {\n          return settings.firstclickvalueifempty;\n        } else {\n          return (settings.min + settings.max) / 2;\n        }\n      }\n      function _updateButtonDisabledState() {\n        var isDisabled = originalinput.is(':disabled,[readonly]');\n        elements.up.prop('disabled', isDisabled);\n        elements.down.prop('disabled', isDisabled);\n        if (isDisabled) {\n          stopSpin();\n        }\n      }\n      function upOnce() {\n        if (originalinput.is(':disabled,[readonly]')) {\n          return;\n        }\n        _checkValue();\n        value = parseFloat(settings.callback_before_calculation(elements.input.val()));\n        var initvalue = value;\n        var boostedstep;\n        if (isNaN(value)) {\n          value = valueIfIsNaN();\n        } else {\n          boostedstep = _getBoostedStep();\n          value = value + boostedstep;\n        }\n        if (settings.max !== null && value >= settings.max) {\n          value = settings.max;\n          originalinput.trigger('touchspin.on.max');\n          stopSpin();\n        }\n        elements.input.val(settings.callback_after_calculation(parseFloat(value).toFixed(settings.decimals)));\n        if (initvalue !== value) {\n          originalinput.trigger('change');\n        }\n      }\n      function downOnce() {\n        if (originalinput.is(':disabled,[readonly]')) {\n          return;\n        }\n        _checkValue();\n        value = parseFloat(settings.callback_before_calculation(elements.input.val()));\n        var initvalue = value;\n        var boostedstep;\n        if (isNaN(value)) {\n          value = valueIfIsNaN();\n        } else {\n          boostedstep = _getBoostedStep();\n          value = value - boostedstep;\n        }\n        if (settings.min !== null && value <= settings.min) {\n          value = settings.min;\n          originalinput.trigger('touchspin.on.min');\n          stopSpin();\n        }\n        elements.input.val(settings.callback_after_calculation(parseFloat(value).toFixed(settings.decimals)));\n        if (initvalue !== value) {\n          originalinput.trigger('change');\n        }\n      }\n      function startDownSpin() {\n        if (originalinput.is(':disabled,[readonly]')) {\n          return;\n        }\n        stopSpin();\n        spincount = 0;\n        spinning = 'down';\n        originalinput.trigger('touchspin.on.startspin');\n        originalinput.trigger('touchspin.on.startdownspin');\n        downDelayTimeout = setTimeout(function () {\n          downSpinTimer = setInterval(function () {\n            spincount++;\n            downOnce();\n          }, settings.stepinterval);\n        }, settings.stepintervaldelay);\n      }\n      function startUpSpin() {\n        if (originalinput.is(':disabled,[readonly]')) {\n          return;\n        }\n        stopSpin();\n        spincount = 0;\n        spinning = 'up';\n        originalinput.trigger('touchspin.on.startspin');\n        originalinput.trigger('touchspin.on.startupspin');\n        upDelayTimeout = setTimeout(function () {\n          upSpinTimer = setInterval(function () {\n            spincount++;\n            upOnce();\n          }, settings.stepinterval);\n        }, settings.stepintervaldelay);\n      }\n      function stopSpin() {\n        clearTimeout(downDelayTimeout);\n        clearTimeout(upDelayTimeout);\n        clearInterval(downSpinTimer);\n        clearInterval(upSpinTimer);\n        switch (spinning) {\n          case 'up':\n            originalinput.trigger('touchspin.on.stopupspin');\n            originalinput.trigger('touchspin.on.stopspin');\n            break;\n          case 'down':\n            originalinput.trigger('touchspin.on.stopdownspin');\n            originalinput.trigger('touchspin.on.stopspin');\n            break;\n        }\n        spincount = 0;\n        spinning = false;\n      }\n    });\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///285\n")},32:function(module){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar R = (typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + _typeof(listener));\n  }\n}\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function get() {\n    return defaultMaxListeners;\n  },\n  set: function set(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n  var handler = events[type];\n  if (handler === undefined) return false;\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);\n  }\n  return true;\n};\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n  return target;\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n};\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n  return this;\n};\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this;\n\n  // not listening for removeListener, no need to emit\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n  listeners = events[type];\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n  return this;\n};\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n  if (events !== undefined) {\n    var evlistener = events[type];\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n  return 0;\n}\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i) copy[i] = arr[i];\n  return copy;\n}\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) list[index] = list[index + 1];\n  list.pop();\n}\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    }\n    ;\n    eventTargetAgnosticAddListener(emitter, name, resolver, {\n      once: true\n    });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, {\n        once: true\n      });\n    }\n  });\n}\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + _typeof(emitter));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///32\n")},471:function(){eval('/*!\n\tZoom 1.7.21\n\tlicense: MIT\n\thttp://www.jacklmoore.com/zoom\n*/\n(function (o) {\n  var t = {\n    url: !1,\n    callback: !1,\n    target: !1,\n    duration: 120,\n    on: "mouseover",\n    touch: !0,\n    onZoomIn: !1,\n    onZoomOut: !1,\n    magnify: 1\n  };\n  o.zoom = function (t, n, e, i) {\n    var u,\n      c,\n      a,\n      r,\n      m,\n      l,\n      s,\n      f = o(t),\n      h = f.css("position"),\n      d = o(n);\n    return t.style.position = /(absolute|fixed)/.test(h) ? h : "relative", t.style.overflow = "hidden", e.style.width = e.style.height = "", o(e).addClass("zoomImg").css({\n      position: "absolute",\n      top: 0,\n      left: 0,\n      opacity: 0,\n      width: e.width * i,\n      height: e.height * i,\n      border: "none",\n      maxWidth: "none",\n      maxHeight: "none"\n    }).appendTo(t), {\n      init: function init() {\n        c = f.outerWidth(), u = f.outerHeight(), n === t ? (r = c, a = u) : (r = d.outerWidth(), a = d.outerHeight()), m = (e.width - c) / r, l = (e.height - u) / a, s = d.offset();\n      },\n      move: function move(o) {\n        var t = o.pageX - s.left,\n          n = o.pageY - s.top;\n        n = Math.max(Math.min(n, a), 0), t = Math.max(Math.min(t, r), 0), e.style.left = t * -m + "px", e.style.top = n * -l + "px";\n      }\n    };\n  }, o.fn.zoom = function (n) {\n    return this.each(function () {\n      var e = o.extend({}, t, n || {}),\n        i = e.target && o(e.target)[0] || this,\n        u = this,\n        c = o(u),\n        a = document.createElement("img"),\n        r = o(a),\n        m = "mousemove.zoom",\n        l = !1,\n        s = !1;\n      if (!e.url) {\n        var f = u.querySelector("img");\n        if (f && (e.url = f.getAttribute("data-src") || f.currentSrc || f.src), !e.url) return;\n      }\n      c.one("zoom.destroy", function (o, t) {\n        c.off(".zoom"), i.style.position = o, i.style.overflow = t, a.onload = null, r.remove();\n      }.bind(this, i.style.position, i.style.overflow)), a.onload = function () {\n        function t(t) {\n          f.init(), f.move(t), r.stop().fadeTo(o.support.opacity ? e.duration : 0, 1, o.isFunction(e.onZoomIn) ? e.onZoomIn.call(a) : !1);\n        }\n        function n() {\n          r.stop().fadeTo(e.duration, 0, o.isFunction(e.onZoomOut) ? e.onZoomOut.call(a) : !1);\n        }\n        var f = o.zoom(i, u, a, e.magnify);\n        "grab" === e.on ? c.on("mousedown.zoom", function (e) {\n          1 === e.which && (o(document).one("mouseup.zoom", function () {\n            n(), o(document).off(m, f.move);\n          }), t(e), o(document).on(m, f.move), e.preventDefault());\n        }) : "click" === e.on ? c.on("click.zoom", function (e) {\n          return l ? void 0 : (l = !0, t(e), o(document).on(m, f.move), o(document).one("click.zoom", function () {\n            n(), l = !1, o(document).off(m, f.move);\n          }), !1);\n        }) : "toggle" === e.on ? c.on("click.zoom", function (o) {\n          l ? n() : t(o), l = !l;\n        }) : "mouseover" === e.on && (f.init(), c.on("mouseenter.zoom", t).on("mouseleave.zoom", n).on(m, f.move)), e.touch && c.on("touchstart.zoom", function (o) {\n          o.preventDefault(), s ? (s = !1, n()) : (s = !0, t(o.originalEvent.touches[0] || o.originalEvent.changedTouches[0]));\n        }).on("touchmove.zoom", function (o) {\n          o.preventDefault(), f.move(o.originalEvent.touches[0] || o.originalEvent.changedTouches[0]);\n        }).on("touchend.zoom", function (o) {\n          o.preventDefault(), s && (s = !1, n());\n        }), o.isFunction(e.callback) && e.callback.call(a);\n      }, a.setAttribute("role", "presentation"), a.alt = "", a.src = e.url;\n    });\n  }, o.fn.zoom.defaults = t;\n})(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcxLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJlc3Rhcm9ja2V0LWRldi10b29scy8uL25vZGVfbW9kdWxlcy9qcXVlcnktem9vbS9qcXVlcnkuem9vbS5taW4uanM/NWQyMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcblx0Wm9vbSAxLjcuMjFcblx0bGljZW5zZTogTUlUXG5cdGh0dHA6Ly93d3cuamFja2xtb29yZS5jb20vem9vbVxuKi9cbihmdW5jdGlvbiAobykge1xuICB2YXIgdCA9IHtcbiAgICB1cmw6ICExLFxuICAgIGNhbGxiYWNrOiAhMSxcbiAgICB0YXJnZXQ6ICExLFxuICAgIGR1cmF0aW9uOiAxMjAsXG4gICAgb246IFwibW91c2VvdmVyXCIsXG4gICAgdG91Y2g6ICEwLFxuICAgIG9uWm9vbUluOiAhMSxcbiAgICBvblpvb21PdXQ6ICExLFxuICAgIG1hZ25pZnk6IDFcbiAgfTtcbiAgby56b29tID0gZnVuY3Rpb24gKHQsIG4sIGUsIGkpIHtcbiAgICB2YXIgdSxcbiAgICAgIGMsXG4gICAgICBhLFxuICAgICAgcixcbiAgICAgIG0sXG4gICAgICBsLFxuICAgICAgcyxcbiAgICAgIGYgPSBvKHQpLFxuICAgICAgaCA9IGYuY3NzKFwicG9zaXRpb25cIiksXG4gICAgICBkID0gbyhuKTtcbiAgICByZXR1cm4gdC5zdHlsZS5wb3NpdGlvbiA9IC8oYWJzb2x1dGV8Zml4ZWQpLy50ZXN0KGgpID8gaCA6IFwicmVsYXRpdmVcIiwgdC5zdHlsZS5vdmVyZmxvdyA9IFwiaGlkZGVuXCIsIGUuc3R5bGUud2lkdGggPSBlLnN0eWxlLmhlaWdodCA9IFwiXCIsIG8oZSkuYWRkQ2xhc3MoXCJ6b29tSW1nXCIpLmNzcyh7XG4gICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgdG9wOiAwLFxuICAgICAgbGVmdDogMCxcbiAgICAgIG9wYWNpdHk6IDAsXG4gICAgICB3aWR0aDogZS53aWR0aCAqIGksXG4gICAgICBoZWlnaHQ6IGUuaGVpZ2h0ICogaSxcbiAgICAgIGJvcmRlcjogXCJub25lXCIsXG4gICAgICBtYXhXaWR0aDogXCJub25lXCIsXG4gICAgICBtYXhIZWlnaHQ6IFwibm9uZVwiXG4gICAgfSkuYXBwZW5kVG8odCksIHtcbiAgICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICAgIGMgPSBmLm91dGVyV2lkdGgoKSwgdSA9IGYub3V0ZXJIZWlnaHQoKSwgbiA9PT0gdCA/IChyID0gYywgYSA9IHUpIDogKHIgPSBkLm91dGVyV2lkdGgoKSwgYSA9IGQub3V0ZXJIZWlnaHQoKSksIG0gPSAoZS53aWR0aCAtIGMpIC8gciwgbCA9IChlLmhlaWdodCAtIHUpIC8gYSwgcyA9IGQub2Zmc2V0KCk7XG4gICAgICB9LFxuICAgICAgbW92ZTogZnVuY3Rpb24gbW92ZShvKSB7XG4gICAgICAgIHZhciB0ID0gby5wYWdlWCAtIHMubGVmdCxcbiAgICAgICAgICBuID0gby5wYWdlWSAtIHMudG9wO1xuICAgICAgICBuID0gTWF0aC5tYXgoTWF0aC5taW4obiwgYSksIDApLCB0ID0gTWF0aC5tYXgoTWF0aC5taW4odCwgciksIDApLCBlLnN0eWxlLmxlZnQgPSB0ICogLW0gKyBcInB4XCIsIGUuc3R5bGUudG9wID0gbiAqIC1sICsgXCJweFwiO1xuICAgICAgfVxuICAgIH07XG4gIH0sIG8uZm4uem9vbSA9IGZ1bmN0aW9uIChuKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZSA9IG8uZXh0ZW5kKHt9LCB0LCBuIHx8IHt9KSxcbiAgICAgICAgaSA9IGUudGFyZ2V0ICYmIG8oZS50YXJnZXQpWzBdIHx8IHRoaXMsXG4gICAgICAgIHUgPSB0aGlzLFxuICAgICAgICBjID0gbyh1KSxcbiAgICAgICAgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiksXG4gICAgICAgIHIgPSBvKGEpLFxuICAgICAgICBtID0gXCJtb3VzZW1vdmUuem9vbVwiLFxuICAgICAgICBsID0gITEsXG4gICAgICAgIHMgPSAhMTtcbiAgICAgIGlmICghZS51cmwpIHtcbiAgICAgICAgdmFyIGYgPSB1LnF1ZXJ5U2VsZWN0b3IoXCJpbWdcIik7XG4gICAgICAgIGlmIChmICYmIChlLnVybCA9IGYuZ2V0QXR0cmlidXRlKFwiZGF0YS1zcmNcIikgfHwgZi5jdXJyZW50U3JjIHx8IGYuc3JjKSwgIWUudXJsKSByZXR1cm47XG4gICAgICB9XG4gICAgICBjLm9uZShcInpvb20uZGVzdHJveVwiLCBmdW5jdGlvbiAobywgdCkge1xuICAgICAgICBjLm9mZihcIi56b29tXCIpLCBpLnN0eWxlLnBvc2l0aW9uID0gbywgaS5zdHlsZS5vdmVyZmxvdyA9IHQsIGEub25sb2FkID0gbnVsbCwgci5yZW1vdmUoKTtcbiAgICAgIH0uYmluZCh0aGlzLCBpLnN0eWxlLnBvc2l0aW9uLCBpLnN0eWxlLm92ZXJmbG93KSksIGEub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBmdW5jdGlvbiB0KHQpIHtcbiAgICAgICAgICBmLmluaXQoKSwgZi5tb3ZlKHQpLCByLnN0b3AoKS5mYWRlVG8oby5zdXBwb3J0Lm9wYWNpdHkgPyBlLmR1cmF0aW9uIDogMCwgMSwgby5pc0Z1bmN0aW9uKGUub25ab29tSW4pID8gZS5vblpvb21Jbi5jYWxsKGEpIDogITEpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG4oKSB7XG4gICAgICAgICAgci5zdG9wKCkuZmFkZVRvKGUuZHVyYXRpb24sIDAsIG8uaXNGdW5jdGlvbihlLm9uWm9vbU91dCkgPyBlLm9uWm9vbU91dC5jYWxsKGEpIDogITEpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBmID0gby56b29tKGksIHUsIGEsIGUubWFnbmlmeSk7XG4gICAgICAgIFwiZ3JhYlwiID09PSBlLm9uID8gYy5vbihcIm1vdXNlZG93bi56b29tXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgMSA9PT0gZS53aGljaCAmJiAobyhkb2N1bWVudCkub25lKFwibW91c2V1cC56b29tXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG4oKSwgbyhkb2N1bWVudCkub2ZmKG0sIGYubW92ZSk7XG4gICAgICAgICAgfSksIHQoZSksIG8oZG9jdW1lbnQpLm9uKG0sIGYubW92ZSksIGUucHJldmVudERlZmF1bHQoKSk7XG4gICAgICAgIH0pIDogXCJjbGlja1wiID09PSBlLm9uID8gYy5vbihcImNsaWNrLnpvb21cIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICByZXR1cm4gbCA/IHZvaWQgMCA6IChsID0gITAsIHQoZSksIG8oZG9jdW1lbnQpLm9uKG0sIGYubW92ZSksIG8oZG9jdW1lbnQpLm9uZShcImNsaWNrLnpvb21cIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbigpLCBsID0gITEsIG8oZG9jdW1lbnQpLm9mZihtLCBmLm1vdmUpO1xuICAgICAgICAgIH0pLCAhMSk7XG4gICAgICAgIH0pIDogXCJ0b2dnbGVcIiA9PT0gZS5vbiA/IGMub24oXCJjbGljay56b29tXCIsIGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgbCA/IG4oKSA6IHQobyksIGwgPSAhbDtcbiAgICAgICAgfSkgOiBcIm1vdXNlb3ZlclwiID09PSBlLm9uICYmIChmLmluaXQoKSwgYy5vbihcIm1vdXNlZW50ZXIuem9vbVwiLCB0KS5vbihcIm1vdXNlbGVhdmUuem9vbVwiLCBuKS5vbihtLCBmLm1vdmUpKSwgZS50b3VjaCAmJiBjLm9uKFwidG91Y2hzdGFydC56b29tXCIsIGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgby5wcmV2ZW50RGVmYXVsdCgpLCBzID8gKHMgPSAhMSwgbigpKSA6IChzID0gITAsIHQoby5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0gfHwgby5vcmlnaW5hbEV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdKSk7XG4gICAgICAgIH0pLm9uKFwidG91Y2htb3ZlLnpvb21cIiwgZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICBvLnByZXZlbnREZWZhdWx0KCksIGYubW92ZShvLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXSB8fCBvLm9yaWdpbmFsRXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0pO1xuICAgICAgICB9KS5vbihcInRvdWNoZW5kLnpvb21cIiwgZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICBvLnByZXZlbnREZWZhdWx0KCksIHMgJiYgKHMgPSAhMSwgbigpKTtcbiAgICAgICAgfSksIG8uaXNGdW5jdGlvbihlLmNhbGxiYWNrKSAmJiBlLmNhbGxiYWNrLmNhbGwoYSk7XG4gICAgICB9LCBhLnNldEF0dHJpYnV0ZShcInJvbGVcIiwgXCJwcmVzZW50YXRpb25cIiksIGEuYWx0ID0gXCJcIiwgYS5zcmMgPSBlLnVybDtcbiAgICB9KTtcbiAgfSwgby5mbi56b29tLmRlZmF1bHRzID0gdDtcbn0pKHdpbmRvdy5qUXVlcnkpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///471\n')},64:function(module,__unused_webpack_exports,__webpack_require__){eval("/* module decorator */ module = __webpack_require__.nmd(module);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n(function (window, factory) {\n  var lazySizes = factory(window, window.document, Date);\n  window.lazySizes = lazySizes;\n  if (( false ? 0 : _typeof(module)) == 'object' && module.exports) {\n    module.exports = lazySizes;\n  }\n})(typeof window != 'undefined' ? window : {},\n/**\n * import(\"./types/global\")\n * @typedef { import(\"./types/lazysizes-config\").LazySizesConfigPartial } LazySizesConfigPartial\n */\nfunction l(window, document, Date) {\n  // Pass in the window Date function also for SSR because the Date class can be lost\n  'use strict';\n\n  /*jshint eqnull:true */\n  var lazysizes,\n    /**\n     * @type { LazySizesConfigPartial }\n     */\n    lazySizesCfg;\n  (function () {\n    var prop;\n    var lazySizesDefaults = {\n      lazyClass: 'lazyload',\n      loadedClass: 'lazyloaded',\n      loadingClass: 'lazyloading',\n      preloadClass: 'lazypreload',\n      errorClass: 'lazyerror',\n      //strictClass: 'lazystrict',\n      autosizesClass: 'lazyautosizes',\n      fastLoadedClass: 'ls-is-cached',\n      iframeLoadMode: 0,\n      srcAttr: 'data-src',\n      srcsetAttr: 'data-srcset',\n      sizesAttr: 'data-sizes',\n      //preloadAfterLoad: false,\n      minSize: 40,\n      customMedia: {},\n      init: true,\n      expFactor: 1.5,\n      hFac: 0.8,\n      loadMode: 2,\n      loadHidden: true,\n      ricTimeout: 0,\n      throttleDelay: 125\n    };\n    lazySizesCfg = window.lazySizesConfig || window.lazysizesConfig || {};\n    for (prop in lazySizesDefaults) {\n      if (!(prop in lazySizesCfg)) {\n        lazySizesCfg[prop] = lazySizesDefaults[prop];\n      }\n    }\n  })();\n  if (!document || !document.getElementsByClassName) {\n    return {\n      init: function init() {},\n      /**\n       * @type { LazySizesConfigPartial }\n       */\n      cfg: lazySizesCfg,\n      /**\n       * @type { true }\n       */\n      noSupport: true\n    };\n  }\n  var docElem = document.documentElement;\n  var supportPicture = window.HTMLPictureElement;\n  var _addEventListener = 'addEventListener';\n  var _getAttribute = 'getAttribute';\n\n  /**\n   * Update to bind to window because 'this' becomes null during SSR\n   * builds.\n   */\n  var addEventListener = window[_addEventListener].bind(window);\n  var setTimeout = window.setTimeout;\n  var requestAnimationFrame = window.requestAnimationFrame || setTimeout;\n  var requestIdleCallback = window.requestIdleCallback;\n  var regPicture = /^picture$/i;\n  var loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];\n  var regClassCache = {};\n  var forEach = Array.prototype.forEach;\n\n  /**\n   * @param ele {Element}\n   * @param cls {string}\n   */\n  var hasClass = function hasClass(ele, cls) {\n    if (!regClassCache[cls]) {\n      regClassCache[cls] = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');\n    }\n    return regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];\n  };\n\n  /**\n   * @param ele {Element}\n   * @param cls {string}\n   */\n  var addClass = function addClass(ele, cls) {\n    if (!hasClass(ele, cls)) {\n      ele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);\n    }\n  };\n\n  /**\n   * @param ele {Element}\n   * @param cls {string}\n   */\n  var removeClass = function removeClass(ele, cls) {\n    var reg;\n    if (reg = hasClass(ele, cls)) {\n      ele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));\n    }\n  };\n  var _addRemoveLoadEvents = function addRemoveLoadEvents(dom, fn, add) {\n    var action = add ? _addEventListener : 'removeEventListener';\n    if (add) {\n      _addRemoveLoadEvents(dom, fn);\n    }\n    loadEvents.forEach(function (evt) {\n      dom[action](evt, fn);\n    });\n  };\n\n  /**\n   * @param elem { Element }\n   * @param name { string }\n   * @param detail { any }\n   * @param noBubbles { boolean }\n   * @param noCancelable { boolean }\n   * @returns { CustomEvent }\n   */\n  var triggerEvent = function triggerEvent(elem, name, detail, noBubbles, noCancelable) {\n    var event = document.createEvent('Event');\n    if (!detail) {\n      detail = {};\n    }\n    detail.instance = lazysizes;\n    event.initEvent(name, !noBubbles, !noCancelable);\n    event.detail = detail;\n    elem.dispatchEvent(event);\n    return event;\n  };\n  var updatePolyfill = function updatePolyfill(el, full) {\n    var polyfill;\n    if (!supportPicture && (polyfill = window.picturefill || lazySizesCfg.pf)) {\n      if (full && full.src && !el[_getAttribute]('srcset')) {\n        el.setAttribute('srcset', full.src);\n      }\n      polyfill({\n        reevaluate: true,\n        elements: [el]\n      });\n    } else if (full && full.src) {\n      el.src = full.src;\n    }\n  };\n  var getCSS = function getCSS(elem, style) {\n    return (getComputedStyle(elem, null) || {})[style];\n  };\n\n  /**\n   *\n   * @param elem { Element }\n   * @param parent { Element }\n   * @param [width] {number}\n   * @returns {number}\n   */\n  var getWidth = function getWidth(elem, parent, width) {\n    width = width || elem.offsetWidth;\n    while (width < lazySizesCfg.minSize && parent && !elem._lazysizesWidth) {\n      width = parent.offsetWidth;\n      parent = parent.parentNode;\n    }\n    return width;\n  };\n  var rAF = function () {\n    var running, waiting;\n    var firstFns = [];\n    var secondFns = [];\n    var fns = firstFns;\n    var run = function run() {\n      var runFns = fns;\n      fns = firstFns.length ? secondFns : firstFns;\n      running = true;\n      waiting = false;\n      while (runFns.length) {\n        runFns.shift()();\n      }\n      running = false;\n    };\n    var rafBatch = function rafBatch(fn, queue) {\n      if (running && !queue) {\n        fn.apply(this, arguments);\n      } else {\n        fns.push(fn);\n        if (!waiting) {\n          waiting = true;\n          (document.hidden ? setTimeout : requestAnimationFrame)(run);\n        }\n      }\n    };\n    rafBatch._lsFlush = run;\n    return rafBatch;\n  }();\n  var rAFIt = function rAFIt(fn, simple) {\n    return simple ? function () {\n      rAF(fn);\n    } : function () {\n      var that = this;\n      var args = arguments;\n      rAF(function () {\n        fn.apply(that, args);\n      });\n    };\n  };\n  var throttle = function throttle(fn) {\n    var running;\n    var lastTime = 0;\n    var gDelay = lazySizesCfg.throttleDelay;\n    var rICTimeout = lazySizesCfg.ricTimeout;\n    var run = function run() {\n      running = false;\n      lastTime = Date.now();\n      fn();\n    };\n    var idleCallback = requestIdleCallback && rICTimeout > 49 ? function () {\n      requestIdleCallback(run, {\n        timeout: rICTimeout\n      });\n      if (rICTimeout !== lazySizesCfg.ricTimeout) {\n        rICTimeout = lazySizesCfg.ricTimeout;\n      }\n    } : rAFIt(function () {\n      setTimeout(run);\n    }, true);\n    return function (isPriority) {\n      var delay;\n      if (isPriority = isPriority === true) {\n        rICTimeout = 33;\n      }\n      if (running) {\n        return;\n      }\n      running = true;\n      delay = gDelay - (Date.now() - lastTime);\n      if (delay < 0) {\n        delay = 0;\n      }\n      if (isPriority || delay < 9) {\n        idleCallback();\n      } else {\n        setTimeout(idleCallback, delay);\n      }\n    };\n  };\n\n  //based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html\n  var debounce = function debounce(func) {\n    var timeout, timestamp;\n    var wait = 99;\n    var run = function run() {\n      timeout = null;\n      func();\n    };\n    var _later = function later() {\n      var last = Date.now() - timestamp;\n      if (last < wait) {\n        setTimeout(_later, wait - last);\n      } else {\n        (requestIdleCallback || run)(run);\n      }\n    };\n    return function () {\n      timestamp = Date.now();\n      if (!timeout) {\n        timeout = setTimeout(_later, wait);\n      }\n    };\n  };\n  var loader = function () {\n    var preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;\n    var eLvW, elvH, eLtop, eLleft, eLright, eLbottom, isBodyHidden;\n    var regImg = /^img$/i;\n    var regIframe = /^iframe$/i;\n    var supportScroll = 'onscroll' in window && !/(gle|ing)bot/.test(navigator.userAgent);\n    var shrinkExpand = 0;\n    var currentExpand = 0;\n    var isLoading = 0;\n    var lowRuns = -1;\n    var resetPreloading = function resetPreloading(e) {\n      isLoading--;\n      if (!e || isLoading < 0 || !e.target) {\n        isLoading = 0;\n      }\n    };\n    var isVisible = function isVisible(elem) {\n      if (isBodyHidden == null) {\n        isBodyHidden = getCSS(document.body, 'visibility') == 'hidden';\n      }\n      return isBodyHidden || !(getCSS(elem.parentNode, 'visibility') == 'hidden' && getCSS(elem, 'visibility') == 'hidden');\n    };\n    var isNestedVisible = function isNestedVisible(elem, elemExpand) {\n      var outerRect;\n      var parent = elem;\n      var visible = isVisible(elem);\n      eLtop -= elemExpand;\n      eLbottom += elemExpand;\n      eLleft -= elemExpand;\n      eLright += elemExpand;\n      while (visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem) {\n        visible = (getCSS(parent, 'opacity') || 1) > 0;\n        if (visible && getCSS(parent, 'overflow') != 'visible') {\n          outerRect = parent.getBoundingClientRect();\n          visible = eLright > outerRect.left && eLleft < outerRect.right && eLbottom > outerRect.top - 1 && eLtop < outerRect.bottom + 1;\n        }\n      }\n      return visible;\n    };\n    var checkElements = function checkElements() {\n      var eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal, beforeExpandVal, defaultExpand, preloadExpand, hFac;\n      var lazyloadElems = lazysizes.elements;\n      if ((loadMode = lazySizesCfg.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)) {\n        i = 0;\n        lowRuns++;\n        for (; i < eLlen; i++) {\n          if (!lazyloadElems[i] || lazyloadElems[i]._lazyRace) {\n            continue;\n          }\n          if (!supportScroll || lazysizes.prematureUnveil && lazysizes.prematureUnveil(lazyloadElems[i])) {\n            unveilElement(lazyloadElems[i]);\n            continue;\n          }\n          if (!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)) {\n            elemExpand = currentExpand;\n          }\n          if (!defaultExpand) {\n            defaultExpand = !lazySizesCfg.expand || lazySizesCfg.expand < 1 ? docElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370 : lazySizesCfg.expand;\n            lazysizes._defEx = defaultExpand;\n            preloadExpand = defaultExpand * lazySizesCfg.expFactor;\n            hFac = lazySizesCfg.hFac;\n            isBodyHidden = null;\n            if (currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden) {\n              currentExpand = preloadExpand;\n              lowRuns = 0;\n            } else if (loadMode > 1 && lowRuns > 1 && isLoading < 6) {\n              currentExpand = defaultExpand;\n            } else {\n              currentExpand = shrinkExpand;\n            }\n          }\n          if (beforeExpandVal !== elemExpand) {\n            eLvW = innerWidth + elemExpand * hFac;\n            elvH = innerHeight + elemExpand;\n            elemNegativeExpand = elemExpand * -1;\n            beforeExpandVal = elemExpand;\n          }\n          rect = lazyloadElems[i].getBoundingClientRect();\n          if ((eLbottom = rect.bottom) >= elemNegativeExpand && (eLtop = rect.top) <= elvH && (eLright = rect.right) >= elemNegativeExpand * hFac && (eLleft = rect.left) <= eLvW && (eLbottom || eLright || eLleft || eLtop) && (lazySizesCfg.loadHidden || isVisible(lazyloadElems[i])) && (isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4) || isNestedVisible(lazyloadElems[i], elemExpand))) {\n            unveilElement(lazyloadElems[i]);\n            loadedSomething = true;\n            if (isLoading > 9) {\n              break;\n            }\n          } else if (!loadedSomething && isCompleted && !autoLoadElem && isLoading < 4 && lowRuns < 4 && loadMode > 2 && (preloadElems[0] || lazySizesCfg.preloadAfterLoad) && (preloadElems[0] || !elemExpandVal && (eLbottom || eLright || eLleft || eLtop || lazyloadElems[i][_getAttribute](lazySizesCfg.sizesAttr) != 'auto'))) {\n            autoLoadElem = preloadElems[0] || lazyloadElems[i];\n          }\n        }\n        if (autoLoadElem && !loadedSomething) {\n          unveilElement(autoLoadElem);\n        }\n      }\n    };\n    var throttledCheckElements = throttle(checkElements);\n    var switchLoadingClass = function switchLoadingClass(e) {\n      var elem = e.target;\n      if (elem._lazyCache) {\n        delete elem._lazyCache;\n        return;\n      }\n      resetPreloading(e);\n      addClass(elem, lazySizesCfg.loadedClass);\n      removeClass(elem, lazySizesCfg.loadingClass);\n      _addRemoveLoadEvents(elem, rafSwitchLoadingClass);\n      triggerEvent(elem, 'lazyloaded');\n    };\n    var rafedSwitchLoadingClass = rAFIt(switchLoadingClass);\n    var rafSwitchLoadingClass = function rafSwitchLoadingClass(e) {\n      rafedSwitchLoadingClass({\n        target: e.target\n      });\n    };\n    var changeIframeSrc = function changeIframeSrc(elem, src) {\n      var loadMode = elem.getAttribute('data-load-mode') || lazySizesCfg.iframeLoadMode;\n\n      // loadMode can be also a string!\n      if (loadMode == 0) {\n        elem.contentWindow.location.replace(src);\n      } else if (loadMode == 1) {\n        elem.src = src;\n      }\n    };\n    var handleSources = function handleSources(source) {\n      var customMedia;\n      var sourceSrcset = source[_getAttribute](lazySizesCfg.srcsetAttr);\n      if (customMedia = lazySizesCfg.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) {\n        source.setAttribute('media', customMedia);\n      }\n      if (sourceSrcset) {\n        source.setAttribute('srcset', sourceSrcset);\n      }\n    };\n    var lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg) {\n      var src, srcset, parent, isPicture, event, firesLoad;\n      if (!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented) {\n        if (sizes) {\n          if (isAuto) {\n            addClass(elem, lazySizesCfg.autosizesClass);\n          } else {\n            elem.setAttribute('sizes', sizes);\n          }\n        }\n        srcset = elem[_getAttribute](lazySizesCfg.srcsetAttr);\n        src = elem[_getAttribute](lazySizesCfg.srcAttr);\n        if (isImg) {\n          parent = elem.parentNode;\n          isPicture = parent && regPicture.test(parent.nodeName || '');\n        }\n        firesLoad = detail.firesLoad || 'src' in elem && (srcset || src || isPicture);\n        event = {\n          target: elem\n        };\n        addClass(elem, lazySizesCfg.loadingClass);\n        if (firesLoad) {\n          clearTimeout(resetPreloadingTimer);\n          resetPreloadingTimer = setTimeout(resetPreloading, 2500);\n          _addRemoveLoadEvents(elem, rafSwitchLoadingClass, true);\n        }\n        if (isPicture) {\n          forEach.call(parent.getElementsByTagName('source'), handleSources);\n        }\n        if (srcset) {\n          elem.setAttribute('srcset', srcset);\n        } else if (src && !isPicture) {\n          if (regIframe.test(elem.nodeName)) {\n            changeIframeSrc(elem, src);\n          } else {\n            elem.src = src;\n          }\n        }\n        if (isImg && (srcset || isPicture)) {\n          updatePolyfill(elem, {\n            src: src\n          });\n        }\n      }\n      if (elem._lazyRace) {\n        delete elem._lazyRace;\n      }\n      removeClass(elem, lazySizesCfg.lazyClass);\n      rAF(function () {\n        // Part of this can be removed as soon as this fix is older: https://bugs.chromium.org/p/chromium/issues/detail?id=7731 (2015)\n        var isLoaded = elem.complete && elem.naturalWidth > 1;\n        if (!firesLoad || isLoaded) {\n          if (isLoaded) {\n            addClass(elem, lazySizesCfg.fastLoadedClass);\n          }\n          switchLoadingClass(event);\n          elem._lazyCache = true;\n          setTimeout(function () {\n            if ('_lazyCache' in elem) {\n              delete elem._lazyCache;\n            }\n          }, 9);\n        }\n        if (elem.loading == 'lazy') {\n          isLoading--;\n        }\n      }, true);\n    });\n\n    /**\n     *\n     * @param elem { Element }\n     */\n    var unveilElement = function unveilElement(elem) {\n      if (elem._lazyRace) {\n        return;\n      }\n      var detail;\n      var isImg = regImg.test(elem.nodeName);\n\n      //allow using sizes=\"auto\", but don't use. it's invalid. Use data-sizes=\"auto\" or a valid value for sizes instead (i.e.: sizes=\"80vw\")\n      var sizes = isImg && (elem[_getAttribute](lazySizesCfg.sizesAttr) || elem[_getAttribute]('sizes'));\n      var isAuto = sizes == 'auto';\n      if ((isAuto || !isCompleted) && isImg && (elem[_getAttribute]('src') || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesCfg.errorClass) && hasClass(elem, lazySizesCfg.lazyClass)) {\n        return;\n      }\n      detail = triggerEvent(elem, 'lazyunveilread').detail;\n      if (isAuto) {\n        autoSizer.updateElem(elem, true, elem.offsetWidth);\n      }\n      elem._lazyRace = true;\n      isLoading++;\n      lazyUnveil(elem, detail, isAuto, sizes, isImg);\n    };\n    var afterScroll = debounce(function () {\n      lazySizesCfg.loadMode = 3;\n      throttledCheckElements();\n    });\n    var altLoadmodeScrollListner = function altLoadmodeScrollListner() {\n      if (lazySizesCfg.loadMode == 3) {\n        lazySizesCfg.loadMode = 2;\n      }\n      afterScroll();\n    };\n    var _onload = function onload() {\n      if (isCompleted) {\n        return;\n      }\n      if (Date.now() - started < 999) {\n        setTimeout(_onload, 999);\n        return;\n      }\n      isCompleted = true;\n      lazySizesCfg.loadMode = 3;\n      throttledCheckElements();\n      addEventListener('scroll', altLoadmodeScrollListner, true);\n    };\n    return {\n      _: function _() {\n        started = Date.now();\n        lazysizes.elements = document.getElementsByClassName(lazySizesCfg.lazyClass);\n        preloadElems = document.getElementsByClassName(lazySizesCfg.lazyClass + ' ' + lazySizesCfg.preloadClass);\n        addEventListener('scroll', throttledCheckElements, true);\n        addEventListener('resize', throttledCheckElements, true);\n        addEventListener('pageshow', function (e) {\n          if (e.persisted) {\n            var loadingElements = document.querySelectorAll('.' + lazySizesCfg.loadingClass);\n            if (loadingElements.length && loadingElements.forEach) {\n              requestAnimationFrame(function () {\n                loadingElements.forEach(function (img) {\n                  if (img.complete) {\n                    unveilElement(img);\n                  }\n                });\n              });\n            }\n          }\n        });\n        if (window.MutationObserver) {\n          new MutationObserver(throttledCheckElements).observe(docElem, {\n            childList: true,\n            subtree: true,\n            attributes: true\n          });\n        } else {\n          docElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);\n          docElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);\n          setInterval(throttledCheckElements, 999);\n        }\n        addEventListener('hashchange', throttledCheckElements, true);\n\n        //, 'fullscreenchange'\n        ['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend'].forEach(function (name) {\n          document[_addEventListener](name, throttledCheckElements, true);\n        });\n        if (/d$|^c/.test(document.readyState)) {\n          _onload();\n        } else {\n          addEventListener('load', _onload);\n          document[_addEventListener]('DOMContentLoaded', throttledCheckElements);\n          setTimeout(_onload, 20000);\n        }\n        if (lazysizes.elements.length) {\n          checkElements();\n          rAF._lsFlush();\n        } else {\n          throttledCheckElements();\n        }\n      },\n      checkElems: throttledCheckElements,\n      unveil: unveilElement,\n      _aLSL: altLoadmodeScrollListner\n    };\n  }();\n  var autoSizer = function () {\n    var autosizesElems;\n    var sizeElement = rAFIt(function (elem, parent, event, width) {\n      var sources, i, len;\n      elem._lazysizesWidth = width;\n      width += 'px';\n      elem.setAttribute('sizes', width);\n      if (regPicture.test(parent.nodeName || '')) {\n        sources = parent.getElementsByTagName('source');\n        for (i = 0, len = sources.length; i < len; i++) {\n          sources[i].setAttribute('sizes', width);\n        }\n      }\n      if (!event.detail.dataAttr) {\n        updatePolyfill(elem, event.detail);\n      }\n    });\n    /**\n     *\n     * @param elem {Element}\n     * @param dataAttr\n     * @param [width] { number }\n     */\n    var getSizeElement = function getSizeElement(elem, dataAttr, width) {\n      var event;\n      var parent = elem.parentNode;\n      if (parent) {\n        width = getWidth(elem, parent, width);\n        event = triggerEvent(elem, 'lazybeforesizes', {\n          width: width,\n          dataAttr: !!dataAttr\n        });\n        if (!event.defaultPrevented) {\n          width = event.detail.width;\n          if (width && width !== elem._lazysizesWidth) {\n            sizeElement(elem, parent, event, width);\n          }\n        }\n      }\n    };\n    var updateElementsSizes = function updateElementsSizes() {\n      var i;\n      var len = autosizesElems.length;\n      if (len) {\n        i = 0;\n        for (; i < len; i++) {\n          getSizeElement(autosizesElems[i]);\n        }\n      }\n    };\n    var debouncedUpdateElementsSizes = debounce(updateElementsSizes);\n    return {\n      _: function _() {\n        autosizesElems = document.getElementsByClassName(lazySizesCfg.autosizesClass);\n        addEventListener('resize', debouncedUpdateElementsSizes);\n      },\n      checkElems: debouncedUpdateElementsSizes,\n      updateElem: getSizeElement\n    };\n  }();\n  var _init = function init() {\n    if (!_init.i && document.getElementsByClassName) {\n      _init.i = true;\n      autoSizer._();\n      loader._();\n    }\n  };\n  setTimeout(function () {\n    if (lazySizesCfg.init) {\n      _init();\n    }\n  });\n  lazysizes = {\n    /**\n     * @type { LazySizesConfigPartial }\n     */\n    cfg: lazySizesCfg,\n    autoSizer: autoSizer,\n    loader: loader,\n    init: _init,\n    uP: updatePolyfill,\n    aC: addClass,\n    rC: removeClass,\n    hC: hasClass,\n    fire: triggerEvent,\n    gW: getWidth,\n    rAF: rAF\n  };\n  return lazysizes;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///64\n")},485:function(){"use strict";eval("// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDg1LmpzIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJlc3Rhcm9ja2V0LWRldi10b29scy8uL2Nzcy90aGVtZS5zY3NzP2Q3YjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///485\n")},669:function(n){"use strict";n.exports=jQuery}},__webpack_module_cache__={};function __webpack_require__(n){var t=__webpack_module_cache__[n];if(void 0!==t)return t.exports;var e=__webpack_module_cache__[n]={id:n,loaded:!1,exports:{}};return __webpack_modules__[n](e,e.exports,__webpack_require__),e.loaded=!0,e.exports}__webpack_require__.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=function(n,t){for(var e in t)__webpack_require__.o(t,e)&&!__webpack_require__.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:t[e]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),__webpack_require__.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},__webpack_require__.nmd=function(n){return n.paths=[],n.children||(n.children=[]),n},__webpack_require__(741);var __webpack_exports__=__webpack_require__(485)})();